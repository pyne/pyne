 
/*********************************************************/
/***            Symbolic Enrichment Functions          ***/
/*** WARNING: This file is auto-generated.             ***/
/***                  DO NOT MODIFY!!!                 ***/
/*********************************************************/
#ifndef PYNE_IS_AMALGAMATED
#include "enrichment_symbolic.h"
#endif

pyne::enrichment::Cascade pyne::enrichment::solve_symbolic(pyne::enrichment::Cascade & orig_casc)
{
  pyne::enrichment::Cascade casc = orig_casc;
  int j = casc.j;
  int k = casc.k;
  double alpha = casc.alpha;
  double NP0 = casc.N;
  //double NT0 = casc.M;
  double Mstar = casc.Mstar;
  double xPj = casc.x_prod_j;
  //double xFj = casc.x_feed_j;
  double xTj = casc.x_tail_j;
  int ncomp = casc.mat_feed.comp.size();
  double LpF = -1.0, PpF = -1.0, TpF = -1.0, 
         SWUpF = -1.0, SWUpP = -1.0, 
         NP_b = -1.0, NP_sqrt_base = -1.0, NP_2a = -1.0, 
         NP1 = -1.0, NT1 = -1.0;
  double * MW = new double [ncomp];
  double * xP = new double [ncomp];
  double * xF = new double [ncomp];
  double * xT = new double [ncomp];
  double n38 = 0.0,
         n39 = 0.0,
         n30 = 0.0,
         n31 = 0.0,
         n32 = 0.0,
         n33 = 0.0,
         n34 = 0.0,
         n35 = 0.0,
         n36 = 0.0,
         n37 = 0.0,
         g7 = 0.0,
         g6 = 0.0,
         g5 = 0.0,
         g4 = 0.0,
         g3 = 0.0,
         g2 = 0.0,
         g1 = 0.0,
         g0 = 0.0,
         g9 = 0.0,
         g8 = 0.0,
         n85 = 0.0,
         n84 = 0.0,
         n87 = 0.0,
         n86 = 0.0,
         n81 = 0.0,
         n80 = 0.0,
         n83 = 0.0,
         n82 = 0.0,
         n89 = 0.0,
         n88 = 0.0,
         g26 = 0.0,
         g27 = 0.0,
         g24 = 0.0,
         g25 = 0.0,
         g22 = 0.0,
         g23 = 0.0,
         g20 = 0.0,
         g21 = 0.0,
         n248 = 0.0,
         n249 = 0.0,
         g28 = 0.0,
         g29 = 0.0,
         g53 = 0.0,
         g52 = 0.0,
         g51 = 0.0,
         g50 = 0.0,
         g57 = 0.0,
         g56 = 0.0,
         g55 = 0.0,
         g54 = 0.0,
         n143 = 0.0,
         n142 = 0.0,
         g59 = 0.0,
         g58 = 0.0,
         n147 = 0.0,
         n146 = 0.0,
         n145 = 0.0,
         n144 = 0.0,
         n74 = 0.0,
         n75 = 0.0,
         n76 = 0.0,
         n77 = 0.0,
         n70 = 0.0,
         n71 = 0.0,
         n72 = 0.0,
         n73 = 0.0,
         n78 = 0.0,
         n79 = 0.0,
         g128 = 0.0,
         g129 = 0.0,
         g126 = 0.0,
         g127 = 0.0,
         g124 = 0.0,
         g125 = 0.0,
         g122 = 0.0,
         g123 = 0.0,
         g120 = 0.0,
         g121 = 0.0,
         n189 = 0.0,
         n188 = 0.0,
         n187 = 0.0,
         n186 = 0.0,
         n185 = 0.0,
         n184 = 0.0,
         n183 = 0.0,
         n182 = 0.0,
         n181 = 0.0,
         n180 = 0.0,
         g19 = 0.0,
         g18 = 0.0,
         g17 = 0.0,
         g16 = 0.0,
         g15 = 0.0,
         g14 = 0.0,
         g13 = 0.0,
         g12 = 0.0,
         g11 = 0.0,
         g10 = 0.0,
         n148 = 0.0,
         n132 = 0.0,
         n133 = 0.0,
         n130 = 0.0,
         n131 = 0.0,
         n136 = 0.0,
         n137 = 0.0,
         n134 = 0.0,
         n135 = 0.0,
         n138 = 0.0,
         n139 = 0.0,
         n98 = 0.0,
         n99 = 0.0,
         n92 = 0.0,
         n93 = 0.0,
         n90 = 0.0,
         n91 = 0.0,
         n96 = 0.0,
         n97 = 0.0,
         n94 = 0.0,
         n95 = 0.0,
         n141 = 0.0,
         n253 = 0.0,
         n252 = 0.0,
         n251 = 0.0,
         n250 = 0.0,
         n257 = 0.0,
         n256 = 0.0,
         n255 = 0.0,
         n254 = 0.0,
         n259 = 0.0,
         n258 = 0.0,
         n176 = 0.0,
         n177 = 0.0,
         n174 = 0.0,
         n175 = 0.0,
         n172 = 0.0,
         n173 = 0.0,
         n170 = 0.0,
         n171 = 0.0,
         n178 = 0.0,
         n179 = 0.0,
         g40 = 0.0,
         g41 = 0.0,
         g42 = 0.0,
         g43 = 0.0,
         g44 = 0.0,
         g45 = 0.0,
         g46 = 0.0,
         g47 = 0.0,
         g48 = 0.0,
         g49 = 0.0,
         n49 = 0.0,
         n48 = 0.0,
         n41 = 0.0,
         n40 = 0.0,
         n43 = 0.0,
         n42 = 0.0,
         n45 = 0.0,
         n44 = 0.0,
         n47 = 0.0,
         n46 = 0.0,
         g139 = 0.0,
         g138 = 0.0,
         g131 = 0.0,
         g130 = 0.0,
         g133 = 0.0,
         g132 = 0.0,
         g135 = 0.0,
         g134 = 0.0,
         g137 = 0.0,
         g136 = 0.0,
         n240 = 0.0,
         n219 = 0.0,
         n241 = 0.0,
         n218 = 0.0,
         n242 = 0.0,
         g97 = 0.0,
         g96 = 0.0,
         g95 = 0.0,
         g94 = 0.0,
         g93 = 0.0,
         g92 = 0.0,
         g91 = 0.0,
         g90 = 0.0,
         g144 = 0.0,
         n244 = 0.0,
         g146 = 0.0,
         g147 = 0.0,
         g140 = 0.0,
         n215 = 0.0,
         g99 = 0.0,
         g98 = 0.0,
         n214 = 0.0,
         n246 = 0.0,
         n213 = 0.0,
         n247 = 0.0,
         g61 = 0.0,
         n212 = 0.0,
         n211 = 0.0,
         n210 = 0.0,
         g66 = 0.0,
         n243 = 0.0,
         n228 = 0.0,
         n229 = 0.0,
         n222 = 0.0,
         n223 = 0.0,
         n220 = 0.0,
         n221 = 0.0,
         n226 = 0.0,
         n227 = 0.0,
         n224 = 0.0,
         n225 = 0.0,
         n245 = 0.0,
         n129 = 0.0,
         n128 = 0.0,
         n125 = 0.0,
         n124 = 0.0,
         n127 = 0.0,
         n126 = 0.0,
         n121 = 0.0,
         n120 = 0.0,
         n123 = 0.0,
         n122 = 0.0,
         n12 = 0.0,
         n13 = 0.0,
         n10 = 0.0,
         n11 = 0.0,
         n16 = 0.0,
         n17 = 0.0,
         n14 = 0.0,
         n15 = 0.0,
         n18 = 0.0,
         n19 = 0.0,
         g100 = 0.0,
         g101 = 0.0,
         g102 = 0.0,
         g103 = 0.0,
         g104 = 0.0,
         g105 = 0.0,
         g106 = 0.0,
         g107 = 0.0,
         g108 = 0.0,
         g109 = 0.0,
         n264 = 0.0,
         n262 = 0.0,
         n263 = 0.0,
         n260 = 0.0,
         n261 = 0.0,
         n161 = 0.0,
         n160 = 0.0,
         n163 = 0.0,
         n162 = 0.0,
         n165 = 0.0,
         n164 = 0.0,
         n167 = 0.0,
         n166 = 0.0,
         n169 = 0.0,
         n168 = 0.0,
         g75 = 0.0,
         g74 = 0.0,
         g77 = 0.0,
         g76 = 0.0,
         g71 = 0.0,
         g70 = 0.0,
         g73 = 0.0,
         g72 = 0.0,
         g79 = 0.0,
         g78 = 0.0,
         n58 = 0.0,
         n59 = 0.0,
         n56 = 0.0,
         n57 = 0.0,
         n54 = 0.0,
         n55 = 0.0,
         n52 = 0.0,
         n53 = 0.0,
         n50 = 0.0,
         n51 = 0.0,
         n149 = 0.0,
         n114 = 0.0,
         n115 = 0.0,
         n116 = 0.0,
         n117 = 0.0,
         n110 = 0.0,
         n111 = 0.0,
         n112 = 0.0,
         n113 = 0.0,
         n118 = 0.0,
         n119 = 0.0,
         n29 = 0.0,
         n28 = 0.0,
         n23 = 0.0,
         n22 = 0.0,
         n21 = 0.0,
         n20 = 0.0,
         n27 = 0.0,
         n26 = 0.0,
         n25 = 0.0,
         n24 = 0.0,
         n140 = 0.0,
         n217 = 0.0,
         n216 = 0.0,
         g84 = 0.0,
         g85 = 0.0,
         g86 = 0.0,
         g87 = 0.0,
         g80 = 0.0,
         g81 = 0.0,
         g82 = 0.0,
         g83 = 0.0,
         g88 = 0.0,
         g89 = 0.0,
         g151 = 0.0,
         g150 = 0.0,
         n235 = 0.0,
         n234 = 0.0,
         n237 = 0.0,
         g62 = 0.0,
         n236 = 0.0,
         g63 = 0.0,
         n231 = 0.0,
         g60 = 0.0,
         n230 = 0.0,
         g31 = 0.0,
         g30 = 0.0,
         g33 = 0.0,
         g32 = 0.0,
         g35 = 0.0,
         g34 = 0.0,
         g37 = 0.0,
         g36 = 0.0,
         g39 = 0.0,
         g38 = 0.0,
         n232 = 0.0,
         n239 = 0.0,
         n238 = 0.0,
         g67 = 0.0,
         g64 = 0.0,
         g65 = 0.0,
         n158 = 0.0,
         n159 = 0.0,
         n150 = 0.0,
         n151 = 0.0,
         n152 = 0.0,
         n153 = 0.0,
         n154 = 0.0,
         n155 = 0.0,
         n156 = 0.0,
         n157 = 0.0,
         n67 = 0.0,
         n66 = 0.0,
         n65 = 0.0,
         n64 = 0.0,
         n63 = 0.0,
         n62 = 0.0,
         n61 = 0.0,
         n60 = 0.0,
         n69 = 0.0,
         n68 = 0.0,
         n233 = 0.0,
         g148 = 0.0,
         g149 = 0.0,
         g113 = 0.0,
         g112 = 0.0,
         g111 = 0.0,
         g110 = 0.0,
         g117 = 0.0,
         g116 = 0.0,
         g115 = 0.0,
         g114 = 0.0,
         n6 = 0.0,
         g119 = 0.0,
         g118 = 0.0,
         g145 = 0.0,
         n7 = 0.0,
         g141 = 0.0,
         g142 = 0.0,
         g143 = 0.0,
         n107 = 0.0,
         n198 = 0.0,
         n199 = 0.0,
         n106 = 0.0,
         n194 = 0.0,
         n195 = 0.0,
         n196 = 0.0,
         n197 = 0.0,
         n190 = 0.0,
         n191 = 0.0,
         n192 = 0.0,
         n193 = 0.0,
         g68 = 0.0,
         g69 = 0.0,
         n208 = 0.0,
         n209 = 0.0,
         n204 = 0.0,
         n205 = 0.0,
         n206 = 0.0,
         n207 = 0.0,
         n200 = 0.0,
         n201 = 0.0,
         n202 = 0.0,
         n203 = 0.0,
         n8 = 0.0,
         n9 = 0.0,
         n105 = 0.0,
         n104 = 0.0,
         n103 = 0.0,
         n102 = 0.0,
         n101 = 0.0,
         n100 = 0.0,
         n0 = 0.0,
         n1 = 0.0,
         n2 = 0.0,
         n3 = 0.0,
         n4 = 0.0,
         n5 = 0.0,
         n109 = 0.0,
         n108 = 0.0;
 
  int nuc;
  int i = 2;
  MW[0] = pyne::atomic_mass(j);
  MW[1] = pyne::atomic_mass(k);
  xF[0] = casc.mat_feed.comp[j];
  xF[1] = casc.mat_feed.comp[k];
  for(pyne::comp_iter ci = casc.mat_feed.comp.begin(); ci != casc.mat_feed.comp.end(); ci++)
  {
    nuc = (*ci).first;
    if (nuc == j || nuc == k)
        continue;
    MW[i] = pyne::atomic_mass(nuc);
    xF[i] = (*ci).second;
    i++;
  };

  switch (ncomp)
  {
    case 3:
      n0 = -2.00000000000000;
      n1 = MW[0] - Mstar;
      n2 = log(alpha);
      n3 = xPj - xTj;
      n4 = xF[0] - xPj;
      n5 = MW[1] - Mstar;
      n6 = MW[2] - Mstar;
      n7 = log(xTj);
      n8 = -2;
      n9 = xF[0]*xPj;
      n10 = -Mstar;
      n11 = -xTj;
      n12 = -NP0*n0;
      n13 = pow(n1, -n0);
      n14 = pow(n2, -n0);
      n15 = pow(n5, -n0);
      n16 = pow(n6, -n0);
      n17 = Mstar*n2;
      n18 = -n0*n2;
      n19 = -n2;
      n20 = pow(alpha, NP0*n1);
      n21 = n11*xF[0] + n9;
      n22 = n11*xPj + n9;
      n23 = pow(alpha, NP0*n5);
      n24 = pow(alpha, NP0*n6);
      n25 = MW[0]*n19;
      n26 = n3/n4;
      n27 = -n14;
      n28 = -n20 + 1;
      n29 = -n23 + 1;
      n30 = pow(alpha, n1*n12);
      n31 = pow(n22, -n0);
      n32 = -n24 + 1;
      n33 = -n32;
      n34 = -n20;
      n35 = n1*n14;
      n36 = 1/(n1*n2);
      n37 = n24*n6;
      n38 = n23*n5;
      n39 = n1*n20;
      n40 = n28*xF[0];
      n41 = log((-1.0 + xPj/xF[0])/n3);
      n42 = n39*xF[0];
      n43 = -n29*xF[1];
      n44 = n22/n21;
      n45 = n14*n16*n24;
      n46 = n13*n14*n20;
      n47 = n13*n14*n30;
      n48 = n34*n44 + 1;
      n49 = n17 + n25 + n41 + n7;
      n50 = n36*(n49 - log(n48)) + 1;
      n51 = pow(alpha, n1*n50);
      n52 = pow(alpha, n5*n50);
      n53 = pow(alpha, n50*n6);
      n54 = n28 - 1 + 1.0/n51;
      n55 = n29 - 1 + 1.0/n52;
      n56 = n32 - 1 + 1.0/n53;
      n57 = pow(n54, 3);
      n58 = pow(n55, 3);
      n59 = pow(n56, 3);
      n60 = xF[2]/n56;
      n61 = n2/n54;
      n62 = n40/n57;
      n63 = n2*n38*xF[1]/n55;
      n64 = 1/(n48*n51);
      n65 = n46*xF[0]/n54;
      n66 = n14*n15*n23*xF[1]/n55;
      n67 = n26*n42*n61;
      n68 = n19*n26*n42/n54;
      n69 = n20*n5/(n48*n52);
      n70 = n20*n6/(n48*n53);
      n71 = n26*n65;
      n72 = n26*n66;
      n73 = n26*n45*n60;
      n74 = 0.5*n71;
      n75 = n44*n64 + 1;
      n76 = pow(n21, n8)*n30*n31*pow(n48, n8)/n53;
      n77 = pow(n21, n8)*n30*n31*pow(n48, n8)/n52;
      n78 = n2*n39*n44*n64 + n2*n39;
      n79 = n2*n38 + n2*n44*n69;
      n80 = n2*n37 + n2*n44*n70;
      n81 = pow(n78, -n0);
      n82 = pow(n79, -n0);
      n83 = pow(n80, -n0);
      n84 = n80*xF[2];
      n85 = n18*n39*n44*n64 + n18*n39;
      n86 = n44*n46*n64 + n46;
      n87 = pow(n54, n8)*n78;
      n88 = pow(n55, n8)*n79;
      n89 = n29*n82*xF[1]/n58;
      n90 = n40*pow(n54, n8)*n86;
      n91 = -n26*n40*n87;
      n92 = n18*n26*n42*pow(n54, n8)*(pow(alpha, NP0*n1 - n1*n50)*n1*n2*n44/n48 + n2*n39);
      n93 = n18*n26*n38*pow(n55, n8)*xF[1]*(pow(alpha, NP0*n1 - n5*n50)*n2*n44*n5/n48 + n2*n38);
      n94 = n18*n26*n37*pow(n56, n8)*xF[2]*(pow(alpha, NP0*n1 - n50*n6)*n2*n44*n6/n48 + n2*n37);
      n95 = 1.0*n2*n26*n42*n87;
      n96 = -n26*n90;
      n97 = -0.5*n26*n90;
      n98 = -n78*n85;
      n99 = n67 + n91;
      n100 = n14*n15*n23 + n15*n27*n77 + n35*n44*n69 + n35*n5*n77;
      n101 = n16*n27*n76 + n35*n44*n70 + n35*n6*n76 + n45;
      n102 = n26*n43*pow(n55, n8)*(pow(alpha, n1*n12 - n5*n50)*n15*pow(n21, n8)*n27*n31*pow(n48, n8) + pow(alpha, n1*n12 - n5*n50)*pow(n21, n8)*n31*n35*pow(n48, n8)*n5 + n14*n15*n23 + n35*n44*n69);
      n103 = n26*n33*pow(n56, n8)*xF[2]*(pow(alpha, n1*n12 - n50*n6)*n16*pow(n21, n8)*n27*n31*pow(n48, n8) + pow(alpha, n1*n12 - n50*n6)*pow(n21, n8)*n31*n35*pow(n48, n8)*n6 + n35*n44*n70 + n45);
      n104 = n74 + n95 + n97;
      n105 = n2*n26*n37*n60 + n26*n33*pow(n56, n8)*n84 + n26*n43*n88 + n26*n63 + n99;
      n106 = n102 + n103 + n71 + n72 + n73 + n92 + n93 + n94 + n96;
      n107 = n106 + n26*n33*n84*(n18*n37 + n18*n44*n70)/n59 + n26*n43*n79*(n18*n38 + n18*n44*n69)/n58 + n26*n62*n98;
      NP_b = -n12*(1.0*n2*n26*n42*pow(n54, n8)*(pow(alpha, NP0*n1 - n1*n50)*n1*n2*n44/n48 + n2*n39) - 0.5*n26*n40*pow(n54, n8)*(pow(alpha, NP0*n1 - n1*n50)*n13*n14*n44/n48 + n46) - 1.0*n26*n62*n81 + n74 - 0.5*xTj*(n26*n32*n8*n83*xF[2]/n59 + n26*n33*pow(n56, n8)*xF[2]*(pow(alpha, NP0*n1 - n50*n6)*n35*n44*n6/n48 + pow(alpha, n1*n12 - n50*n6)*n16*pow(n21, n8)*n27*n31*pow(n48, n8) + pow(alpha, n1*n12 - n50*n6)*pow(n21, n8)*n31*n35*pow(n48, n8)*n6 + n45) - n26*n40*pow(n54, n8)*(pow(alpha, NP0*n1 - n1*n50)*n13*n14*n44/n48 + n46) + n26*n43*pow(n55, n8)*(pow(alpha, NP0*n1 - n5*n50)*n35*n44*n5/n48 + pow(alpha, n1*n12 - n5*n50)*n15*pow(n21, n8)*n27*n31*pow(n48, n8) + pow(alpha, n1*n12 - n5*n50)*pow(n21, n8)*n31*n35*pow(n48, n8)*n5 + n14*n15*n23) + n26*n62*n8*n81 + n26*n8*n89 + n71 + n72 + n73 + n92 + n93 + n94)) - n2*n26*n39*n40*pow(n54, n8)*n75 - n26*xTj*(n2*n37*n60 + n33*pow(n56, n8)*n84 - n40*n87 + n42*n61 + n43*n88 + n63) - n68;
      NP_2a = -n26*(n0*n13*n27*n30*n62*pow(n75, -n0) + n0*n47*pow(n54, n8)*n75*xF[0] + n40*n46*pow(n54, n8)*n75 - 1.0*n65 + 1.0*xTj*(n18*n37*pow(n56, n8)*xF[2]*(pow(alpha, NP0*n1 - n50*n6)*n2*n44*n6/n48 + n2*n37) + n18*n38*pow(n55, n8)*xF[1]*(pow(alpha, NP0*n1 - n5*n50)*n2*n44*n5/n48 + n2*n38) + n18*n42*pow(n54, n8)*(pow(alpha, NP0*n1 - n1*n50)*n1*n2*n44/n48 + n2*n39) + n32*n8*n83*xF[2]/n59 + n33*pow(n56, n8)*xF[2]*(pow(alpha, n1*n12 - n50*n6)*n16*pow(n21, n8)*n27*n31*pow(n48, n8) + pow(alpha, n1*n12 - n50*n6)*pow(n21, n8)*n31*n35*pow(n48, n8)*n6 + n35*n44*n70 + n45) + n43*pow(n55, n8)*(pow(alpha, n1*n12 - n5*n50)*n15*pow(n21, n8)*n27*n31*pow(n48, n8) + pow(alpha, n1*n12 - n5*n50)*pow(n21, n8)*n31*n35*pow(n48, n8)*n5 + n14*n15*n23 + n35*n44*n69) + n45*n60 + n62*n8*n81 + n65 + n66 + n8*n89 - n90));
      NP_sqrt_base = (NP0*(n11*(n2*n26*n37*n60 + n26*n33*pow(n56, n8)*xF[2]*(pow(alpha, NP0*n1 - n50*n6)*n2*n44*n6/n48 + n2*n37) - n26*n40*pow(n54, n8)*(pow(alpha, NP0*n1 - n1*n50)*n1*n2*n44/n48 + n2*n39) + n26*n43*pow(n55, n8)*(pow(alpha, NP0*n1 - n5*n50)*n2*n44*n5/n48 + n2*n38) + n26*n63 + n67) + n99) + n26*n40/n54 + xTj*(n26*n33*n60 - n26*n40/n54 + n26*n43/n55) + pow(NP0, -n0)*(0.5*n107*xTj - 1.0*n2*n26*n42*n87 + 0.5*n26*n62*n78*n85 + 0.5*n26*n90 - 0.5*n71))*(-n0*n11*(n26*n33*pow(n56, n8)*xF[2]*(pow(alpha, NP0*n1 - n50*n6)*n35*n44*n6/n48 + pow(alpha, n1*n12 - n50*n6)*n16*pow(n21, n8)*n27*n31*pow(n48, n8) + pow(alpha, n1*n12 - n50*n6)*pow(n21, n8)*n31*n35*pow(n48, n8)*n6 + n45) + n26*n33*xF[2]*(pow(alpha, NP0*n1 - n50*n6)*n18*n44*n6/n48 + n18*n37)*(pow(alpha, NP0*n1 - n50*n6)*n2*n44*n6/n48 + n2*n37)/n59 - n26*n40*pow(n54, n8)*(pow(alpha, NP0*n1 - n1*n50)*n13*n14*n44/n48 + n46) + n26*n43*pow(n55, n8)*(pow(alpha, NP0*n1 - n5*n50)*n35*n44*n5/n48 + pow(alpha, n1*n12 - n5*n50)*n15*pow(n21, n8)*n27*n31*pow(n48, n8) + pow(alpha, n1*n12 - n5*n50)*pow(n21, n8)*n31*n35*pow(n48, n8)*n5 + n14*n15*n23) + n26*n43*(pow(alpha, NP0*n1 - n5*n50)*n18*n44*n5/n48 + n18*n38)*(pow(alpha, NP0*n1 - n5*n50)*n2*n44*n5/n48 + n2*n38)/n58 - n26*n62*(pow(alpha, NP0*n1 - n1*n50)*n1*n18*n44/n48 + n18*n39)*(pow(alpha, NP0*n1 - n1*n50)*n1*n2*n44/n48 + n2*n39) + n71 + n72 + n73 + n92 + n93 + n94) - n0*n71 - n0*n96 + 4.0*n2*n26*n42*n87 - 4.0*n26*n62*n81) + pow(-n105*xTj - n12*(1.0*n2*n26*n42*pow(n54, n8)*(pow(alpha, NP0*n1 - n1*n50)*n1*n2*n44/n48 + n2*n39) - 0.5*n26*n40*pow(n54, n8)*(pow(alpha, NP0*n1 - n1*n50)*n13*n14*n44/n48 + n46) - 0.5*n26*n62*(pow(alpha, NP0*n1 - n1*n50)*n1*n18*n44/n48 + n18*n39)*(pow(alpha, NP0*n1 - n1*n50)*n1*n2*n44/n48 + n2*n39) + n74 - 0.5*xTj*(n26*n33*pow(n56, n8)*xF[2]*(pow(alpha, NP0*n1 - n50*n6)*n35*n44*n6/n48 + pow(alpha, n1*n12 - n50*n6)*n16*pow(n21, n8)*n27*n31*pow(n48, n8) + pow(alpha, n1*n12 - n50*n6)*pow(n21, n8)*n31*n35*pow(n48, n8)*n6 + n45) + n26*n33*xF[2]*(pow(alpha, NP0*n1 - n50*n6)*n18*n44*n6/n48 + n18*n37)*(pow(alpha, NP0*n1 - n50*n6)*n2*n44*n6/n48 + n2*n37)/n59 - n26*n40*pow(n54, n8)*(pow(alpha, NP0*n1 - n1*n50)*n13*n14*n44/n48 + n46) + n26*n43*pow(n55, n8)*(pow(alpha, NP0*n1 - n5*n50)*n35*n44*n5/n48 + pow(alpha, n1*n12 - n5*n50)*n15*pow(n21, n8)*n27*n31*pow(n48, n8) + pow(alpha, n1*n12 - n5*n50)*pow(n21, n8)*n31*n35*pow(n48, n8)*n5 + n14*n15*n23) + n26*n43*(pow(alpha, NP0*n1 - n5*n50)*n18*n44*n5/n48 + n18*n38)*(pow(alpha, NP0*n1 - n5*n50)*n2*n44*n5/n48 + n2*n38)/n58 - n26*n62*(pow(alpha, NP0*n1 - n1*n50)*n1*n18*n44/n48 + n18*n39)*(pow(alpha, NP0*n1 - n1*n50)*n1*n2*n44/n48 + n2*n39) + n71 + n72 + n73 + n92 + n93 + n94)) - n26*n40*n87 - n68, -n0);
      NP_sqrt_base = fabs(NP_sqrt_base);
      NP1 = (-NP_b - sqrt(NP_sqrt_base))/NP_2a;
      NT1 = n36*(n49 - log(-pow(alpha, NP1*n1)*n44 + 1));
      g0 = MW[1] - Mstar;
      g1 = MW[0] - Mstar;
      g2 = NT1 + 1;
      g3 = xPj - xTj;
      g4 = MW[2] - Mstar;
      g5 = xF[0] - xTj;
      g6 = xF[0] - xPj;
      g7 = -xTj;
      g8 = xPj/xF[1];
      g9 = pow(alpha, -g1);
      g10 = pow(alpha, -g0);
      g11 = pow(alpha, -g4);
      g12 = log(xF[0]/xF[1]);
      g13 = -g2;
      g14 = pow(alpha, NP1*g0);
      g15 = pow(alpha, NP1*g1);
      g16 = log(g9);
      g17 = pow(alpha, NP1*g4);
      g18 = -g12;
      g19 = g3/g5;
      g20 = g5/g3;
      g21 = -g14 + 1;
      g22 = -g14 + 1;
      g23 = -g15 + 1;
      g24 = -g17 + 1;
      g25 = -g15;
      g26 = -g17;
      g27 = -1.0*g12;
      g28 = -g3/g6;
      g29 = pow(alpha, g0*g13) - 1;
      g30 = pow(alpha, g0*g13) - 1;
      g31 = pow(alpha, g1*g13) - 1;
      g32 = pow(alpha, g13*g4) - 1;
      g33 = -pow(alpha, g1*g13);
      g34 = -pow(alpha, g13*g4);
      g35 = g6*g7/(g3*xF[1]);
      g36 = g22 + g30;
      g37 = -g15 - g33;
      g38 = -g17 - g34;
      g39 = pow(alpha, g1*g13) + g25;
      g40 = g22 + g30;
      g41 = pow(alpha, g13*g4) + g26;
      g42 = xF[1]/g40;
      g43 = xF[2]/g41;
      g44 = xF[0]/g39;
      g45 = xF[2]/g38;
      g46 = xF[1]/g36;
      g47 = xF[0]/g37;
      g48 = g23/g37;
      g49 = g21/g36;
      g50 = g24/g38;
      g51 = g32/g38;
      g52 = g29/g36;
      g53 = g31/g37;
      g54 = log(g35*g40/g22);
      g55 = log(g35*g36/g21);
      g56 = log(g20*g40*g8/g30);
      g57 = 1.0*g54;
      g58 = log(g20*g36*g8/g29);
      g59 = 1.0*g56;
      g60 = -g22*g42*g57 - g27*xF[0] - g27*xF[1] - g27*xF[2] - g30*g42*g59 - g43*g57*(g26 + 1) - g43*g59*(pow(alpha, g13*g4) - 1) - g44*g57*(g25 + 1) - g44*g59*(pow(alpha, g1*g13) - 1);
      LpF = xF[0]*(g9 + 1.0)*(g18 + g48*g55 + g53*g58)/(g16*(g9 - 1.0)) + xF[1]*(g10 + 1.0)*(g18 + g49*g55 + g52*g58)/(g16*(g10 - 1.0)) + xF[2]*(g11 + 1.0)*(g18 + g50*g55 + g51*g58)/(g16*(g11 - 1.0));
      PpF = g20;
      TpF = -g6/g3;
      SWUpF = g60;
      SWUpP = g19*g60;
      xP[0] = g19*g31*g47;
      xP[1] = g19*g29*g46;
      xP[2] = g19*g32*g45;
      xT[0] = g23*g28*g47;
      xT[1] = g21*g28*g46;
      xT[2] = g24*g28*g45;
      break;
    case 4:
      n0 = -0.500000000000000;
      n1 = MW[0] - Mstar;
      n2 = log(alpha);
      n3 = xPj - xTj;
      n4 = xF[0] - xPj;
      n5 = MW[1] - Mstar;
      n6 = MW[2] - Mstar;
      n7 = MW[3] - Mstar;
      n8 = log(xTj);
      n9 = -2;
      n10 = xF[0]*xPj;
      n11 = -Mstar;
      n12 = -xF[0];
      n13 = -xPj;
      n14 = -NP0*n9;
      n15 = -xTj;
      n16 = pow(n1, -n9);
      n17 = pow(n2, -n9);
      n18 = pow(n5, -n9);
      n19 = pow(n6, -n9);
      n20 = pow(n7, -n9);
      n21 = Mstar*n2;
      n22 = -n2*n9;
      n23 = pow(alpha, NP0*n1);
      n24 = n10 + n12*xTj;
      n25 = n10 + n13*xTj;
      n26 = pow(alpha, NP0*n5);
      n27 = pow(alpha, NP0*n6);
      n28 = pow(alpha, NP0*n7);
      n29 = -MW[0]*n2;
      n30 = n3/n4;
      n31 = -n23 + 1;
      n32 = -n26 + 1;
      n33 = pow(alpha, n1*n14);
      n34 = pow(n24, -n9);
      n35 = pow(n25, -n9);
      n36 = -n27 + 1;
      n37 = -n28 + 1;
      n38 = -n36;
      n39 = -n23;
      n40 = -n26;
      n41 = 1/(n1*n2);
      n42 = n1*n17;
      n43 = n27*n6;
      n44 = n37*xF[3];
      n45 = n28*n7;
      n46 = n1*n23;
      n47 = n32*xF[1];
      n48 = n26*n5;
      n49 = n16*n17;
      n50 = log((-1.0 + xPj/xF[0])/n3);
      n51 = n25/n24;
      n52 = n17*n19*n27;
      n53 = n23*n49;
      n54 = n17*n20*n28;
      n55 = n39*n51 + 1;
      n56 = pow(n55, -n9);
      n57 = n21 + n29 + n50 + n8;
      n58 = n23*n51/n55;
      n59 = n17*n33*n35/(n34*n56);
      n60 = n41*(n57 - log(n55)) + 1;
      n61 = pow(alpha, n1*n60);
      n62 = pow(alpha, n5*n60);
      n63 = pow(alpha, n6*n60);
      n64 = pow(alpha, n60*n7);
      n65 = n5/n62;
      n66 = n7/n64;
      n67 = n6/n63;
      n68 = n31 - 1 + 1.0/n61;
      n69 = n32 - 1 + 1.0/n62;
      n70 = n36 - 1 + 1.0/n63;
      n71 = n37 - 1 + 1.0/n64;
      n72 = pow(n68, -n9);
      n73 = pow(n69, -n9);
      n74 = pow(n70, -n9);
      n75 = pow(n71, -n9);
      n76 = pow(n68, 3);
      n77 = pow(n69, 3);
      n78 = pow(n70, 3);
      n79 = pow(n71, 3);
      n80 = xF[2]/n70;
      n81 = xF[3]/n71;
      n82 = n2/n68;
      n83 = xF[0]/n72;
      n84 = n2*n81;
      n85 = n31*xF[0]/n76;
      n86 = -n44/n75;
      n87 = n2*n48*xF[1]/n69;
      n88 = n53*xF[0]/n68;
      n89 = n17*n18*n26*xF[1]/n69;
      n90 = n12*n30*n46*n82;
      n91 = n30*n88;
      n92 = n30*n89;
      n93 = n30*n52*n80;
      n94 = n30*n54*n81;
      n95 = n0*n12*n30*n53/n68;
      n96 = n51/(n55*n61) + 1;
      n97 = n31*n96;
      n98 = n2*n46*n51/(n55*n61) + n2*n46;
      n99 = n2*n48 + n2*n58*n65;
      n100 = n2*n43 + n2*n58*n67;
      n101 = n2*n45 + n2*n58*n66;
      n102 = pow(n98, -n9);
      n103 = pow(n99, -n9);
      n104 = pow(n100, -n9);
      n105 = pow(n101, -n9);
      n106 = n100*xF[2];
      n107 = n22*n46*n51/(n55*n61) + n22*n46;
      n108 = n2*n98;
      n109 = n51*n53/(n55*n61) + n53;
      n110 = n103/n77;
      n111 = n105*n9/n79;
      n112 = n30*n31*n83*n98;
      n113 = n12*n2*n30*n46*n9*(pow(alpha, NP0*n1 - n1*n60)*n1*n2*n51/n55 + n2*n46)/n72;
      n114 = n22*n30*n48*xF[1]*(pow(alpha, NP0*n1 - n5*n60)*n2*n5*n51/n55 + n2*n48)/n73;
      n115 = n22*n30*n43*xF[2]*(pow(alpha, NP0*n1 - n6*n60)*n2*n51*n6/n55 + n2*n43)/n74;
      n116 = n22*n30*n45*xF[3]*(pow(alpha, NP0*n1 - n60*n7)*n2*n51*n7/n55 + n2*n45)/n75;
      n117 = 1.0*n108*n30*n46*n83;
      n118 = n12*n30*n31*(pow(alpha, NP0*n1 - n1*n60)*n49*n51/n55 + n53)/n72;
      n119 = n0*n109*n30*n31*n83;
      n120 = n17*n18*n26 - n18*n59/n62 + n33*n35*n42*n65/(n34*n56) + n42*n58*n65;
      n121 = -n19*n59/n63 + n33*n35*n42*n67/(n34*n56) + n42*n58*n67 + n52;
      n122 = -n30*n47*(-pow(alpha, n1*n14 - n5*n60)*n17*n18*n35/(n34*n56) + pow(alpha, n1*n14 - n5*n60)*n35*n42*n5/(n34*n56) + n17*n18*n26 + n42*n58*n65)/n73;
      n123 = n30*n38*xF[2]*(-pow(alpha, n1*n14 - n6*n60)*n17*n19*n35/(n34*n56) + pow(alpha, n1*n14 - n6*n60)*n35*n42*n6/(n34*n56) + n42*n58*n67 + n52)/n74;
      n124 = n30*n86*(-pow(alpha, n1*n14 - n60*n7)*n17*n20*n35/(n34*n56) + pow(alpha, n1*n14 - n60*n7)*n35*n42*n7/(n34*n56) + n42*n58*n66 + n54);
      n125 = xTj*(n101*n30*n86 + n106*n30*n38/n74 + n12*n30*n31*(pow(alpha, NP0*n1 - n1*n60)*n1*n2*n51/n55 + n2*n46)/n72 + n2*n30*n43*n80 + n30*n45*n84 + n30*n46*n82*xF[0] - n30*n47*n99/n73 + n30*n87);
      n126 = n112 + n125 + n90;
      n127 = n113 + n114 + n115 + n116 + n118 + n122 + n123 + n124 + n91 + n92 + n93 + n94;
      n128 = -n101*n30*n44*(n22*n45 + n22*n58*n66)/n79 + n106*n30*n38*(n22*n43 + n22*n58*n67)/n78 + n12*n30*n31*(pow(alpha, NP0*n1 - n1*n60)*n1*n2*n51/n55 + n2*n46)*(pow(alpha, NP0*n1 - n1*n60)*n1*n22*n51/n55 + n22*n46)/n76 + n127 - n30*n47*n99*(n22*n48 + n22*n58*n65)/n77;
      NP_b = -n14*(n0*n30*n31*n83*(pow(alpha, NP0*n1 - n1*n60)*n49*n51/n55 + n53) + n0*xTj*(n102*n30*n85*n9 + n104*n30*n36*n9*xF[2]/n78 + n110*n30*n47*n9 + n111*n30*n44 + n113 + n114 + n115 + n116 + n118 + n30*n38*xF[2]*(pow(alpha, NP0*n1 - n6*n60)*n42*n51*n6/n55 - pow(alpha, n1*n14 - n6*n60)*n17*n19*n35/(n34*n56) + pow(alpha, n1*n14 - n6*n60)*n35*n42*n6/(n34*n56) + n52)/n74 - n30*n47*(pow(alpha, NP0*n1 - n5*n60)*n42*n5*n51/n55 - pow(alpha, n1*n14 - n5*n60)*n17*n18*n35/(n34*n56) + pow(alpha, n1*n14 - n5*n60)*n35*n42*n5/(n34*n56) + n17*n18*n26)/n73 + n30*n86*(pow(alpha, NP0*n1 - n60*n7)*n42*n51*n7/n55 - pow(alpha, n1*n14 - n60*n7)*n17*n20*n35/(n34*n56) + pow(alpha, n1*n14 - n60*n7)*n35*n42*n7/(n34*n56) + n54) + n91 + n92 + n93 + n94) - 1.0*n102*n30*n85 + 1.0*n2*n30*n46*n83*(pow(alpha, NP0*n1 - n1*n60)*n1*n2*n51/n55 + n2*n46) + n95) - n2*n30*n46*n83*n97 - n30*xTj*(n101*n86 + n106*n38/n74 + n12*n31*(pow(alpha, NP0*n1 - n1*n60)*n1*n2*n51/n55 + n2*n46)/n72 + n2*n43*n80 + n45*n84 + n46*n82*xF[0] - n47*n99/n73 + n87) - n90;
      NP_2a = -n30*(n12*n31*n33*n49*n9*pow(n96, -n9)/n76 - 2.0*n33*n49*n83*n96 + n53*n83*n97 - 1.0*n88 + 1.0*xTj*(n102*n85*n9 + n104*n36*n9*xF[2]/n78 + n110*n47*n9 + n111*n44 + n12*n2*n46*n9*(pow(alpha, NP0*n1 - n1*n60)*n1*n2*n51/n55 + n2*n46)/n72 + n12*n31*(pow(alpha, NP0*n1 - n1*n60)*n49*n51/n55 + n53)/n72 + n22*n43*xF[2]*(pow(alpha, NP0*n1 - n6*n60)*n2*n51*n6/n55 + n2*n43)/n74 + n22*n45*xF[3]*(pow(alpha, NP0*n1 - n60*n7)*n2*n51*n7/n55 + n2*n45)/n75 + n22*n48*xF[1]*(pow(alpha, NP0*n1 - n5*n60)*n2*n5*n51/n55 + n2*n48)/n73 + n38*xF[2]*(-pow(alpha, n1*n14 - n6*n60)*n17*n19*n35/(n34*n56) + pow(alpha, n1*n14 - n6*n60)*n35*n42*n6/(n34*n56) + n42*n58*n67 + n52)/n74 - n47*(-pow(alpha, n1*n14 - n5*n60)*n17*n18*n35/(n34*n56) + pow(alpha, n1*n14 - n5*n60)*n35*n42*n5/(n34*n56) + n17*n18*n26 + n42*n58*n65)/n73 + n52*n80 + n54*n81 + n86*(-pow(alpha, n1*n14 - n60*n7)*n17*n20*n35/(n34*n56) + pow(alpha, n1*n14 - n60*n7)*n35*n42*n7/(n34*n56) + n42*n58*n66 + n54) + n88 + n89));
      NP_sqrt_base = (-NP0*n126 - n12*n30*n31/(n31 - 1 + pow(alpha, -n1*(n41*(n57 - log(n25*n39/(n10 + n15*xF[0]) + 1)) + 1))) - n15*(-n30*n31*xF[0]/n68 - n30*n36*n80 - n30*n44/n71 - n30*n47/n69) - pow(NP0, -n9)*(-n0*n118 - n0*n12*n30*n31*(pow(alpha, NP0*n1 - n1*n60)*n1*n2*n51/n55 + n2*n46)*(pow(alpha, NP0*n1 - n1*n60)*n1*n22*n51/n55 + n22*n46)/n76 - n0*n15*(n113 + n114 + n115 + n116 + n118 + n12*n30*n31*(pow(alpha, NP0*n1 - n1*n60)*n1*n2*n51/n55 + n2*n46)*(pow(alpha, NP0*n1 - n1*n60)*n1*n22*n51/n55 + n22*n46)/n76 + n30*n38*xF[2]*(pow(alpha, NP0*n1 - n6*n60)*n2*n51*n6/n55 + n2*n43)*(pow(alpha, NP0*n1 - n6*n60)*n22*n51*n6/n55 + n22*n43)/n78 + n30*n38*xF[2]*(pow(alpha, NP0*n1 - n6*n60)*n42*n51*n6/n55 - pow(alpha, n1*n14 - n6*n60)*n17*n19*n35/(n34*n56) + pow(alpha, n1*n14 - n6*n60)*n35*n42*n6/(n34*n56) + n52)/n74 - n30*n44*(pow(alpha, NP0*n1 - n60*n7)*n2*n51*n7/n55 + n2*n45)*(pow(alpha, NP0*n1 - n60*n7)*n22*n51*n7/n55 + n22*n45)/n79 - n30*n47*(pow(alpha, NP0*n1 - n5*n60)*n2*n5*n51/n55 + n2*n48)*(pow(alpha, NP0*n1 - n5*n60)*n22*n5*n51/n55 + n22*n48)/n77 - n30*n47*(pow(alpha, NP0*n1 - n5*n60)*n42*n5*n51/n55 - pow(alpha, n1*n14 - n5*n60)*n17*n18*n35/(n34*n56) + pow(alpha, n1*n14 - n5*n60)*n35*n42*n5/(n34*n56) + n17*n18*n26)/n73 + n30*n86*(pow(alpha, NP0*n1 - n60*n7)*n42*n51*n7/n55 - pow(alpha, n1*n14 - n60*n7)*n17*n20*n35/(n34*n56) + pow(alpha, n1*n14 - n60*n7)*n35*n42*n7/(n34*n56) + n54) + n91 + n92 + n93 + n94) - n0*n91 + 1.0*n108*n30*n46*n83))*(-4.0*n102*n30*n85 + 4.0*n108*n30*n46*n83 - n118*n9 - n15*n9*(n113 + n114 + n115 + n116 + n118 + n12*n30*n31*(pow(alpha, NP0*n1 - n1*n60)*n1*n2*n51/n55 + n2*n46)*(pow(alpha, NP0*n1 - n1*n60)*n1*n22*n51/n55 + n22*n46)/n76 + n30*n38*xF[2]*(pow(alpha, NP0*n1 - n6*n60)*n2*n51*n6/n55 + n2*n43)*(pow(alpha, NP0*n1 - n6*n60)*n22*n51*n6/n55 + n22*n43)/n78 + n30*n38*xF[2]*(pow(alpha, NP0*n1 - n6*n60)*n42*n51*n6/n55 - pow(alpha, n1*n14 - n6*n60)*n17*n19*n35/(n34*n56) + pow(alpha, n1*n14 - n6*n60)*n35*n42*n6/(n34*n56) + n52)/n74 - n30*n44*(pow(alpha, NP0*n1 - n60*n7)*n2*n51*n7/n55 + n2*n45)*(pow(alpha, NP0*n1 - n60*n7)*n22*n51*n7/n55 + n22*n45)/n79 - n30*n47*(pow(alpha, NP0*n1 - n5*n60)*n2*n5*n51/n55 + n2*n48)*(pow(alpha, NP0*n1 - n5*n60)*n22*n5*n51/n55 + n22*n48)/n77 - n30*n47*(pow(alpha, NP0*n1 - n5*n60)*n42*n5*n51/n55 - pow(alpha, n1*n14 - n5*n60)*n17*n18*n35/(n34*n56) + pow(alpha, n1*n14 - n5*n60)*n35*n42*n5/(n34*n56) + n17*n18*n26)/n73 + n30*n86*(pow(alpha, NP0*n1 - n60*n7)*n42*n51*n7/n55 - pow(alpha, n1*n14 - n60*n7)*n17*n20*n35/(n34*n56) + pow(alpha, n1*n14 - n60*n7)*n35*n42*n7/(n34*n56) + n54) + n91 + n92 + n93 + n94) + 2.0*n91) + pow(-n126 - n14*(n0*n30*n31*n83*(pow(alpha, NP0*n1 - n1*n60)*n49*n51/n55 + n53) + n0*n30*n85*(pow(alpha, NP0*n1 - n1*n60)*n1*n2*n51/n55 + n2*n46)*(pow(alpha, NP0*n1 - n1*n60)*n1*n22*n51/n55 + n22*n46) + n0*xTj*(n113 + n114 + n115 + n116 + n118 + n12*n30*n31*(pow(alpha, NP0*n1 - n1*n60)*n1*n2*n51/n55 + n2*n46)*(pow(alpha, NP0*n1 - n1*n60)*n1*n22*n51/n55 + n22*n46)/n76 + n30*n38*xF[2]*(pow(alpha, NP0*n1 - n6*n60)*n2*n51*n6/n55 + n2*n43)*(pow(alpha, NP0*n1 - n6*n60)*n22*n51*n6/n55 + n22*n43)/n78 + n30*n38*xF[2]*(pow(alpha, NP0*n1 - n6*n60)*n42*n51*n6/n55 - pow(alpha, n1*n14 - n6*n60)*n17*n19*n35/(n34*n56) + pow(alpha, n1*n14 - n6*n60)*n35*n42*n6/(n34*n56) + n52)/n74 - n30*n44*(pow(alpha, NP0*n1 - n60*n7)*n2*n51*n7/n55 + n2*n45)*(pow(alpha, NP0*n1 - n60*n7)*n22*n51*n7/n55 + n22*n45)/n79 - n30*n47*(pow(alpha, NP0*n1 - n5*n60)*n2*n5*n51/n55 + n2*n48)*(pow(alpha, NP0*n1 - n5*n60)*n22*n5*n51/n55 + n22*n48)/n77 - n30*n47*(pow(alpha, NP0*n1 - n5*n60)*n42*n5*n51/n55 - pow(alpha, n1*n14 - n5*n60)*n17*n18*n35/(n34*n56) + pow(alpha, n1*n14 - n5*n60)*n35*n42*n5/(n34*n56) + n17*n18*n26)/n73 + n30*n86*(pow(alpha, NP0*n1 - n60*n7)*n42*n51*n7/n55 - pow(alpha, n1*n14 - n60*n7)*n17*n20*n35/(n34*n56) + pow(alpha, n1*n14 - n60*n7)*n35*n42*n7/(n34*n56) + n54) + n91 + n92 + n93 + n94) + 1.0*n2*n30*n46*n83*(pow(alpha, NP0*n1 - n1*n60)*n1*n2*n51/n55 + n2*n46) + n95), -n9);
      NP_sqrt_base = fabs(NP_sqrt_base);
      NP1 = (-NP_b - pow(NP_sqrt_base, -n0))/NP_2a;
      NT1 = n41*(n57 - log(-pow(alpha, NP1*n1)*n51 + 1));
      g0 = MW[1] - Mstar;
      g1 = MW[0] - Mstar;
      g2 = NT1 + 1;
      g3 = xPj - xTj;
      g4 = MW[2] - Mstar;
      g5 = MW[3] - Mstar;
      g6 = xF[0] - xTj;
      g7 = xF[0] - xPj;
      g8 = -xTj;
      g9 = xPj/xF[1];
      g10 = pow(alpha, -g1);
      g11 = pow(alpha, -g0);
      g12 = pow(alpha, -g4);
      g13 = pow(alpha, -g5);
      g14 = log(xF[0]/xF[1]);
      g15 = -g2;
      g16 = pow(alpha, NP1*g0);
      g17 = pow(alpha, NP1*g1);
      g18 = log(g10);
      g19 = pow(alpha, NP1*g4);
      g20 = pow(alpha, NP1*g5);
      g21 = -g14;
      g22 = g3/g6;
      g23 = g6/g3;
      g24 = -g16 + 1;
      g25 = -g16 + 1;
      g26 = -g17 + 1;
      g27 = -g19 + 1;
      g28 = -g20 + 1;
      g29 = -g17;
      g30 = -g19;
      g31 = -g20;
      g32 = -1.0*g14;
      g33 = -g3/g7;
      g34 = pow(alpha, g0*g15) - 1;
      g35 = pow(alpha, g0*g15) - 1;
      g36 = pow(alpha, g1*g15) - 1;
      g37 = pow(alpha, g15*g4) - 1;
      g38 = pow(alpha, g15*g5) - 1;
      g39 = -pow(alpha, g1*g15);
      g40 = -pow(alpha, g15*g4);
      g41 = -pow(alpha, g15*g5);
      g42 = g7*g8/(g3*xF[1]);
      g43 = g25 + g35;
      g44 = -g17 - g39;
      g45 = -g19 - g40;
      g46 = -g20 - g41;
      g47 = pow(alpha, g1*g15) + g29;
      g48 = g25 + g35;
      g49 = pow(alpha, g15*g4) + g30;
      g50 = pow(alpha, g15*g5) + g31;
      g51 = xF[0]/g47;
      g52 = xF[1]/g48;
      g53 = xF[3]/g50;
      g54 = xF[2]/g49;
      g55 = xF[1]/g43;
      g56 = xF[0]/g44;
      g57 = xF[3]/g46;
      g58 = xF[2]/g45;
      g59 = g26/g44;
      g60 = g28/g46;
      g61 = g24/g43;
      g62 = g27/g45;
      g63 = g34/g43;
      g64 = g37/g45;
      g65 = g36/g44;
      g66 = g38/g46;
      g67 = log(g42*g48/g25);
      g68 = log(g42*g43/g24);
      g69 = log(g23*g48*g9/g35);
      g70 = 1.0*g67;
      g71 = log(g23*g43*g9/g34);
      g72 = 1.0*g69;
      g73 = -g25*g52*g70 - g32*xF[0] - g32*xF[1] - g32*xF[2] - g32*xF[3] - g35*g52*g72 - g51*g70*(g29 + 1) - g51*g72*(pow(alpha, g1*g15) - 1) - g53*g70*(g31 + 1) - g53*g72*(pow(alpha, g15*g5) - 1) - g54*g70*(g30 + 1) - g54*g72*(pow(alpha, g15*g4) - 1);
      LpF = xF[0]*(g10 + 1.0)*(g21 + g59*g68 + g65*g71)/(g18*(g10 - 1.0)) + xF[1]*(g11 + 1.0)*(g21 + g61*g68 + g63*g71)/(g18*(g11 - 1.0)) + xF[2]*(g12 + 1.0)*(g21 + g62*g68 + g64*g71)/(g18*(g12 - 1.0)) + xF[3]*(g13 + 1.0)*(g21 + g60*g68 + g66*g71)/(g18*(g13 - 1.0));
      PpF = g23;
      TpF = -g7/g3;
      SWUpF = g73;
      SWUpP = g22*g73;
      xP[0] = g22*g36*g56;
      xP[1] = g22*g34*g55;
      xP[2] = g22*g37*g58;
      xP[3] = g22*g38*g57;
      xT[0] = g26*g33*g56;
      xT[1] = g24*g33*g55;
      xT[2] = g27*g33*g58;
      xT[3] = g28*g33*g57;
      break;
    case 5:
      n0 = MW[0] - Mstar;
      n1 = log(alpha);
      n2 = xPj - xTj;
      n3 = xF[0] - xPj;
      n4 = MW[1] - Mstar;
      n5 = MW[2] - Mstar;
      n6 = MW[3] - Mstar;
      n7 = MW[4] - Mstar;
      n8 = log(xTj);
      n9 = xF[0]*xPj;
      n10 = -Mstar;
      n11 = 2*NP0;
      n12 = -xPj;
      n13 = -xF[0];
      n14 = -xTj;
      n15 = pow(n0, 2);
      n16 = pow(n1, 2);
      n17 = pow(n4, 2);
      n18 = pow(n5, 2);
      n19 = pow(n6, 2);
      n20 = pow(n7, 2);
      n21 = Mstar*n1;
      n22 = 2*n1;
      n23 = pow(alpha, NP0*n0);
      n24 = n13*xTj + n9;
      n25 = n12*xTj + n9;
      n26 = pow(alpha, NP0*n4);
      n27 = pow(alpha, NP0*n5);
      n28 = pow(alpha, NP0*n6);
      n29 = pow(alpha, NP0*n7);
      n30 = -MW[0]*n1;
      n31 = n2/n3;
      n32 = -n23 + 1;
      n33 = -n26 + 1;
      n34 = pow(alpha, n0*n11);
      n35 = pow(n24, 2);
      n36 = pow(n25, 2);
      n37 = -n27 + 1;
      n38 = -n28 + 1;
      n39 = -n29 + 1;
      n40 = -n37;
      n41 = -n38;
      n42 = -n23;
      n43 = 1/(n0*n1);
      n44 = n0*n16;
      n45 = n27*n5;
      n46 = n28*n6;
      n47 = n29*n7;
      n48 = n0*n23;
      n49 = n26*n4;
      n50 = n15*n16;
      n51 = log((-1.0 + xPj/xF[0])/n2);
      n52 = -n33*xF[1];
      n53 = -n39*xF[4];
      n54 = n25/n24;
      n55 = n16*n18*n27;
      n56 = n16*n20*n29;
      n57 = n23*n50;
      n58 = n16*n19*n28;
      n59 = n42*n54 + 1;
      n60 = pow(n59, 2);
      n61 = n21 + n30 + n51 + n8;
      n62 = n23*n54/n59;
      n63 = n16*n34*n36/(n35*n60);
      n64 = n43*(n61 - log(n59)) + 1;
      n65 = pow(alpha, n0*n64);
      n66 = pow(alpha, n4*n64);
      n67 = pow(alpha, n5*n64);
      n68 = pow(alpha, n6*n64);
      n69 = pow(alpha, n64*n7);
      n70 = n4/n66;
      n71 = n7/n69;
      n72 = n6/n68;
      n73 = n5/n67;
      n74 = n32 - 1 + 1.0/n65;
      n75 = n33 - 1 + 1.0/n66;
      n76 = n37 - 1 + 1.0/n67;
      n77 = n38 - 1 + 1.0/n68;
      n78 = n39 - 1 + 1.0/n69;
      n79 = pow(n74, 2);
      n80 = pow(n75, 2);
      n81 = pow(n76, 2);
      n82 = pow(n77, 2);
      n83 = pow(n78, 2);
      n84 = pow(n74, 3);
      n85 = pow(n75, 3);
      n86 = pow(n76, 3);
      n87 = pow(n77, 3);
      n88 = pow(n78, 3);
      n89 = xF[2]/n76;
      n90 = xF[4]/n78;
      n91 = xF[3]/n77;
      n92 = n1/n74;
      n93 = xF[0]/n79;
      n94 = n1*n91;
      n95 = n32/n74;
      n96 = n32*xF[0]/n84;
      n97 = n41*xF[3]/n82;
      n98 = n1*n49*xF[1]/n75;
      n99 = n57*xF[0]/n74;
      n100 = n16*n17*n26*xF[1]/n75;
      n101 = n31*n48*n92*xF[0];
      n102 = n13*n31*n48*n92;
      n103 = n31*n99;
      n104 = n100*n31;
      n105 = n31*n55*n89;
      n106 = n31*n58*n91;
      n107 = n31*n56*n90;
      n108 = 0.5*n103;
      n109 = n54/(n59*n65) + 1;
      n110 = n109*n32;
      n111 = n1*n48*n54/(n59*n65) + n1*n48;
      n112 = n1*n49 + n1*n62*n70;
      n113 = n1*n45 + n1*n62*n73;
      n114 = n1*n46 + n1*n62*n72;
      n115 = n1*n47 + n1*n62*n71;
      n116 = pow(n111, 2);
      n117 = pow(n112, 2);
      n118 = pow(n113, 2);
      n119 = pow(n114, 2);
      n120 = pow(n115, 2);
      n121 = n113*xF[2];
      n122 = n114*xF[3];
      n123 = n22*n48*n54/(n59*n65) + n22*n48;
      n124 = n1*n111;
      n125 = -2*n116;
      n126 = n54*n57/(n59*n65) + n57;
      n127 = n111*n32;
      n128 = n115*n53;
      n129 = n112/n80;
      n130 = 2*n120/n88;
      n131 = 2*n117/n85;
      n132 = 2*n118*xF[2]/n86;
      n133 = -2*n119*n38*xF[3]/n87;
      n134 = n13*n31*n32*(pow(alpha, NP0*n0 - n0*n64)*n0*n1*n54/n59 + n1*n48)/n79;
      n135 = n22*n31*n48*n93*(pow(alpha, NP0*n0 - n0*n64)*n0*n1*n54/n59 + n1*n48);
      n136 = n22*n31*n49*xF[1]*(pow(alpha, NP0*n0 - n4*n64)*n1*n4*n54/n59 + n1*n49)/n80;
      n137 = n22*n31*n45*xF[2]*(pow(alpha, NP0*n0 - n5*n64)*n1*n5*n54/n59 + n1*n45)/n81;
      n138 = n22*n31*n46*xF[3]*(pow(alpha, NP0*n0 - n6*n64)*n1*n54*n6/n59 + n1*n46)/n82;
      n139 = n22*n31*n47*xF[4]*(pow(alpha, NP0*n0 - n64*n7)*n1*n54*n7/n59 + n1*n47)/n83;
      n140 = 1.0*n124*n31*n48*n93;
      n141 = n13*n31*n32*(pow(alpha, NP0*n0 - n0*n64)*n50*n54/n59 + n57)/n79;
      n142 = -0.5*n126*n31*n32*n93;
      n143 = n101 + n134;
      n144 = n16*n17*n26 - n17*n63/n66 + n34*n36*n44*n70/(n35*n60) + n44*n62*n70;
      n145 = -n18*n63/n67 + n34*n36*n44*n73/(n35*n60) + n44*n62*n73 + n55;
      n146 = -n20*n63/n69 + n34*n36*n44*n71/(n35*n60) + n44*n62*n71 + n56;
      n147 = n31*n52*(-pow(alpha, n0*n11 - n4*n64)*n16*n17*n36/(n35*n60) + pow(alpha, n0*n11 - n4*n64)*n36*n4*n44/(n35*n60) + n16*n17*n26 + n44*n62*n70)/n80;
      n148 = n31*n40*xF[2]*(-pow(alpha, n0*n11 - n5*n64)*n16*n18*n36/(n35*n60) + pow(alpha, n0*n11 - n5*n64)*n36*n44*n5/(n35*n60) + n44*n62*n73 + n55)/n81;
      n149 = n31*n97*(-pow(alpha, n0*n11 - n6*n64)*n16*n19*n36/(n35*n60) + pow(alpha, n0*n11 - n6*n64)*n36*n44*n6/(n35*n60) + n44*n62*n72 + n58);
      n150 = n31*n53*(-pow(alpha, n0*n11 - n64*n7)*n16*n20*n36/(n35*n60) + pow(alpha, n0*n11 - n64*n7)*n36*n44*n7/(n35*n60) + n44*n62*n71 + n56)/n83;
      n151 = n108 + n140 + n142;
      n152 = n1*n31*n45*n89 + n1*n31*n47*n90 + n114*n31*n97 + n121*n31*n40/n81 + n128*n31/n83 + n129*n31*n52 + n143 + n31*n46*n94 + n31*n98;
      n153 = n152*xTj;
      n154 = n103 + n104 + n105 + n106 + n107 + n135 + n136 + n137 + n138 + n139 + n141 + n147 + n148 + n149 + n150;
      n155 = n112*n31*n52*(n22*n49 + n22*n62*n70)/n85 + n121*n31*n40*(n22*n45 + n22*n62*n73)/n86 + n122*n31*n41*(n22*n46 + n22*n62*n72)/n87 + n128*n31*(n22*n47 + n22*n62*n71)/n88 + n13*n31*n32*(pow(alpha, NP0*n0 - n0*n64)*n0*n1*n54/n59 + n1*n48)*(pow(alpha, NP0*n0 - n0*n64)*n0*n22*n54/n59 + n22*n48)/n84 + n154;
      n156 = n155*xTj;
      n157 = -0.5*n111*n123*n31*n96 + n151 - 0.5*n156;
      NP_b = -n1*n110*n31*n48*n93 - n102 - n11*(1.0*n1*n31*n48*n93*(pow(alpha, NP0*n0 - n0*n64)*n0*n1*n54/n59 + n1*n48) + n108 - 1.0*n116*n31*n96 - 0.5*n31*n32*n93*(pow(alpha, NP0*n0 - n0*n64)*n50*n54/n59 + n57) - 0.5*xTj*(n103 + n104 + n105 + n106 + n107 + n125*n31*n96 - n130*n31*n39*xF[4] - n131*n31*n33*xF[1] - n132*n31*n37 + n133*n31 + n135 + n136 + n137 + n138 + n139 + n141 + n31*n40*xF[2]*(pow(alpha, NP0*n0 - n5*n64)*n44*n5*n54/n59 - pow(alpha, n0*n11 - n5*n64)*n16*n18*n36/(n35*n60) + pow(alpha, n0*n11 - n5*n64)*n36*n44*n5/(n35*n60) + n55)/n81 + n31*n52*(pow(alpha, NP0*n0 - n4*n64)*n4*n44*n54/n59 - pow(alpha, n0*n11 - n4*n64)*n16*n17*n36/(n35*n60) + pow(alpha, n0*n11 - n4*n64)*n36*n4*n44/(n35*n60) + n16*n17*n26)/n80 + n31*n53*(pow(alpha, NP0*n0 - n64*n7)*n44*n54*n7/n59 - pow(alpha, n0*n11 - n64*n7)*n16*n20*n36/(n35*n60) + pow(alpha, n0*n11 - n64*n7)*n36*n44*n7/(n35*n60) + n56)/n83 + n31*n97*(pow(alpha, NP0*n0 - n6*n64)*n44*n54*n6/n59 - pow(alpha, n0*n11 - n6*n64)*n16*n19*n36/(n35*n60) + pow(alpha, n0*n11 - n6*n64)*n36*n44*n6/(n35*n60) + n58))) - n31*xTj*(n1*n45*n89 + n1*n47*n90 + n114*n97 + n121*n40/n81 + n128/n83 + n129*n52 + n13*n32*(pow(alpha, NP0*n0 - n0*n64)*n0*n1*n54/n59 + n1*n48)/n79 + n46*n94 + n48*n92*xF[0] + n98);
      NP_2a = -n31*(2*pow(n109, 2)*n34*n50*n96 - 2.0*n109*n34*n50*n93 + n110*n57*n93 - 1.0*n99 + 1.0*xTj*(n100 + n125*n96 + n13*n32*(pow(alpha, NP0*n0 - n0*n64)*n50*n54/n59 + n57)/n79 - n130*n39*xF[4] - n131*n33*xF[1] - n132*n37 + n133 + n22*n45*xF[2]*(pow(alpha, NP0*n0 - n5*n64)*n1*n5*n54/n59 + n1*n45)/n81 + n22*n46*xF[3]*(pow(alpha, NP0*n0 - n6*n64)*n1*n54*n6/n59 + n1*n46)/n82 + n22*n47*xF[4]*(pow(alpha, NP0*n0 - n64*n7)*n1*n54*n7/n59 + n1*n47)/n83 + n22*n48*n93*(pow(alpha, NP0*n0 - n0*n64)*n0*n1*n54/n59 + n1*n48) + n22*n49*xF[1]*(pow(alpha, NP0*n0 - n4*n64)*n1*n4*n54/n59 + n1*n49)/n80 + n40*xF[2]*(-pow(alpha, n0*n11 - n5*n64)*n16*n18*n36/(n35*n60) + pow(alpha, n0*n11 - n5*n64)*n36*n44*n5/(n35*n60) + n44*n62*n73 + n55)/n81 + n52*(-pow(alpha, n0*n11 - n4*n64)*n16*n17*n36/(n35*n60) + pow(alpha, n0*n11 - n4*n64)*n36*n4*n44/(n35*n60) + n16*n17*n26 + n44*n62*n70)/n80 + n53*(-pow(alpha, n0*n11 - n64*n7)*n16*n20*n36/(n35*n60) + pow(alpha, n0*n11 - n64*n7)*n36*n44*n7/(n35*n60) + n44*n62*n71 + n56)/n83 + n55*n89 + n56*n90 + n58*n91 + n97*(-pow(alpha, n0*n11 - n6*n64)*n16*n19*n36/(n35*n60) + pow(alpha, n0*n11 - n6*n64)*n36*n44*n6/(n35*n60) + n44*n62*n72 + n58) + n99));
      NP_sqrt_base = pow(-n102 - n11*(1.0*n1*n31*n48*n93*(pow(alpha, NP0*n0 - n0*n64)*n0*n1*n54/n59 + n1*n48) + n108 - 0.5*n31*n32*n93*(pow(alpha, NP0*n0 - n0*n64)*n50*n54/n59 + n57) - 0.5*n31*n96*(pow(alpha, NP0*n0 - n0*n64)*n0*n1*n54/n59 + n1*n48)*(pow(alpha, NP0*n0 - n0*n64)*n0*n22*n54/n59 + n22*n48) - 0.5*xTj*(n103 + n104 + n105 + n106 + n107 + n13*n31*n32*(pow(alpha, NP0*n0 - n0*n64)*n0*n1*n54/n59 + n1*n48)*(pow(alpha, NP0*n0 - n0*n64)*n0*n22*n54/n59 + n22*n48)/n84 + n135 + n136 + n137 + n138 + n139 + n141 + n31*n40*xF[2]*(pow(alpha, NP0*n0 - n5*n64)*n1*n5*n54/n59 + n1*n45)*(pow(alpha, NP0*n0 - n5*n64)*n22*n5*n54/n59 + n22*n45)/n86 + n31*n40*xF[2]*(pow(alpha, NP0*n0 - n5*n64)*n44*n5*n54/n59 - pow(alpha, n0*n11 - n5*n64)*n16*n18*n36/(n35*n60) + pow(alpha, n0*n11 - n5*n64)*n36*n44*n5/(n35*n60) + n55)/n81 + n31*n41*xF[3]*(pow(alpha, NP0*n0 - n6*n64)*n1*n54*n6/n59 + n1*n46)*(pow(alpha, NP0*n0 - n6*n64)*n22*n54*n6/n59 + n22*n46)/n87 + n31*n52*(pow(alpha, NP0*n0 - n4*n64)*n1*n4*n54/n59 + n1*n49)*(pow(alpha, NP0*n0 - n4*n64)*n22*n4*n54/n59 + n22*n49)/n85 + n31*n52*(pow(alpha, NP0*n0 - n4*n64)*n4*n44*n54/n59 - pow(alpha, n0*n11 - n4*n64)*n16*n17*n36/(n35*n60) + pow(alpha, n0*n11 - n4*n64)*n36*n4*n44/(n35*n60) + n16*n17*n26)/n80 + n31*n53*(pow(alpha, NP0*n0 - n64*n7)*n1*n54*n7/n59 + n1*n47)*(pow(alpha, NP0*n0 - n64*n7)*n22*n54*n7/n59 + n22*n47)/n88 + n31*n53*(pow(alpha, NP0*n0 - n64*n7)*n44*n54*n7/n59 - pow(alpha, n0*n11 - n64*n7)*n16*n20*n36/(n35*n60) + pow(alpha, n0*n11 - n64*n7)*n36*n44*n7/(n35*n60) + n56)/n83 + n31*n97*(pow(alpha, NP0*n0 - n6*n64)*n44*n54*n6/n59 - pow(alpha, n0*n11 - n6*n64)*n16*n19*n36/(n35*n60) + pow(alpha, n0*n11 - n6*n64)*n36*n44*n6/(n35*n60) + n58))) - n127*n31*n93 - n153, 2) + (-pow(NP0, 2)*n157 + NP0*(n14*(n1*n31*n45*n89 + n1*n31*n47*n90 + n143 + n31*n40*xF[2]*(pow(alpha, NP0*n0 - n5*n64)*n1*n5*n54/n59 + n1*n45)/n81 + n31*n46*n94 + n31*n52*(pow(alpha, NP0*n0 - n4*n64)*n1*n4*n54/n59 + n1*n49)/n80 + n31*n53*(pow(alpha, NP0*n0 - n64*n7)*n1*n54*n7/n59 + n1*n47)/n83 + n31*n97*(pow(alpha, NP0*n0 - n6*n64)*n1*n54*n6/n59 + n1*n46) + n31*n98) + n143) + n31*n95*xF[0] + xTj*(n13*n31*n95 + n31*n40*n89 + n31*n41*n91 + n31*n52/n75 + n31*n53/n78))*(2.0*n103 - 4.0*n116*n31*n96 + 4.0*n124*n31*n48*n93 - 2.0*n126*n31*n32*n93 - 2.0*n156);
      NP_sqrt_base = fabs(NP_sqrt_base);
      NP1 = (-NP_b - sqrt(NP_sqrt_base))/NP_2a;
      NT1 = n43*(n61 - log(-pow(alpha, NP1*n0)*n54 + 1));
      g0 = MW[1] - Mstar;
      g1 = MW[0] - Mstar;
      g2 = NT1 + 1;
      g3 = xPj - xTj;
      g4 = MW[2] - Mstar;
      g5 = MW[3] - Mstar;
      g6 = MW[4] - Mstar;
      g7 = xF[0] - xTj;
      g8 = xF[0] - xPj;
      g9 = -xTj;
      g10 = 1.0*xF[4];
      g11 = 1.0*xF[3];
      g12 = 1.0*xF[0];
      g13 = xPj/xF[1];
      g14 = pow(alpha, -g1);
      g15 = pow(alpha, -g0);
      g16 = pow(alpha, -g4);
      g17 = pow(alpha, -g5);
      g18 = pow(alpha, -g6);
      g19 = log(xF[0]/xF[1]);
      g20 = -g2;
      g21 = pow(alpha, NP1*g0);
      g22 = pow(alpha, NP1*g1);
      g23 = log(g14);
      g24 = pow(alpha, NP1*g4);
      g25 = pow(alpha, NP1*g5);
      g26 = pow(alpha, NP1*g6);
      g27 = -g19;
      g28 = g3/g7;
      g29 = g7/g3;
      g30 = -g21 + 1;
      g31 = -g21 + 1;
      g32 = -g22 + 1;
      g33 = -g24 + 1;
      g34 = -g25 + 1;
      g35 = -g26 + 1;
      g36 = -g22;
      g37 = -g24;
      g38 = -g25;
      g39 = -g26;
      g40 = -1.0*g19;
      g41 = -g3/g8;
      g42 = g40*xF[0];
      g43 = g40*xF[1];
      g44 = g40*xF[2];
      g45 = g40*xF[3];
      g46 = g40*xF[4];
      g47 = pow(alpha, g0*g20) - 1;
      g48 = pow(alpha, g0*g20) - 1;
      g49 = pow(alpha, g1*g20) - 1;
      g50 = pow(alpha, g20*g4) - 1;
      g51 = pow(alpha, g20*g5) - 1;
      g52 = pow(alpha, g20*g6) - 1;
      g53 = -pow(alpha, g1*g20);
      g54 = -pow(alpha, g20*g4);
      g55 = -pow(alpha, g20*g5);
      g56 = -pow(alpha, g20*g6);
      g57 = g8*g9/(g3*xF[1]);
      g58 = g31 + g48;
      g59 = -g22 - g53;
      g60 = -g24 - g54;
      g61 = -g25 - g55;
      g62 = -g26 - g56;
      g63 = pow(alpha, g1*g20) + g36;
      g64 = g31 + g48;
      g65 = pow(alpha, g20*g4) + g37;
      g66 = pow(alpha, g20*g5) + g38;
      g67 = pow(alpha, g20*g6) + g39;
      g68 = xF[1]/g64;
      g69 = xF[2]/g65;
      g70 = xF[1]/g58;
      g71 = xF[3]/g61;
      g72 = xF[0]/g59;
      g73 = xF[2]/g60;
      g74 = xF[4]/g62;
      g75 = g12/g59;
      g76 = 1.0*g73;
      g77 = 1.0*g70;
      g78 = g35/g62;
      g79 = g32/g59;
      g80 = g34/g61;
      g81 = g30/g58;
      g82 = g33/g60;
      g83 = g32*g72;
      g84 = g33*g73;
      g85 = g30*g70;
      g86 = g47/g58;
      g87 = g50/g60;
      g88 = g51/g61;
      g89 = g49/g59;
      g90 = g52/g62;
      g91 = g47*g70;
      g92 = g49*g72;
      g93 = g50*g73;
      g94 = log(g57*g64/g31);
      g95 = log(g57*g58/g30);
      g96 = log(g13*g29*g64/g48);
      g97 = 1.0*g94;
      g98 = log(g13*g29*g58/g47);
      g99 = 1.0*g96;
      g100 = g42 + g43 + g44 + g45 + g46;
      g101 = g78*g95;
      g102 = g79*g95;
      g103 = g82*g95;
      g104 = g81*g95;
      g105 = g80*g95;
      g106 = g87*g98;
      g107 = g88*g98;
      g108 = g90*g98;
      g109 = g86*g98;
      g110 = g89*g98;
      LpF = xF[0]*(g14 + 1.0)*(g102 + g110 + g27)/(g23*(g14 - 1.0)) + xF[1]*(g15 + 1.0)*(g104 + g109 + g27)/(g23*(g15 - 1.0)) + xF[2]*(g16 + 1.0)*(g103 + g106 + g27)/(g23*(g16 - 1.0)) + xF[3]*(g17 + 1.0)*(g105 + g107 + g27)/(g23*(g17 - 1.0)) + xF[4]*(g18 + 1.0)*(g101 + g108 + g27)/(g23*(g18 - 1.0));
      PpF = g29;
      TpF = -g8/g3;
      SWUpF = -g10*g94*(g39 + 1)/g67 - g10*g96*(pow(alpha, g20*g6) - 1)/g67 - g100 - g11*g94*(g38 + 1)/g66 - g11*g96*(pow(alpha, g20*g5) - 1)/g66 - g12*g94*(g36 + 1)/g63 - g12*g96*(pow(alpha, g1*g20) - 1)/g63 - g31*g68*g97 - g48*g68*g99 - g69*g97*(g37 + 1) - g69*g99*(pow(alpha, g20*g4) - 1);
      SWUpP = -g28*(g10*g101 + g10*g108 + g100 + g105*g11 + g107*g11 + g30*g77*g95 + g32*g75*g95 + g33*g76*g95 + g47*g77*g98 + g49*g75*g98 + g50*g76*g98);
      xP[0] = g28*g92;
      xP[1] = g28*g91;
      xP[2] = g28*g93;
      xP[3] = g28*g51*g71;
      xP[4] = g28*g52*g74;
      xT[0] = g41*g83;
      xT[1] = g41*g85;
      xT[2] = g41*g84;
      xT[3] = g34*g41*g71;
      xT[4] = g35*g41*g74;
      break;
    case 6:
      n0 = MW[0] - Mstar;
      n1 = log(alpha);
      n2 = xPj - xTj;
      n3 = xF[0] - xPj;
      n4 = MW[1] - Mstar;
      n5 = MW[2] - Mstar;
      n6 = MW[3] - Mstar;
      n7 = MW[4] - Mstar;
      n8 = MW[5] - Mstar;
      n9 = log(xTj);
      n10 = xF[0]*xPj;
      n11 = -Mstar;
      n12 = -xF[0];
      n13 = -xTj;
      n14 = -xPj;
      n15 = 2*NP0;
      n16 = 0.5*xF[0];
      n17 = pow(n0, 2);
      n18 = pow(n1, 2);
      n19 = pow(n4, 2);
      n20 = pow(n5, 2);
      n21 = pow(n6, 2);
      n22 = pow(n7, 2);
      n23 = pow(n8, 2);
      n24 = Mstar*n1;
      n25 = 2*n1;
      n26 = -1.0*xF[0];
      n27 = pow(alpha, NP0*n0);
      n28 = n10 + n12*xTj;
      n29 = n10 + n13*xPj;
      n30 = pow(alpha, NP0*n4);
      n31 = pow(alpha, NP0*n5);
      n32 = pow(alpha, NP0*n6);
      n33 = pow(alpha, NP0*n7);
      n34 = pow(alpha, NP0*n8);
      n35 = -MW[0]*n1;
      n36 = n2/n3;
      n37 = -n27 + 1;
      n38 = -n30 + 1;
      n39 = pow(alpha, n0*n15);
      n40 = pow(n28, 2);
      n41 = pow(n29, 2);
      n42 = -n31 + 1;
      n43 = -n32 + 1;
      n44 = -n33 + 1;
      n45 = -n34 + 1;
      n46 = -n27;
      n47 = 1/(n0*n1);
      n48 = n0*n18;
      n49 = n45*xF[5];
      n50 = n32*n6;
      n51 = n30*n4;
      n52 = n33*n7;
      n53 = n0*n27;
      n54 = n34*n8;
      n55 = n42*xF[2];
      n56 = n31*n5;
      n57 = n17*n18;
      n58 = log((-1.0 + xPj/xF[0])/n2);
      n59 = n56*xF[2];
      n60 = -n44*xF[4];
      n61 = -n38*xF[1];
      n62 = n29/n28;
      n63 = n18*n20*n31;
      n64 = n18*n22*n33;
      n65 = n27*n57;
      n66 = n18*n21*n32;
      n67 = n18*n19*n30;
      n68 = -n36*n49;
      n69 = n46*n62 + 1;
      n70 = pow(n69, 2);
      n71 = n24 + n35 + n58 + n9;
      n72 = n27*n62/n69;
      n73 = n18*n39*n41/(n40*n70);
      n74 = n47*(n71 - log(n69)) + 1;
      n75 = pow(alpha, n0*n74);
      n76 = pow(alpha, n4*n74);
      n77 = pow(alpha, n5*n74);
      n78 = pow(alpha, n6*n74);
      n79 = pow(alpha, n7*n74);
      n80 = pow(alpha, n74*n8);
      n81 = n4/n76;
      n82 = n7/n79;
      n83 = n6/n78;
      n84 = n8/n80;
      n85 = n5/n77;
      n86 = n37 - 1 + 1.0/n75;
      n87 = n38 - 1 + 1.0/n76;
      n88 = n42 - 1 + 1.0/n77;
      n89 = n43 - 1 + 1.0/n78;
      n90 = n44 - 1 + 1.0/n79;
      n91 = n45 - 1 + 1.0/n80;
      n92 = pow(n86, 2);
      n93 = pow(n87, 2);
      n94 = pow(n88, 2);
      n95 = pow(n89, 2);
      n96 = pow(n90, 2);
      n97 = pow(n91, 2);
      n98 = pow(n86, 3);
      n99 = pow(n87, 3);
      n100 = pow(n88, 3);
      n101 = pow(n89, 3);
      n102 = pow(n90, 3);
      n103 = pow(n91, 3);
      n104 = xF[1]/n87;
      n105 = xF[4]/n90;
      n106 = xF[2]/n88;
      n107 = xF[3]/n89;
      n108 = n1/n88;
      n109 = n1/n86;
      n110 = n1*n107;
      n111 = n37/n98;
      n112 = -n43*xF[3]/n95;
      n113 = n1*n54*xF[5]/n91;
      n114 = n65/n86;
      n115 = n18*n23*n34*xF[5]/n91;
      n116 = n109*n12*n36*n53;
      n117 = n114*n36*xF[0];
      n118 = n104*n36*n67;
      n119 = n106*n36*n63;
      n120 = n107*n36*n66;
      n121 = n105*n36*n64;
      n122 = n115*n36;
      n123 = n114*n16*n36;
      n124 = n62/(n69*n75) + 1;
      n125 = n1*n53*n62/(n69*n75) + n1*n53;
      n126 = n1*n51 + n1*n72*n81;
      n127 = n1*n56 + n1*n72*n85;
      n128 = n1*n50 + n1*n72*n83;
      n129 = n1*n52 + n1*n72*n82;
      n130 = n1*n54 + n1*n72*n84;
      n131 = pow(n125, 2);
      n132 = pow(n126, 2);
      n133 = pow(n127, 2);
      n134 = pow(n128, 2);
      n135 = pow(n129, 2);
      n136 = pow(n130, 2);
      n137 = n128*xF[3];
      n138 = n25*n53*n62/(n69*n75) + n25*n53;
      n139 = 2*n131;
      n140 = n62*n65/(n69*n75) + n65;
      n141 = n129*n60;
      n142 = n124*n37*xF[0]/n92;
      n143 = n130/n97;
      n144 = n127/n94;
      n145 = n126/n93;
      n146 = n129*xF[4]/n96;
      n147 = n125*xF[0]/n92;
      n148 = 2*n136/n103;
      n149 = 2*n135/n102;
      n150 = 2*n132/n99;
      n151 = -2*n133/n100;
      n152 = -2*n134*n43*xF[3]/n101;
      n153 = n140*n37/n92;
      n154 = n147*n36*n37;
      n155 = n25*n36*n53*xF[0]*(pow(alpha, NP0*n0 - n0*n74)*n0*n1*n62/n69 + n1*n53)/n92;
      n156 = n25*n36*n51*xF[1]*(pow(alpha, NP0*n0 - n4*n74)*n1*n4*n62/n69 + n1*n51)/n93;
      n157 = n25*n36*n59*(pow(alpha, NP0*n0 - n5*n74)*n1*n5*n62/n69 + n1*n56)/n94;
      n158 = n25*n36*n50*xF[3]*(pow(alpha, NP0*n0 - n6*n74)*n1*n6*n62/n69 + n1*n50)/n95;
      n159 = n25*n36*n52*xF[4]*(pow(alpha, NP0*n0 - n7*n74)*n1*n62*n7/n69 + n1*n52)/n96;
      n160 = n25*n36*n54*xF[5]*(pow(alpha, NP0*n0 - n74*n8)*n1*n62*n8/n69 + n1*n54)/n97;
      n161 = 1.0*n1*n147*n36*n53;
      n162 = n12*n36*n37*(pow(alpha, NP0*n0 - n0*n74)*n57*n62/n69 + n65)/n92;
      n163 = -0.5*n153*n36*xF[0];
      n164 = n125*n138;
      n165 = -n19*n73/n76 + n39*n41*n48*n81/(n40*n70) + n48*n72*n81 + n67;
      n166 = -n20*n73/n77 + n39*n41*n48*n85/(n40*n70) + n48*n72*n85 + n63;
      n167 = -n22*n73/n79 + n39*n41*n48*n82/(n40*n70) + n48*n72*n82 + n64;
      n168 = n18*n23*n34 - n23*n73/n80 + n39*n41*n48*n84/(n40*n70) + n48*n72*n84;
      n169 = n36*n61*(-pow(alpha, n0*n15 - n4*n74)*n18*n19*n41/(n40*n70) + pow(alpha, n0*n15 - n4*n74)*n4*n41*n48/(n40*n70) + n48*n72*n81 + n67)/n93;
      n170 = -n36*n55*(-pow(alpha, n0*n15 - n5*n74)*n18*n20*n41/(n40*n70) + pow(alpha, n0*n15 - n5*n74)*n41*n48*n5/(n40*n70) + n48*n72*n85 + n63)/n94;
      n171 = n112*n36*(-pow(alpha, n0*n15 - n6*n74)*n18*n21*n41/(n40*n70) + pow(alpha, n0*n15 - n6*n74)*n41*n48*n6/(n40*n70) + n48*n72*n83 + n66);
      n172 = n36*n60*(-pow(alpha, n0*n15 - n7*n74)*n18*n22*n41/(n40*n70) + pow(alpha, n0*n15 - n7*n74)*n41*n48*n7/(n40*n70) + n48*n72*n82 + n64)/n96;
      n173 = n68*(-pow(alpha, n0*n15 - n74*n8)*n18*n23*n41/(n40*n70) + pow(alpha, n0*n15 - n74*n8)*n41*n48*n8/(n40*n70) + n18*n23*n34 + n48*n72*n84)/n97;
      n174 = n123 + n161 + n163;
      n175 = xTj*(n1*n104*n36*n51 + n1*n105*n36*n52 + n108*n36*n59 + n109*n36*n53*xF[0] + n110*n36*n50 + n112*n128*n36 + n113*n36 + n12*n36*n37*(pow(alpha, NP0*n0 - n0*n74)*n0*n1*n62/n69 + n1*n53)/n92 + n141*n36/n96 + n143*n68 - n144*n36*n55 + n145*n36*n61);
      n176 = n116 + n154 + n175;
      n177 = n117 + n118 + n119 + n120 + n121 + n122 + n155 + n156 + n157 + n158 + n159 + n160 + n162 + n169 + n170 + n171 + n172 + n173;
      n178 = n111*n12*n36*(pow(alpha, NP0*n0 - n0*n74)*n0*n1*n62/n69 + n1*n53)*(pow(alpha, NP0*n0 - n0*n74)*n0*n25*n62/n69 + n25*n53) + n126*n36*n61*(n25*n51 + n25*n72*n81)/n99 + n177 + n130*n68*(n25*n54 + n25*n72*n84)/n103 + n141*n36*(n25*n52 + n25*n72*n82)/n102 - n137*n36*n43*(n25*n50 + n25*n72*n83)/n101 - n127*n36*n55*(n25*n56 + n25*n72*n85)/n100;
      NP_b = -n1*n142*n36*n53 - n116 - n15*(1.0*n1*n36*n53*xF[0]*(pow(alpha, NP0*n0 - n0*n74)*n0*n1*n62/n69 + n1*n53)/n92 + n111*n131*n26*n36 + n123 - 0.5*n36*n37*xF[0]*(pow(alpha, NP0*n0 - n0*n74)*n57*n62/n69 + n65)/n92 - 0.5*xTj*(-n111*n139*n36*xF[0] + n112*n36*(pow(alpha, NP0*n0 - n6*n74)*n48*n6*n62/n69 - pow(alpha, n0*n15 - n6*n74)*n18*n21*n41/(n40*n70) + pow(alpha, n0*n15 - n6*n74)*n41*n48*n6/(n40*n70) + n66) + n117 + n118 + n119 + n120 + n121 + n122 - n148*n36*n49 - n149*n36*n44*xF[4] - n150*n36*n38*xF[1] + n151*n36*n55 + n152*n36 + n155 + n156 + n157 + n158 + n159 + n160 + n162 - n36*n55*(pow(alpha, NP0*n0 - n5*n74)*n48*n5*n62/n69 - pow(alpha, n0*n15 - n5*n74)*n18*n20*n41/(n40*n70) + pow(alpha, n0*n15 - n5*n74)*n41*n48*n5/(n40*n70) + n63)/n94 + n36*n60*(pow(alpha, NP0*n0 - n7*n74)*n48*n62*n7/n69 - pow(alpha, n0*n15 - n7*n74)*n18*n22*n41/(n40*n70) + pow(alpha, n0*n15 - n7*n74)*n41*n48*n7/(n40*n70) + n64)/n96 + n36*n61*(pow(alpha, NP0*n0 - n4*n74)*n4*n48*n62/n69 - pow(alpha, n0*n15 - n4*n74)*n18*n19*n41/(n40*n70) + pow(alpha, n0*n15 - n4*n74)*n4*n41*n48/(n40*n70) + n67)/n93 + n68*(pow(alpha, NP0*n0 - n74*n8)*n48*n62*n8/n69 - pow(alpha, n0*n15 - n74*n8)*n18*n23*n41/(n40*n70) + pow(alpha, n0*n15 - n74*n8)*n41*n48*n8/(n40*n70) + n18*n23*n34)/n97)) - n36*xTj*(n1*n104*n51 + n1*n105*n52 + n108*n59 + n109*n53*xF[0] + n110*n50 + n112*n128 + n113 + n12*n37*(pow(alpha, NP0*n0 - n0*n74)*n0*n1*n62/n69 + n1*n53)/n92 + n141/n96 - n143*n49 - n144*n55 + n145*n61);
      NP_2a = -n36*(2*n111*pow(n124, 2)*n39*n57*xF[0] + n114*n26 - 2.0*n124*n39*n57*xF[0]/n92 + n142*n65 + 1.0*xTj*(n104*n67 + n105*n64 + n106*n63 + n107*n66 - n111*n139*xF[0] + n112*(-pow(alpha, n0*n15 - n6*n74)*n18*n21*n41/(n40*n70) + pow(alpha, n0*n15 - n6*n74)*n41*n48*n6/(n40*n70) + n48*n72*n83 + n66) + n114*xF[0] + n115 + n12*n37*(pow(alpha, NP0*n0 - n0*n74)*n57*n62/n69 + n65)/n92 - n148*n49 - n149*n44*xF[4] - n150*n38*xF[1] + n151*n55 + n152 + n25*n50*xF[3]*(pow(alpha, NP0*n0 - n6*n74)*n1*n6*n62/n69 + n1*n50)/n95 + n25*n51*xF[1]*(pow(alpha, NP0*n0 - n4*n74)*n1*n4*n62/n69 + n1*n51)/n93 + n25*n52*xF[4]*(pow(alpha, NP0*n0 - n7*n74)*n1*n62*n7/n69 + n1*n52)/n96 + n25*n53*xF[0]*(pow(alpha, NP0*n0 - n0*n74)*n0*n1*n62/n69 + n1*n53)/n92 + n25*n54*xF[5]*(pow(alpha, NP0*n0 - n74*n8)*n1*n62*n8/n69 + n1*n54)/n97 + n25*n59*(pow(alpha, NP0*n0 - n5*n74)*n1*n5*n62/n69 + n1*n56)/n94 - n49*(-pow(alpha, n0*n15 - n74*n8)*n18*n23*n41/(n40*n70) + pow(alpha, n0*n15 - n74*n8)*n41*n48*n8/(n40*n70) + n18*n23*n34 + n48*n72*n84)/n97 - n55*(-pow(alpha, n0*n15 - n5*n74)*n18*n20*n41/(n40*n70) + pow(alpha, n0*n15 - n5*n74)*n41*n48*n5/(n40*n70) + n48*n72*n85 + n63)/n94 + n60*(-pow(alpha, n0*n15 - n7*n74)*n18*n22*n41/(n40*n70) + pow(alpha, n0*n15 - n7*n74)*n41*n48*n7/(n40*n70) + n48*n72*n82 + n64)/n96 + n61*(-pow(alpha, n0*n15 - n4*n74)*n18*n19*n41/(n40*n70) + pow(alpha, n0*n15 - n4*n74)*n4*n41*n48/(n40*n70) + n48*n72*n81 + n67)/n93));
      NP_sqrt_base = pow(-n15*(1.0*n1*n36*n53*xF[0]*(pow(alpha, NP0*n0 - n0*n74)*n0*n1*n62/n69 + n1*n53)/n92 - 0.5*n111*n36*xF[0]*(pow(alpha, NP0*n0 - n0*n74)*n0*n1*n62/n69 + n1*n53)*(pow(alpha, NP0*n0 - n0*n74)*n0*n25*n62/n69 + n25*n53) + n123 - 0.5*n36*n37*xF[0]*(pow(alpha, NP0*n0 - n0*n74)*n57*n62/n69 + n65)/n92 - 0.5*xTj*(n111*n12*n36*(pow(alpha, NP0*n0 - n0*n74)*n0*n1*n62/n69 + n1*n53)*(pow(alpha, NP0*n0 - n0*n74)*n0*n25*n62/n69 + n25*n53) + n112*n36*(pow(alpha, NP0*n0 - n6*n74)*n48*n6*n62/n69 - pow(alpha, n0*n15 - n6*n74)*n18*n21*n41/(n40*n70) + pow(alpha, n0*n15 - n6*n74)*n41*n48*n6/(n40*n70) + n66) + n117 + n118 + n119 + n120 + n121 + n122 + n155 + n156 + n157 + n158 + n159 + n160 + n162 - n36*n55*(pow(alpha, NP0*n0 - n5*n74)*n48*n5*n62/n69 - pow(alpha, n0*n15 - n5*n74)*n18*n20*n41/(n40*n70) + pow(alpha, n0*n15 - n5*n74)*n41*n48*n5/(n40*n70) + n63)/n94 + n36*n60*(pow(alpha, NP0*n0 - n7*n74)*n48*n62*n7/n69 - pow(alpha, n0*n15 - n7*n74)*n18*n22*n41/(n40*n70) + pow(alpha, n0*n15 - n7*n74)*n41*n48*n7/(n40*n70) + n64)/n96 + n36*n61*(pow(alpha, NP0*n0 - n4*n74)*n1*n4*n62/n69 + n1*n51)*(pow(alpha, NP0*n0 - n4*n74)*n25*n4*n62/n69 + n25*n51)/n99 + n36*n61*(pow(alpha, NP0*n0 - n4*n74)*n4*n48*n62/n69 - pow(alpha, n0*n15 - n4*n74)*n18*n19*n41/(n40*n70) + pow(alpha, n0*n15 - n4*n74)*n4*n41*n48/(n40*n70) + n67)/n93 + n68*(pow(alpha, NP0*n0 - n74*n8)*n48*n62*n8/n69 - pow(alpha, n0*n15 - n74*n8)*n18*n23*n41/(n40*n70) + pow(alpha, n0*n15 - n74*n8)*n41*n48*n8/(n40*n70) + n18*n23*n34)/n97 + n68*(pow(alpha, NP0*n0 - n74*n8)*n1*n62*n8/n69 + n1*n54)*(pow(alpha, NP0*n0 - n74*n8)*n25*n62*n8/n69 + n25*n54)/n103 + n36*n60*(pow(alpha, NP0*n0 - n7*n74)*n1*n62*n7/n69 + n1*n52)*(pow(alpha, NP0*n0 - n7*n74)*n25*n62*n7/n69 + n25*n52)/n102 - n36*n43*xF[3]*(pow(alpha, NP0*n0 - n6*n74)*n1*n6*n62/n69 + n1*n50)*(pow(alpha, NP0*n0 - n6*n74)*n25*n6*n62/n69 + n25*n50)/n101 - n36*n55*(pow(alpha, NP0*n0 - n5*n74)*n1*n5*n62/n69 + n1*n56)*(pow(alpha, NP0*n0 - n5*n74)*n25*n5*n62/n69 + n25*n56)/n100)) - n176, 2) + (-pow(NP0, 2)*(-n1*n26*n36*n53*(pow(alpha, NP0*n0 - n0*n74)*n0*n1*n62/n69 + n1*n53)/n92 - n111*n16*n36*(pow(alpha, NP0*n0 - n0*n74)*n0*n1*n62/n69 + n1*n53)*(pow(alpha, NP0*n0 - n0*n74)*n0*n25*n62/n69 + n25*n53) + 0.5*n117 - n16*n36*n37*(pow(alpha, NP0*n0 - n0*n74)*n57*n62/n69 + n65)/n92 - 0.5*n178*xTj) - NP0*n176 - n12*n36*n37/(n37 - 1 + pow(alpha, -n0*(n47*(n71 - log(n29*n46/(n10 + n13*xF[0]) + 1)) + 1))) - n13*(-n36*n37*xF[0]/(n37 - 1 + pow(alpha, -n0*(n47*(n71 - log(1 + n46*(n10 + n14*xTj)/n28)) + 1))) - n36*n38*xF[1]/(n38 - 1 + pow(alpha, -n4*(n47*(n71 - log(1 + n46*(n10 + n14*xTj)/n28)) + 1))) - n36*n43*xF[3]/(n43 - 1 + pow(alpha, -n6*(n47*(n71 - log(1 + n46*(n10 + n14*xTj)/n28)) + 1))) - n36*n44*xF[4]/(n44 - 1 + pow(alpha, -n7*(n47*(n71 - log(1 + n46*(n10 + n14*xTj)/n28)) + 1))) - n36*n49/(n45 - 1 + pow(alpha, -n8*(n47*(n71 - log(1 + n46*(n10 + n14*xTj)/n28)) + 1))) - n36*n55/(n42 - 1 + pow(alpha, -n5*(n47*(n71 - log(1 + n46*(n10 + n14*xTj)/n28)) + 1)))))*(4.0*n1*n147*n36*n53 - 4.0*n111*n131*n36*xF[0] + 2.0*n117 - 2.0*n153*n36*xF[0] - 2.0*n178*xTj);
      NP_sqrt_base = fabs(NP_sqrt_base);
      NP1 = (-NP_b - sqrt(NP_sqrt_base))/NP_2a;
      NT1 = n47*(n71 - log(-pow(alpha, NP1*n0)*n62 + 1));
      g0 = MW[1] - Mstar;
      g1 = MW[0] - Mstar;
      g2 = NT1 + 1;
      g3 = xPj - xTj;
      g4 = MW[2] - Mstar;
      g5 = MW[3] - Mstar;
      g6 = MW[4] - Mstar;
      g7 = MW[5] - Mstar;
      g8 = xF[0] - xTj;
      g9 = xF[0] - xPj;
      g10 = -xTj;
      g11 = xPj/xF[1];
      g12 = pow(alpha, -g1);
      g13 = pow(alpha, -g0);
      g14 = pow(alpha, -g4);
      g15 = pow(alpha, -g5);
      g16 = pow(alpha, -g6);
      g17 = pow(alpha, -g7);
      g18 = log(xF[0]/xF[1]);
      g19 = -g2;
      g20 = pow(alpha, NP1*g0);
      g21 = pow(alpha, NP1*g1);
      g22 = log(g12);
      g23 = pow(alpha, NP1*g4);
      g24 = pow(alpha, NP1*g5);
      g25 = pow(alpha, NP1*g6);
      g26 = pow(alpha, NP1*g7);
      g27 = -g18;
      g28 = g3/g8;
      g29 = g8/g3;
      g30 = -g20 + 1;
      g31 = -g20 + 1;
      g32 = -g21 + 1;
      g33 = -g23 + 1;
      g34 = -g24 + 1;
      g35 = -g25 + 1;
      g36 = -g26 + 1;
      g37 = -g21;
      g38 = -g23;
      g39 = -g24;
      g40 = -g25;
      g41 = -g26;
      g42 = -1.0*g18;
      g43 = -g3/g9;
      g44 = pow(alpha, g0*g19) - 1;
      g45 = pow(alpha, g0*g19) - 1;
      g46 = pow(alpha, g1*g19) - 1;
      g47 = pow(alpha, g19*g4) - 1;
      g48 = pow(alpha, g19*g5) - 1;
      g49 = pow(alpha, g19*g6) - 1;
      g50 = pow(alpha, g19*g7) - 1;
      g51 = -pow(alpha, g1*g19);
      g52 = -pow(alpha, g19*g4);
      g53 = -pow(alpha, g19*g5);
      g54 = -pow(alpha, g19*g6);
      g55 = -pow(alpha, g19*g7);
      g56 = g10*g9/(g3*xF[1]);
      g57 = g31 + g45;
      g58 = -g21 - g51;
      g59 = -g23 - g52;
      g60 = -g24 - g53;
      g61 = -g25 - g54;
      g62 = -g26 - g55;
      g63 = pow(alpha, g1*g19) + g37;
      g64 = g31 + g45;
      g65 = pow(alpha, g19*g4) + g38;
      g66 = pow(alpha, g19*g5) + g39;
      g67 = pow(alpha, g19*g6) + g40;
      g68 = pow(alpha, g19*g7) + g41;
      g69 = xF[5]/g68;
      g70 = xF[4]/g67;
      g71 = xF[3]/g66;
      g72 = xF[1]/g64;
      g73 = xF[2]/g65;
      g74 = xF[0]/g63;
      g75 = xF[1]/g57;
      g76 = xF[3]/g60;
      g77 = xF[0]/g58;
      g78 = xF[4]/g61;
      g79 = xF[5]/g62;
      g80 = xF[2]/g59;
      g81 = g35/g61;
      g82 = g32/g58;
      g83 = g34/g60;
      g84 = g36/g62;
      g85 = g30/g57;
      g86 = g33/g59;
      g87 = g44/g57;
      g88 = g47/g59;
      g89 = g48/g60;
      g90 = g50/g62;
      g91 = g46/g58;
      g92 = g49/g61;
      g93 = log(g56*g64/g31);
      g94 = log(g56*g57/g30);
      g95 = log(g11*g29*g64/g45);
      g96 = 1.0*g93;
      g97 = log(g11*g29*g57/g44);
      g98 = 1.0*g95;
      g99 = -g31*g72*g96 - g42*xF[0] - g42*xF[1] - g42*xF[2] - g42*xF[3] - g42*xF[4] - g42*xF[5] - g45*g72*g98 - g69*g96*(g41 + 1) - g69*g98*(pow(alpha, g19*g7) - 1) - g70*g96*(g40 + 1) - g70*g98*(pow(alpha, g19*g6) - 1) - g71*g96*(g39 + 1) - g71*g98*(pow(alpha, g19*g5) - 1) - g73*g96*(g38 + 1) - g73*g98*(pow(alpha, g19*g4) - 1) - g74*g96*(g37 + 1) - g74*g98*(pow(alpha, g1*g19) - 1);
      LpF = xF[0]*(g12 + 1.0)*(g27 + g82*g94 + g91*g97)/(g22*(g12 - 1.0)) + xF[1]*(g13 + 1.0)*(g27 + g85*g94 + g87*g97)/(g22*(g13 - 1.0)) + xF[2]*(g14 + 1.0)*(g27 + g86*g94 + g88*g97)/(g22*(g14 - 1.0)) + xF[3]*(g15 + 1.0)*(g27 + g83*g94 + g89*g97)/(g22*(g15 - 1.0)) + xF[4]*(g16 + 1.0)*(g27 + g81*g94 + g92*g97)/(g22*(g16 - 1.0)) + xF[5]*(g17 + 1.0)*(g27 + g84*g94 + g90*g97)/(g22*(g17 - 1.0));
      PpF = g29;
      TpF = -g9/g3;
      SWUpF = g99;
      SWUpP = g28*g99;
      xP[0] = g28*g46*g77;
      xP[1] = g28*g44*g75;
      xP[2] = g28*g47*g80;
      xP[3] = g28*g48*g76;
      xP[4] = g28*g49*g78;
      xP[5] = g28*g50*g79;
      xT[0] = g32*g43*g77;
      xT[1] = g30*g43*g75;
      xT[2] = g33*g43*g80;
      xT[3] = g34*g43*g76;
      xT[4] = g35*g43*g78;
      xT[5] = g36*g43*g79;
      break;
    case 7:
      n0 = MW[0] - Mstar;
      n1 = log(alpha);
      n2 = xPj - xTj;
      n3 = xF[0] - xPj;
      n4 = MW[1] - Mstar;
      n5 = MW[2] - Mstar;
      n6 = MW[3] - Mstar;
      n7 = MW[4] - Mstar;
      n8 = MW[5] - Mstar;
      n9 = MW[6] - Mstar;
      n10 = log(xTj);
      n11 = -2;
      n12 = xF[0]*xPj;
      n13 = -Mstar;
      n14 = -NP0*n11;
      n15 = -xPj;
      n16 = -xF[0];
      n17 = pow(n0, -n11);
      n18 = pow(n1, -n11);
      n19 = pow(n4, -n11);
      n20 = pow(n5, -n11);
      n21 = pow(n6, -n11);
      n22 = pow(n7, -n11);
      n23 = pow(n8, -n11);
      n24 = pow(n9, -n11);
      n25 = Mstar*n1;
      n26 = -n1*n11;
      n27 = -0.5*xTj;
      n28 = pow(alpha, NP0*n0);
      n29 = n12 + n16*xTj;
      n30 = n12 + n15*xTj;
      n31 = pow(alpha, NP0*n4);
      n32 = pow(alpha, NP0*n5);
      n33 = pow(alpha, NP0*n6);
      n34 = pow(alpha, NP0*n7);
      n35 = pow(alpha, NP0*n8);
      n36 = pow(alpha, NP0*n9);
      n37 = -MW[0]*n1;
      n38 = n2/n3;
      n39 = -n28 + 1;
      n40 = -n31 + 1;
      n41 = pow(alpha, n0*n14);
      n42 = pow(n29, -n11);
      n43 = pow(n30, -n11);
      n44 = -n32 + 1;
      n45 = -n33 + 1;
      n46 = -n34 + 1;
      n47 = -n35 + 1;
      n48 = -n36 + 1;
      n49 = -n48;
      n50 = -n44;
      n51 = -n28;
      n52 = 1/(n0*n1);
      n53 = n0*n18;
      n54 = n32*n5;
      n55 = n35*n8;
      n56 = n36*n9;
      n57 = n33*n6;
      n58 = n34*n7;
      n59 = n31*n4;
      n60 = n0*n28;
      n61 = n17*n18;
      n62 = log((-1.0 + xPj/xF[0])/n2);
      n63 = -n47*xF[5];
      n64 = -n40*xF[1];
      n65 = -n46*xF[4];
      n66 = n30/n29;
      n67 = n18*n20*n32;
      n68 = n18*n22*n34;
      n69 = n28*n61;
      n70 = n18*n21*n33;
      n71 = n18*n24*n36;
      n72 = n38*n63;
      n73 = n51*n66 + 1;
      n74 = pow(n73, -n11);
      n75 = n10 + n25 + n37 + n62;
      n76 = n28*n66/n73;
      n77 = n18*n41*n43/(n42*n74);
      n78 = n52*(n75 - log(n73)) + 1;
      n79 = pow(alpha, n0*n78);
      n80 = pow(alpha, n4*n78);
      n81 = pow(alpha, n5*n78);
      n82 = pow(alpha, n6*n78);
      n83 = pow(alpha, n7*n78);
      n84 = pow(alpha, n78*n8);
      n85 = pow(alpha, n78*n9);
      n86 = n4/n80;
      n87 = n7/n83;
      n88 = n6/n82;
      n89 = n9/n85;
      n90 = n8/n84;
      n91 = n5/n81;
      n92 = n39 - 1 + 1.0/n79;
      n93 = n40 - 1 + 1.0/n80;
      n94 = n44 - 1 + 1.0/n81;
      n95 = n45 - 1 + 1.0/n82;
      n96 = n46 - 1 + 1.0/n83;
      n97 = n47 - 1 + 1.0/n84;
      n98 = n48 - 1 + 1.0/n85;
      n99 = pow(n92, -n11);
      n100 = pow(n93, -n11);
      n101 = pow(n94, -n11);
      n102 = pow(n95, -n11);
      n103 = pow(n96, -n11);
      n104 = pow(n97, -n11);
      n105 = pow(n98, -n11);
      n106 = pow(n92, 3);
      n107 = pow(n93, 3);
      n108 = pow(n94, 3);
      n109 = pow(n95, 3);
      n110 = pow(n96, 3);
      n111 = pow(n97, 3);
      n112 = pow(n98, 3);
      n113 = xF[6]/n98;
      n114 = xF[2]/n94;
      n115 = xF[4]/n96;
      n116 = xF[3]/n95;
      n117 = n1/n92;
      n118 = xF[6]/n112;
      n119 = n1*xF[5]/n97;
      n120 = n1*xF[1]/n93;
      n121 = n1*n116;
      n122 = n39/n92;
      n123 = n39*xF[0]/n106;
      n124 = n45*xF[3]/n109;
      n125 = -n45*xF[3]/n102;
      n126 = n69*xF[0]/n92;
      n127 = n18*n19*n31*xF[1]/n93;
      n128 = n18*n23*n35*xF[5]/n97;
      n129 = n117*n38*n60*xF[0];
      n130 = n117*n16*n38*n60;
      n131 = n126*n38;
      n132 = n127*n38;
      n133 = n114*n38*n67;
      n134 = n116*n38*n70;
      n135 = n115*n38*n68;
      n136 = n128*n38;
      n137 = n113*n38*n71;
      n138 = 0.5*n131;
      n139 = n66/(n73*n79) + 1;
      n140 = n1*n60*n66/(n73*n79) + n1*n60;
      n141 = n1*n59 + n1*n76*n86;
      n142 = n1*n54 + n1*n76*n91;
      n143 = n1*n57 + n1*n76*n88;
      n144 = n1*n58 + n1*n76*n87;
      n145 = n1*n55 + n1*n76*n90;
      n146 = n1*n56 + n1*n76*n89;
      n147 = pow(n140, -n11);
      n148 = pow(n141, -n11);
      n149 = pow(n142, -n11);
      n150 = pow(n143, -n11);
      n151 = pow(n144, -n11);
      n152 = pow(n145, -n11);
      n153 = pow(n146, -n11);
      n154 = n142*xF[2];
      n155 = n26*n60*n66/(n73*n79) + n26*n60;
      n156 = n66*n69/(n73*n79) + n69;
      n157 = n153*n48;
      n158 = n144*n65;
      n159 = n139*n39*xF[0]/n99;
      n160 = n145/n104;
      n161 = n141/n100;
      n162 = n140/n99;
      n163 = n146*xF[6]/n105;
      n164 = n162*xF[0];
      n165 = n149*n44*xF[2]/n108;
      n166 = n156*n39/n99;
      n167 = n16*n38*n39*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n66/n73 + n1*n60)/n99;
      n168 = n1*n11*n16*n38*n60*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n66/n73 + n1*n60)/n99;
      n169 = n26*n38*n59*xF[1]*(pow(alpha, NP0*n0 - n4*n78)*n1*n4*n66/n73 + n1*n59)/n100;
      n170 = n26*n38*n54*xF[2]*(pow(alpha, NP0*n0 - n5*n78)*n1*n5*n66/n73 + n1*n54)/n101;
      n171 = n26*n38*n57*xF[3]*(pow(alpha, NP0*n0 - n6*n78)*n1*n6*n66/n73 + n1*n57)/n102;
      n172 = n26*n38*n58*xF[4]*(pow(alpha, NP0*n0 - n7*n78)*n1*n66*n7/n73 + n1*n58)/n103;
      n173 = n26*n38*n55*xF[5]*(pow(alpha, NP0*n0 - n78*n8)*n1*n66*n8/n73 + n1*n55)/n104;
      n174 = n26*n38*n56*xF[6]*(pow(alpha, NP0*n0 - n78*n9)*n1*n66*n9/n73 + n1*n56)/n105;
      n175 = 1.0*n1*n164*n38*n60;
      n176 = n16*n38*n39*(pow(alpha, NP0*n0 - n0*n78)*n61*n66/n73 + n69)/n99;
      n177 = -0.5*n166*n38*xF[0];
      n178 = n129 + n167;
      n179 = n18*n19*n31 - n19*n77/n80 + n41*n43*n53*n86/(n42*n74) + n53*n76*n86;
      n180 = -n20*n77/n81 + n41*n43*n53*n91/(n42*n74) + n53*n76*n91 + n67;
      n181 = -n22*n77/n83 + n41*n43*n53*n87/(n42*n74) + n53*n76*n87 + n68;
      n182 = n18*n23*n35 - n23*n77/n84 + n41*n43*n53*n90/(n42*n74) + n53*n76*n90;
      n183 = -n24*n77/n85 + n41*n43*n53*n89/(n42*n74) + n53*n76*n89 + n71;
      n184 = n38*n64*(-pow(alpha, n0*n14 - n4*n78)*n18*n19*n43/(n42*n74) + pow(alpha, n0*n14 - n4*n78)*n4*n43*n53/(n42*n74) + n18*n19*n31 + n53*n76*n86)/n100;
      n185 = n38*n50*xF[2]*(-pow(alpha, n0*n14 - n5*n78)*n18*n20*n43/(n42*n74) + pow(alpha, n0*n14 - n5*n78)*n43*n5*n53/(n42*n74) + n53*n76*n91 + n67)/n101;
      n186 = n125*n38*(-pow(alpha, n0*n14 - n6*n78)*n18*n21*n43/(n42*n74) + pow(alpha, n0*n14 - n6*n78)*n43*n53*n6/(n42*n74) + n53*n76*n88 + n70);
      n187 = n38*n65*(-pow(alpha, n0*n14 - n7*n78)*n18*n22*n43/(n42*n74) + pow(alpha, n0*n14 - n7*n78)*n43*n53*n7/(n42*n74) + n53*n76*n87 + n68)/n103;
      n188 = n72*(-pow(alpha, n0*n14 - n78*n8)*n18*n23*n43/(n42*n74) + pow(alpha, n0*n14 - n78*n8)*n43*n53*n8/(n42*n74) + n18*n23*n35 + n53*n76*n90)/n104;
      n189 = n38*n49*xF[6]*(-pow(alpha, n0*n14 - n78*n9)*n18*n24*n43/(n42*n74) + pow(alpha, n0*n14 - n78*n9)*n43*n53*n9/(n42*n74) + n53*n76*n89 + n71)/n105;
      n190 = n138 + n175 + n177;
      n191 = n1*n113*n38*n56 + n1*n114*n38*n54 + n1*n115*n38*n58 + n119*n38*n55 + n120*n38*n59 + n121*n38*n57 + n125*n143*n38 + n160*n72 + n161*n38*n64 + n163*n38*n49 + n178 + n158*n38/n103 + n154*n38*n50/n101;
      n192 = n191*xTj;
      n193 = n131 + n132 + n133 + n134 + n135 + n136 + n137 + n168 + n169 + n170 + n171 + n172 + n173 + n174 + n176 + n184 + n185 + n186 + n187 + n188 + n189;
      n194 = n118*n146*n38*n49*(n26*n56 + n26*n76*n89) - n124*n143*n38*(n26*n57 + n26*n76*n88) + n193 + n145*n72*(n26*n55 + n26*n76*n90)/n111 + n158*n38*(n26*n58 + n26*n76*n87)/n110 + n154*n38*n50*(n26*n54 + n26*n76*n91)/n108 + n141*n38*n64*(n26*n59 + n26*n76*n86)/n107 + n16*n38*n39*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n66/n73 + n1*n60)*(pow(alpha, NP0*n0 - n0*n78)*n0*n26*n66/n73 + n26*n60)/n106;
      NP_b = -n1*n159*n38*n60 - n130 - n14*(1.0*n1*n38*n60*xF[0]*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n66/n73 + n1*n60)/n99 - 1.0*n123*n147*n38 + n138 + n27*(n11*n118*n157*n38 + n11*n123*n147*n38 + n11*n124*n150*n38 + n11*n165*n38 + n11*n152*n38*n47*xF[5]/n111 + n11*n151*n38*n46*xF[4]/n110 + n125*n38*(pow(alpha, NP0*n0 - n6*n78)*n53*n6*n66/n73 - pow(alpha, n0*n14 - n6*n78)*n18*n21*n43/(n42*n74) + pow(alpha, n0*n14 - n6*n78)*n43*n53*n6/(n42*n74) + n70) + n131 + n132 + n133 + n134 + n135 + n136 + n137 + n168 + n169 + n170 + n171 + n172 + n173 + n174 + n176 + n11*n148*n38*n40*xF[1]/n107 + n38*n49*xF[6]*(pow(alpha, NP0*n0 - n78*n9)*n53*n66*n9/n73 - pow(alpha, n0*n14 - n78*n9)*n18*n24*n43/(n42*n74) + pow(alpha, n0*n14 - n78*n9)*n43*n53*n9/(n42*n74) + n71)/n105 + n72*(pow(alpha, NP0*n0 - n78*n8)*n53*n66*n8/n73 - pow(alpha, n0*n14 - n78*n8)*n18*n23*n43/(n42*n74) + pow(alpha, n0*n14 - n78*n8)*n43*n53*n8/(n42*n74) + n18*n23*n35)/n104 + n38*n65*(pow(alpha, NP0*n0 - n7*n78)*n53*n66*n7/n73 - pow(alpha, n0*n14 - n7*n78)*n18*n22*n43/(n42*n74) + pow(alpha, n0*n14 - n7*n78)*n43*n53*n7/(n42*n74) + n68)/n103 + n38*n50*xF[2]*(pow(alpha, NP0*n0 - n5*n78)*n5*n53*n66/n73 - pow(alpha, n0*n14 - n5*n78)*n18*n20*n43/(n42*n74) + pow(alpha, n0*n14 - n5*n78)*n43*n5*n53/(n42*n74) + n67)/n101 + n38*n64*(pow(alpha, NP0*n0 - n4*n78)*n4*n53*n66/n73 - pow(alpha, n0*n14 - n4*n78)*n18*n19*n43/(n42*n74) + pow(alpha, n0*n14 - n4*n78)*n4*n43*n53/(n42*n74) + n18*n19*n31)/n100) - 0.5*n38*n39*xF[0]*(pow(alpha, NP0*n0 - n0*n78)*n61*n66/n73 + n69)/n99) - n38*xTj*(n1*n113*n56 + n1*n114*n54 + n1*n115*n58 + n117*n60*xF[0] + n119*n55 + n120*n59 + n121*n57 + n125*n143 + n16*n39*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n66/n73 + n1*n60)/n99 + n160*n63 + n161*n64 + n163*n49 + n158/n103 + n154*n50/n101);
      NP_2a = -n38*(-1.0*n126 - 2.0*n139*n41*n61*xF[0]/n99 + n159*n69 + 1.0*xTj*(n1*n11*n16*n60*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n66/n73 + n1*n60)/n99 + n11*n118*n157 + n11*n123*n147 + n11*n124*n150 + n11*n165 + n11*n152*n47*xF[5]/n111 + n11*n151*n46*xF[4]/n110 + n113*n71 + n114*n67 + n115*n68 + n116*n70 + n125*(-pow(alpha, n0*n14 - n6*n78)*n18*n21*n43/(n42*n74) + pow(alpha, n0*n14 - n6*n78)*n43*n53*n6/(n42*n74) + n53*n76*n88 + n70) + n126 + n127 + n128 + n16*n39*(pow(alpha, NP0*n0 - n0*n78)*n61*n66/n73 + n69)/n99 + n11*n148*n40*xF[1]/n107 + n26*n56*xF[6]*(pow(alpha, NP0*n0 - n78*n9)*n1*n66*n9/n73 + n1*n56)/n105 + n49*xF[6]*(-pow(alpha, n0*n14 - n78*n9)*n18*n24*n43/(n42*n74) + pow(alpha, n0*n14 - n78*n9)*n43*n53*n9/(n42*n74) + n53*n76*n89 + n71)/n105 + n26*n55*xF[5]*(pow(alpha, NP0*n0 - n78*n8)*n1*n66*n8/n73 + n1*n55)/n104 + n63*(-pow(alpha, n0*n14 - n78*n8)*n18*n23*n43/(n42*n74) + pow(alpha, n0*n14 - n78*n8)*n43*n53*n8/(n42*n74) + n18*n23*n35 + n53*n76*n90)/n104 + n26*n58*xF[4]*(pow(alpha, NP0*n0 - n7*n78)*n1*n66*n7/n73 + n1*n58)/n103 + n65*(-pow(alpha, n0*n14 - n7*n78)*n18*n22*n43/(n42*n74) + pow(alpha, n0*n14 - n7*n78)*n43*n53*n7/(n42*n74) + n53*n76*n87 + n68)/n103 + n26*n57*xF[3]*(pow(alpha, NP0*n0 - n6*n78)*n1*n6*n66/n73 + n1*n57)/n102 + n26*n54*xF[2]*(pow(alpha, NP0*n0 - n5*n78)*n1*n5*n66/n73 + n1*n54)/n101 + n50*xF[2]*(-pow(alpha, n0*n14 - n5*n78)*n18*n20*n43/(n42*n74) + pow(alpha, n0*n14 - n5*n78)*n43*n5*n53/(n42*n74) + n53*n76*n91 + n67)/n101 + n26*n59*xF[1]*(pow(alpha, NP0*n0 - n4*n78)*n1*n4*n66/n73 + n1*n59)/n100 + n64*(-pow(alpha, n0*n14 - n4*n78)*n18*n19*n43/(n42*n74) + pow(alpha, n0*n14 - n4*n78)*n4*n43*n53/(n42*n74) + n18*n19*n31 + n53*n76*n86)/n100) + n11*pow(n139, -n11)*n16*n39*n41*n61/n106);
      NP_sqrt_base = (NP0*(n178 - n192) + n122*n38*xF[0] + xTj*(n113*n38*n49 + n114*n38*n50 - n116*n38*n45 + n122*n16*n38 + n38*n64/n93 + n38*n65/n96 + n72/n97) + pow(NP0, -n11)*(-1.0*n1*n164*n38*n60 + 0.5*n123*n140*n155*n38 - 0.5*n131 + 0.5*n166*n38*xF[0] + 0.5*n194*xTj))*(4.0*n1*n164*n38*n60 - n11*n176 + n11*n194*xTj - 4.0*n123*n147*n38 + 2.0*n131) + pow(-n130 - n14*(1.0*n1*n38*n60*xF[0]*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n66/n73 + n1*n60)/n99 - 0.5*n123*n38*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n66/n73 + n1*n60)*(pow(alpha, NP0*n0 - n0*n78)*n0*n26*n66/n73 + n26*n60) + n138 + n27*(n118*n38*n49*(pow(alpha, NP0*n0 - n78*n9)*n1*n66*n9/n73 + n1*n56)*(pow(alpha, NP0*n0 - n78*n9)*n26*n66*n9/n73 + n26*n56) - n124*n38*(pow(alpha, NP0*n0 - n6*n78)*n1*n6*n66/n73 + n1*n57)*(pow(alpha, NP0*n0 - n6*n78)*n26*n6*n66/n73 + n26*n57) + n125*n38*(pow(alpha, NP0*n0 - n6*n78)*n53*n6*n66/n73 - pow(alpha, n0*n14 - n6*n78)*n18*n21*n43/(n42*n74) + pow(alpha, n0*n14 - n6*n78)*n43*n53*n6/(n42*n74) + n70) + n131 + n132 + n133 + n134 + n135 + n136 + n137 + n168 + n169 + n170 + n171 + n172 + n173 + n174 + n176 + n72*(pow(alpha, NP0*n0 - n78*n8)*n1*n66*n8/n73 + n1*n55)*(pow(alpha, NP0*n0 - n78*n8)*n26*n66*n8/n73 + n26*n55)/n111 + n38*n65*(pow(alpha, NP0*n0 - n7*n78)*n1*n66*n7/n73 + n1*n58)*(pow(alpha, NP0*n0 - n7*n78)*n26*n66*n7/n73 + n26*n58)/n110 + n38*n50*xF[2]*(pow(alpha, NP0*n0 - n5*n78)*n1*n5*n66/n73 + n1*n54)*(pow(alpha, NP0*n0 - n5*n78)*n26*n5*n66/n73 + n26*n54)/n108 + n38*n64*(pow(alpha, NP0*n0 - n4*n78)*n1*n4*n66/n73 + n1*n59)*(pow(alpha, NP0*n0 - n4*n78)*n26*n4*n66/n73 + n26*n59)/n107 + n16*n38*n39*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n66/n73 + n1*n60)*(pow(alpha, NP0*n0 - n0*n78)*n0*n26*n66/n73 + n26*n60)/n106 + n38*n49*xF[6]*(pow(alpha, NP0*n0 - n78*n9)*n53*n66*n9/n73 - pow(alpha, n0*n14 - n78*n9)*n18*n24*n43/(n42*n74) + pow(alpha, n0*n14 - n78*n9)*n43*n53*n9/(n42*n74) + n71)/n105 + n72*(pow(alpha, NP0*n0 - n78*n8)*n53*n66*n8/n73 - pow(alpha, n0*n14 - n78*n8)*n18*n23*n43/(n42*n74) + pow(alpha, n0*n14 - n78*n8)*n43*n53*n8/(n42*n74) + n18*n23*n35)/n104 + n38*n65*(pow(alpha, NP0*n0 - n7*n78)*n53*n66*n7/n73 - pow(alpha, n0*n14 - n7*n78)*n18*n22*n43/(n42*n74) + pow(alpha, n0*n14 - n7*n78)*n43*n53*n7/(n42*n74) + n68)/n103 + n38*n50*xF[2]*(pow(alpha, NP0*n0 - n5*n78)*n5*n53*n66/n73 - pow(alpha, n0*n14 - n5*n78)*n18*n20*n43/(n42*n74) + pow(alpha, n0*n14 - n5*n78)*n43*n5*n53/(n42*n74) + n67)/n101 + n38*n64*(pow(alpha, NP0*n0 - n4*n78)*n4*n53*n66/n73 - pow(alpha, n0*n14 - n4*n78)*n18*n19*n43/(n42*n74) + pow(alpha, n0*n14 - n4*n78)*n4*n43*n53/(n42*n74) + n18*n19*n31)/n100) - 0.5*n38*n39*xF[0]*(pow(alpha, NP0*n0 - n0*n78)*n61*n66/n73 + n69)/n99) - n164*n38*n39 - n192, -n11);
      NP_sqrt_base = fabs(NP_sqrt_base);
      NP1 = (-NP_b - sqrt(NP_sqrt_base))/NP_2a;
      NT1 = n52*(n75 - log(-pow(alpha, NP1*n0)*n66 + 1));
      g0 = MW[1] - Mstar;
      g1 = MW[0] - Mstar;
      g2 = NT1 + 1;
      g3 = xPj - xTj;
      g4 = MW[2] - Mstar;
      g5 = MW[3] - Mstar;
      g6 = MW[4] - Mstar;
      g7 = MW[5] - Mstar;
      g8 = MW[6] - Mstar;
      g9 = xF[0] - xTj;
      g10 = xF[0] - xPj;
      g11 = -xTj;
      g12 = xPj/xF[1];
      g13 = pow(alpha, -g1);
      g14 = pow(alpha, -g0);
      g15 = pow(alpha, -g4);
      g16 = pow(alpha, -g5);
      g17 = pow(alpha, -g6);
      g18 = pow(alpha, -g7);
      g19 = pow(alpha, -g8);
      g20 = log(xF[0]/xF[1]);
      g21 = -g2;
      g22 = pow(alpha, NP1*g0);
      g23 = pow(alpha, NP1*g1);
      g24 = log(g13);
      g25 = pow(alpha, NP1*g4);
      g26 = pow(alpha, NP1*g5);
      g27 = pow(alpha, NP1*g6);
      g28 = pow(alpha, NP1*g7);
      g29 = pow(alpha, NP1*g8);
      g30 = -g20;
      g31 = g9/g3;
      g32 = g3/g9;
      g33 = -g22 + 1;
      g34 = -g22 + 1;
      g35 = -g23 + 1;
      g36 = -g25 + 1;
      g37 = -g26 + 1;
      g38 = -g27 + 1;
      g39 = -g28 + 1;
      g40 = -g29 + 1;
      g41 = -g23;
      g42 = -g25;
      g43 = -g26;
      g44 = -g27;
      g45 = -g28;
      g46 = -g29;
      g47 = -1.0*g20;
      g48 = -g3/g10;
      g49 = g10/(g3*xF[1]);
      g50 = pow(alpha, g0*g21) - 1;
      g51 = pow(alpha, g0*g21) - 1;
      g52 = pow(alpha, g1*g21) - 1;
      g53 = pow(alpha, g21*g4) - 1;
      g54 = pow(alpha, g21*g5) - 1;
      g55 = pow(alpha, g21*g6) - 1;
      g56 = pow(alpha, g21*g7) - 1;
      g57 = pow(alpha, g21*g8) - 1;
      g58 = -pow(alpha, g1*g21);
      g59 = -pow(alpha, g21*g4);
      g60 = -pow(alpha, g21*g5);
      g61 = -pow(alpha, g21*g6);
      g62 = -pow(alpha, g21*g7);
      g63 = -pow(alpha, g21*g8);
      g64 = g34 + g51;
      g65 = -g23 - g58;
      g66 = -g25 - g59;
      g67 = -g26 - g60;
      g68 = -g27 - g61;
      g69 = -g28 - g62;
      g70 = -g29 - g63;
      g71 = pow(alpha, g1*g21) + g41;
      g72 = g34 + g51;
      g73 = pow(alpha, g21*g4) + g42;
      g74 = pow(alpha, g21*g5) + g43;
      g75 = pow(alpha, g21*g6) + g44;
      g76 = pow(alpha, g21*g7) + g45;
      g77 = pow(alpha, g21*g8) + g46;
      g78 = xF[0]/g71;
      g79 = xF[1]/g72;
      g80 = xF[2]/g73;
      g81 = xF[3]/g74;
      g82 = xF[6]/g77;
      g83 = xF[4]/g75;
      g84 = xF[5]/g76;
      g85 = xF[1]/g64;
      g86 = xF[0]/g65;
      g87 = xF[4]/g68;
      g88 = xF[5]/g69;
      g89 = xF[2]/g66;
      g90 = xF[6]/g70;
      g91 = xF[3]/g67;
      g92 = g40/g70;
      g93 = g38/g68;
      g94 = g35/g65;
      g95 = g39/g69;
      g96 = g37/g67;
      g97 = g33/g64;
      g98 = g36/g66;
      g99 = g50/g64;
      g100 = g52/g65;
      g101 = g56/g69;
      g102 = g53/g66;
      g103 = g54/g67;
      g104 = g55/g68;
      g105 = g57/g70;
      g106 = log(g11*g49*g72/g34);
      g107 = log(g11*g49*g64/g33);
      g108 = log(g12*g31*g72/g51);
      g109 = 1.0*g106;
      g110 = log(g12*g31*g64/g50);
      g111 = 1.0*g108;
      g112 = -g109*g34*g79 - g109*g78*(g41 + 1) - g109*g80*(g42 + 1) - g109*g81*(g43 + 1) - g109*g82*(g46 + 1) - g109*g83*(g44 + 1) - g109*g84*(g45 + 1) - g111*g51*g79 - g111*g78*(pow(alpha, g1*g21) - 1) - g111*g80*(pow(alpha, g21*g4) - 1) - g111*g81*(pow(alpha, g21*g5) - 1) - g111*g82*(pow(alpha, g21*g8) - 1) - g111*g83*(pow(alpha, g21*g6) - 1) - g111*g84*(pow(alpha, g21*g7) - 1) - g47*xF[0] - g47*xF[1] - g47*xF[2] - g47*xF[3] - g47*xF[4] - g47*xF[5] - g47*xF[6];
      LpF = xF[0]*(g13 + 1.0)*(g100*g110 + g107*g94 + g30)/(g24*(g13 - 1.0)) + xF[1]*(g14 + 1.0)*(g107*g97 + g110*g99 + g30)/(g24*(g14 - 1.0)) + xF[2]*(g15 + 1.0)*(g102*g110 + g107*g98 + g30)/(g24*(g15 - 1.0)) + xF[3]*(g16 + 1.0)*(g103*g110 + g107*g96 + g30)/(g24*(g16 - 1.0)) + xF[4]*(g17 + 1.0)*(g104*g110 + g107*g93 + g30)/(g24*(g17 - 1.0)) + xF[5]*(g18 + 1.0)*(g101*g110 + g107*g95 + g30)/(g24*(g18 - 1.0)) + xF[6]*(g19 + 1.0)*(g105*g110 + g107*g92 + g30)/(g24*(g19 - 1.0));
      PpF = g31;
      TpF = -g10/g3;
      SWUpF = g112;
      SWUpP = g112*g32;
      xP[0] = g32*g52*g86;
      xP[1] = g32*g50*g85;
      xP[2] = g32*g53*g89;
      xP[3] = g32*g54*g91;
      xP[4] = g32*g55*g87;
      xP[5] = g32*g56*g88;
      xP[6] = g32*g57*g90;
      xT[0] = g35*g48*g86;
      xT[1] = g33*g48*g85;
      xT[2] = g36*g48*g89;
      xT[3] = g37*g48*g91;
      xT[4] = g38*g48*g87;
      xT[5] = g39*g48*g88;
      xT[6] = g40*g48*g90;
      break;
    case 8:
      n0 = -0.500000000000000;
      n1 = -2.00000000000000;
      n2 = MW[0] - Mstar;
      n3 = log(alpha);
      n4 = xPj - xTj;
      n5 = xF[0] - xPj;
      n6 = MW[1] - Mstar;
      n7 = MW[2] - Mstar;
      n8 = MW[3] - Mstar;
      n9 = MW[4] - Mstar;
      n10 = MW[5] - Mstar;
      n11 = MW[6] - Mstar;
      n12 = MW[7] - Mstar;
      n13 = log(xTj);
      n14 = -2;
      n15 = xF[0]*xPj;
      n16 = -Mstar;
      n17 = -xPj;
      n18 = -NP0*n1;
      n19 = -xTj;
      n20 = pow(n2, -n1);
      n21 = pow(n3, -n1);
      n22 = pow(n6, -n1);
      n23 = pow(n7, -n1);
      n24 = pow(n8, -n1);
      n25 = pow(n9, -n1);
      n26 = pow(n10, -n1);
      n27 = pow(n11, -n1);
      n28 = pow(n12, -n1);
      n29 = Mstar*n3;
      n30 = -n1*n3;
      n31 = pow(alpha, NP0*n2);
      n32 = n15 + n19*xF[0];
      n33 = n15 + n17*xTj;
      n34 = pow(alpha, NP0*n6);
      n35 = pow(alpha, NP0*n7);
      n36 = pow(alpha, NP0*n8);
      n37 = pow(alpha, NP0*n9);
      n38 = pow(alpha, NP0*n10);
      n39 = pow(alpha, NP0*n11);
      n40 = pow(alpha, NP0*n12);
      n41 = -MW[0]*n3;
      n42 = n4/n5;
      n43 = -n31 + 1;
      n44 = -n34 + 1;
      n45 = pow(alpha, n18*n2);
      n46 = pow(n33, -n1);
      n47 = -n35 + 1;
      n48 = -n36 + 1;
      n49 = -n37 + 1;
      n50 = -n38 + 1;
      n51 = -n39 + 1;
      n52 = -n40 + 1;
      n53 = -n31;
      n54 = -n34;
      n55 = -n35;
      n56 = -n36;
      n57 = -n37;
      n58 = -n38;
      n59 = -n39;
      n60 = -n40;
      n61 = n2*n21;
      n62 = 1/(n2*n3);
      n63 = n47*xF[2];
      n64 = n35*n7;
      n65 = n10*n38;
      n66 = n44*xF[1];
      n67 = n49*xF[4];
      n68 = n51*xF[6];
      n69 = n11*n39;
      n70 = n36*n8;
      n71 = n34*n6;
      n72 = n37*n9;
      n73 = n12*n40;
      n74 = n20*n21;
      n75 = log((-1.0 + xPj/xF[0])/n4);
      n76 = -n50*xF[5];
      n77 = n2*n3*n31;
      n78 = n3*n73;
      n79 = n33/n32;
      n80 = n21*n23*n35;
      n81 = n21*n25*n37;
      n82 = n21*n26*n38;
      n83 = n31*n74;
      n84 = n21*n28*n40;
      n85 = n21*n24*n36;
      n86 = n21*n27*n39;
      n87 = n21*n22*n34;
      n88 = n53*n79 + 1;
      n89 = n13 + n29 + n41 + n75;
      n90 = n31*n79/n88;
      n91 = n21*pow(n32, n14)*n45*n46*pow(n88, n14);
      n92 = n62*(n89 - log(n88)) + 1;
      n93 = pow(alpha, n2*n92);
      n94 = pow(alpha, n6*n92);
      n95 = pow(alpha, n7*n92);
      n96 = pow(alpha, n8*n92);
      n97 = pow(alpha, n9*n92);
      n98 = pow(alpha, n10*n92);
      n99 = pow(alpha, n11*n92);
      n100 = pow(alpha, n12*n92);
      n101 = n6/n94;
      n102 = n9/n97;
      n103 = n8/n96;
      n104 = n12/n100;
      n105 = n11/n99;
      n106 = n10/n98;
      n107 = n2/n93;
      n108 = n7/n95;
      n109 = n43 - 1 + 1.0/n93;
      n110 = n44 - 1 + 1.0/n94;
      n111 = n47 - 1 + 1.0/n95;
      n112 = n48 - 1 + 1.0/n96;
      n113 = n49 - 1 + 1.0/n97;
      n114 = n50 - 1 + 1.0/n98;
      n115 = n51 - 1 + 1.0/n99;
      n116 = n52 - 1 + 1.0/n100;
      n117 = pow(n109, 3);
      n118 = pow(n110, 3);
      n119 = pow(n111, 3);
      n120 = pow(n112, 3);
      n121 = pow(n113, 3);
      n122 = pow(n114, 3);
      n123 = pow(n115, 3);
      n124 = pow(n116, 3);
      n125 = xF[6]/n115;
      n126 = xF[7]/n116;
      n127 = xF[1]/n110;
      n128 = xF[2]/n111;
      n129 = xF[0]/n109;
      n130 = xF[5]/n114;
      n131 = xF[4]/n113;
      n132 = xF[3]/n112;
      n133 = pow(n109, n14)*xF[0];
      n134 = n130*n3;
      n135 = -pow(n110, n14);
      n136 = n132*n3;
      n137 = n43*xF[0]/n117;
      n138 = n52*xF[7]/n124;
      n139 = pow(n116, n14)*n52*xF[7];
      n140 = -pow(n112, n14)*n48*xF[3];
      n141 = n129*n83;
      n142 = n129*n2*n3*n42*n53;
      n143 = n141*n42;
      n144 = n127*n42*n87;
      n145 = n128*n42*n80;
      n146 = n132*n42*n85;
      n147 = n131*n42*n81;
      n148 = n130*n42*n82;
      n149 = n125*n42*n86;
      n150 = n126*n42*n84;
      n151 = n0*n129*n42*n53*n74;
      n152 = n79/(n88*n93) + 1;
      n153 = n152*n43;
      n154 = n77*n79/(n88*n93) + n77;
      n155 = n101*n3*n90 + n3*n71;
      n156 = n108*n3*n90 + n3*n64;
      n157 = n103*n3*n90 + n3*n70;
      n158 = n102*n3*n90 + n3*n72;
      n159 = n106*n3*n90 + n3*n65;
      n160 = n105*n3*n90 + n3*n69;
      n161 = n104*n3*n90 + n78;
      n162 = pow(n154, -n1);
      n163 = pow(n155, -n1);
      n164 = pow(n156, -n1);
      n165 = pow(n157, -n1);
      n166 = pow(n158, -n1);
      n167 = pow(n159, -n1);
      n168 = pow(n160, -n1);
      n169 = pow(n161, -n1);
      n170 = n157*xF[3];
      n171 = n107*n30*n90 + n2*n30*n31;
      n172 = n79*n83/(n88*n93) + n83;
      n173 = -n158*n67;
      n174 = n172*n43;
      n175 = pow(n114, n14)*n159;
      n176 = pow(n111, n14)*n156;
      n177 = pow(n115, n14)*n160;
      n178 = n166/n121;
      n179 = n168/n123;
      n180 = pow(n113, n14)*n158*xF[4];
      n181 = n164/n119;
      n182 = pow(n110, n14)*n155*xF[1];
      n183 = n163/n118;
      n184 = pow(n116, n14)*n161*xF[7];
      n185 = n165*n48*xF[3]/n120;
      n186 = n133*n154*n42*n43;
      n187 = n133*n2*n30*n31*n42*(pow(alpha, NP0*n2 - n2*n92)*n2*n3*n79/n88 + n77);
      n188 = pow(n110, n14)*n30*n42*n71*xF[1]*(pow(alpha, NP0*n2 - n6*n92)*n3*n6*n79/n88 + n3*n71);
      n189 = pow(n111, n14)*n30*n42*n64*xF[2]*(pow(alpha, NP0*n2 - n7*n92)*n3*n7*n79/n88 + n3*n64);
      n190 = pow(n112, n14)*n30*n42*n70*xF[3]*(pow(alpha, NP0*n2 - n8*n92)*n3*n79*n8/n88 + n3*n70);
      n191 = pow(n113, n14)*n30*n42*n72*xF[4]*(pow(alpha, NP0*n2 - n9*n92)*n3*n79*n9/n88 + n3*n72);
      n192 = pow(n114, n14)*n30*n42*n65*xF[5]*(pow(alpha, NP0*n2 - n10*n92)*n10*n3*n79/n88 + n3*n65);
      n193 = pow(n115, n14)*n30*n42*n69*xF[6]*(pow(alpha, NP0*n2 - n11*n92)*n11*n3*n79/n88 + n3*n69);
      n194 = pow(n116, n14)*n30*n42*n73*xF[7]*(pow(alpha, NP0*n2 - n12*n92)*n12*n3*n79/n88 + n78);
      n195 = 1.0*n133*n154*n42*n77;
      n196 = -n133*n174*n42;
      n197 = n0*n133*n174*n42;
      n198 = n154*n171;
      n199 = n108*pow(n32, n14)*n45*n46*n61*pow(n88, n14) + n108*n61*n90 - n23*n91/n95 + n80;
      n200 = n102*pow(n32, n14)*n45*n46*n61*pow(n88, n14) + n102*n61*n90 - n25*n91/n97 + n81;
      n201 = n106*pow(n32, n14)*n45*n46*n61*pow(n88, n14) + n106*n61*n90 - n26*n91/n98 + n82;
      n202 = n105*pow(n32, n14)*n45*n46*n61*pow(n88, n14) + n105*n61*n90 - n27*n91/n99 + n86;
      n203 = n135*n42*n66*(-pow(alpha, n18*n2 - n6*n92)*n21*n22*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n6*n92)*pow(n32, n14)*n46*n6*n61*pow(n88, n14) + n101*n61*n90 + n87);
      n204 = -pow(n111, n14)*n42*n63*(-pow(alpha, n18*n2 - n7*n92)*n21*n23*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n7*n92)*pow(n32, n14)*n46*n61*n7*pow(n88, n14) + n108*n61*n90 + n80);
      n205 = n140*n42*(-pow(alpha, n18*n2 - n8*n92)*n21*n24*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n8*n92)*pow(n32, n14)*n46*n61*n8*pow(n88, n14) + n103*n61*n90 + n85);
      n206 = -pow(n113, n14)*n42*n67*(-pow(alpha, n18*n2 - n9*n92)*n21*n25*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n9*n92)*pow(n32, n14)*n46*n61*pow(n88, n14)*n9 + n102*n61*n90 + n81);
      n207 = pow(n114, n14)*n42*n76*(pow(alpha, -n10*n92 + n18*n2)*n10*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n10*n92 + n18*n2)*n21*n26*pow(n32, n14)*n46*pow(n88, n14) + n106*n61*n90 + n82);
      n208 = -pow(n115, n14)*n42*n68*(pow(alpha, -n11*n92 + n18*n2)*n11*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n11*n92 + n18*n2)*n21*n27*pow(n32, n14)*n46*pow(n88, n14) + n105*n61*n90 + n86);
      n209 = -n139*n42*(pow(alpha, -n12*n92 + n18*n2)*n12*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n12*n92 + n18*n2)*n21*n28*pow(n32, n14)*n46*pow(n88, n14) + n104*n61*n90 + n84);
      n210 = n151 + n195 + n197;
      n211 = xTj*(pow(n113, n14)*n173*n42 + n125*n3*n42*n69 + n126*n42*n78 + n127*n3*n42*n71 + n128*n3*n42*n64 + n129*n42*n77 + n131*n3*n42*n72 + n134*n42*n65 + n135*n155*n42*n66 + n136*n42*n70 - n139*n161*n42 + n140*n157*n42 + n175*n42*n76 - n176*n42*n63 - n177*n42*n68 - n186);
      n212 = n142 + n186 + n211;
      n213 = n143 + n144 + n145 + n146 + n147 + n148 + n149 + n150 + n187 + n188 + n189 + n190 + n191 + n192 + n193 + n194 + n196 + n203 + n204 + n205 + n206 + n207 + n208 + n209;
      NP_b = -n133*n153*n42*n77 - n142 - n18*(n0*n133*n42*n43*(pow(alpha, NP0*n2 - n2*n92)*n74*n79/n88 + n83) + n0*xTj*(-pow(n111, n14)*n42*n63*(pow(alpha, NP0*n2 - n7*n92)*n61*n7*n79/n88 - pow(alpha, n18*n2 - n7*n92)*n21*n23*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n7*n92)*pow(n32, n14)*n46*n61*n7*pow(n88, n14) + n80) - pow(n113, n14)*n42*n67*(pow(alpha, NP0*n2 - n9*n92)*n61*n79*n9/n88 - pow(alpha, n18*n2 - n9*n92)*n21*n25*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n9*n92)*pow(n32, n14)*n46*n61*pow(n88, n14)*n9 + n81) + pow(n114, n14)*n42*n76*(pow(alpha, NP0*n2 - n10*n92)*n10*n61*n79/n88 + pow(alpha, -n10*n92 + n18*n2)*n10*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n10*n92 + n18*n2)*n21*n26*pow(n32, n14)*n46*pow(n88, n14) + n82) - pow(n115, n14)*n42*n68*(pow(alpha, NP0*n2 - n11*n92)*n11*n61*n79/n88 + pow(alpha, -n11*n92 + n18*n2)*n11*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n11*n92 + n18*n2)*n21*n27*pow(n32, n14)*n46*pow(n88, n14) + n86) - n133*n42*n43*(pow(alpha, NP0*n2 - n2*n92)*n74*n79/n88 + n83) + n135*n42*n66*(pow(alpha, NP0*n2 - n6*n92)*n6*n61*n79/n88 - pow(alpha, n18*n2 - n6*n92)*n21*n22*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n6*n92)*pow(n32, n14)*n46*n6*n61*pow(n88, n14) + n87) + n137*n14*n162*n42 + n138*n14*n169*n42 - n139*n42*(pow(alpha, NP0*n2 - n12*n92)*n12*n61*n79/n88 + pow(alpha, -n12*n92 + n18*n2)*n12*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n12*n92 + n18*n2)*n21*n28*pow(n32, n14)*n46*pow(n88, n14) + n84) + n14*n178*n42*n67 + n14*n179*n42*n68 + n14*n181*n42*n63 + n14*n183*n42*n66 + n14*n185*n42 + n140*n42*(pow(alpha, NP0*n2 - n8*n92)*n61*n79*n8/n88 - pow(alpha, n18*n2 - n8*n92)*n21*n24*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n8*n92)*pow(n32, n14)*n46*n61*n8*pow(n88, n14) + n85) + n143 + n144 + n145 + n146 + n147 + n148 + n149 + n150 + n187 + n188 + n189 + n190 + n191 + n192 + n193 + n194 + n14*n167*n42*n50*xF[5]/n122) + 1.0*n133*n42*n77*(pow(alpha, NP0*n2 - n2*n92)*n2*n3*n79/n88 + n77) - 1.0*n137*n162*n42 + n151) - n42*xTj*(pow(n113, n14)*n173 + n125*n3*n69 + n126*n78 + n127*n3*n71 + n128*n3*n64 + n129*n77 + n131*n3*n72 - n133*n154*n43 + n134*n65 + n135*n155*n66 + n136*n70 - n139*n161 + n140*n157 + n175*n76 - n176*n63 - n177*n68);
      NP_2a = -n42*(n1*n133*n152*n45*n74 - n1*n137*pow(n152, -n1)*n45*n74 + n133*n153*n83 - 1.0*n141 + 1.0*xTj*(pow(n110, n14)*n30*n71*xF[1]*(pow(alpha, NP0*n2 - n6*n92)*n3*n6*n79/n88 + n3*n71) + pow(n111, n14)*n30*n64*xF[2]*(pow(alpha, NP0*n2 - n7*n92)*n3*n7*n79/n88 + n3*n64) - pow(n111, n14)*n63*(-pow(alpha, n18*n2 - n7*n92)*n21*n23*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n7*n92)*pow(n32, n14)*n46*n61*n7*pow(n88, n14) + n108*n61*n90 + n80) + pow(n112, n14)*n30*n70*xF[3]*(pow(alpha, NP0*n2 - n8*n92)*n3*n79*n8/n88 + n3*n70) + pow(n113, n14)*n30*n72*xF[4]*(pow(alpha, NP0*n2 - n9*n92)*n3*n79*n9/n88 + n3*n72) - pow(n113, n14)*n67*(-pow(alpha, n18*n2 - n9*n92)*n21*n25*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n9*n92)*pow(n32, n14)*n46*n61*pow(n88, n14)*n9 + n102*n61*n90 + n81) + pow(n114, n14)*n30*n65*xF[5]*(pow(alpha, NP0*n2 - n10*n92)*n10*n3*n79/n88 + n3*n65) + pow(n114, n14)*n76*(pow(alpha, -n10*n92 + n18*n2)*n10*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n10*n92 + n18*n2)*n21*n26*pow(n32, n14)*n46*pow(n88, n14) + n106*n61*n90 + n82) + pow(n115, n14)*n30*n69*xF[6]*(pow(alpha, NP0*n2 - n11*n92)*n11*n3*n79/n88 + n3*n69) - pow(n115, n14)*n68*(pow(alpha, -n11*n92 + n18*n2)*n11*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n11*n92 + n18*n2)*n21*n27*pow(n32, n14)*n46*pow(n88, n14) + n105*n61*n90 + n86) + pow(n116, n14)*n30*n73*xF[7]*(pow(alpha, NP0*n2 - n12*n92)*n12*n3*n79/n88 + n78) + n125*n86 + n126*n84 + n127*n87 + n128*n80 + n130*n82 + n131*n81 + n132*n85 - n133*n174 + n133*n2*n30*n31*(pow(alpha, NP0*n2 - n2*n92)*n2*n3*n79/n88 + n77) + n135*n66*(-pow(alpha, n18*n2 - n6*n92)*n21*n22*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n6*n92)*pow(n32, n14)*n46*n6*n61*pow(n88, n14) + n101*n61*n90 + n87) + n137*n14*n162 + n138*n14*n169 - n139*(pow(alpha, -n12*n92 + n18*n2)*n12*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n12*n92 + n18*n2)*n21*n28*pow(n32, n14)*n46*pow(n88, n14) + n104*n61*n90 + n84) + n14*n178*n67 + n14*n179*n68 + n14*n181*n63 + n14*n183*n66 + n14*n185 + n140*(-pow(alpha, n18*n2 - n8*n92)*n21*n24*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n8*n92)*pow(n32, n14)*n46*n61*n8*pow(n88, n14) + n103*n61*n90 + n85) + n141 + n14*n167*n50*xF[5]/n122));
      NP_sqrt_base = (-NP0*n212 - n19*(-n42*n43*xF[0]/(n43 - 1 + pow(alpha, -n2*(n62*(n89 - log(n33*n53/(n15 - xF[0]*xTj) + 1)) + 1))) - n42*n48*xF[3]/(n48 - 1 + pow(alpha, -n8*(n62*(n89 - log(n33*n53/(n15 - xF[0]*xTj) + 1)) + 1))) - n42*n50*xF[5]/(n50 - 1 + pow(alpha, -n10*(n62*(n89 - log(n33*n53/(n15 - xF[0]*xTj) + 1)) + 1))) - n42*n52*xF[7]/(n52 - 1 + pow(alpha, -n12*(n62*(n89 - log(n33*n53/(n15 - xF[0]*xTj) + 1)) + 1))) - n42*n63/(n47 - 1 + pow(alpha, -n7*(n62*(n89 - log(n33*n53/(n15 - xF[0]*xTj) + 1)) + 1))) - n42*n66/(n44 - 1 + pow(alpha, -n6*(n62*(n89 - log(n33*n53/(n15 - xF[0]*xTj) + 1)) + 1))) - n42*n67/(n49 - 1 + pow(alpha, -n9*(n62*(n89 - log(n33*n53/(n15 - xF[0]*xTj) + 1)) + 1))) - n42*n68/(n51 - 1 + pow(alpha, -n11*(n62*(n89 - log(n33*n53/(n15 - xF[0]*xTj) + 1)) + 1)))) + n42*n43*xF[0]/n109 - pow(NP0, -n1)*(n0*n137*n198*n42 - n0*n143 - n0*n19*(-pow(n111, n14)*n42*n63*(pow(alpha, NP0*n2 - n7*n92)*n61*n7*n79/n88 - pow(alpha, n18*n2 - n7*n92)*n21*n23*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n7*n92)*pow(n32, n14)*n46*n61*n7*pow(n88, n14) + n80) - pow(n113, n14)*n42*n67*(pow(alpha, NP0*n2 - n9*n92)*n61*n79*n9/n88 - pow(alpha, n18*n2 - n9*n92)*n21*n25*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n9*n92)*pow(n32, n14)*n46*n61*pow(n88, n14)*n9 + n81) + pow(n114, n14)*n42*n76*(pow(alpha, NP0*n2 - n10*n92)*n10*n61*n79/n88 + pow(alpha, -n10*n92 + n18*n2)*n10*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n10*n92 + n18*n2)*n21*n26*pow(n32, n14)*n46*pow(n88, n14) + n82) - pow(n115, n14)*n42*n68*(pow(alpha, NP0*n2 - n11*n92)*n11*n61*n79/n88 + pow(alpha, -n11*n92 + n18*n2)*n11*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n11*n92 + n18*n2)*n21*n27*pow(n32, n14)*n46*pow(n88, n14) + n86) - n133*n42*n43*(pow(alpha, NP0*n2 - n2*n92)*n74*n79/n88 + n83) + n135*n42*n66*(pow(alpha, NP0*n2 - n6*n92)*n6*n61*n79/n88 - pow(alpha, n18*n2 - n6*n92)*n21*n22*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n6*n92)*pow(n32, n14)*n46*n6*n61*pow(n88, n14) + n87) - n137*n42*(pow(alpha, NP0*n2 - n2*n92)*n2*n3*n79/n88 + n77)*(pow(alpha, NP0*n2 - n2*n92)*n2*n30*n79/n88 + n2*n30*n31) - n138*n42*(pow(alpha, NP0*n2 - n12*n92)*n12*n3*n79/n88 + n78)*(pow(alpha, NP0*n2 - n12*n92)*n12*n30*n79/n88 + n30*n73) - n139*n42*(pow(alpha, NP0*n2 - n12*n92)*n12*n61*n79/n88 + pow(alpha, -n12*n92 + n18*n2)*n12*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n12*n92 + n18*n2)*n21*n28*pow(n32, n14)*n46*pow(n88, n14) + n84) + n140*n42*(pow(alpha, NP0*n2 - n8*n92)*n61*n79*n8/n88 - pow(alpha, n18*n2 - n8*n92)*n21*n24*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n8*n92)*pow(n32, n14)*n46*n61*n8*pow(n88, n14) + n85) + n143 + n144 + n145 + n146 + n147 + n148 + n149 + n150 + n187 + n188 + n189 + n190 + n191 + n192 + n193 + n194 - n42*n68*(pow(alpha, NP0*n2 - n11*n92)*n11*n3*n79/n88 + n3*n69)*(pow(alpha, NP0*n2 - n11*n92)*n11*n30*n79/n88 + n30*n69)/n123 + n42*n76*(pow(alpha, NP0*n2 - n10*n92)*n10*n3*n79/n88 + n3*n65)*(pow(alpha, NP0*n2 - n10*n92)*n10*n30*n79/n88 + n30*n65)/n122 - n42*n67*(pow(alpha, NP0*n2 - n9*n92)*n3*n79*n9/n88 + n3*n72)*(pow(alpha, NP0*n2 - n9*n92)*n30*n79*n9/n88 + n30*n72)/n121 - n42*n48*xF[3]*(pow(alpha, NP0*n2 - n8*n92)*n3*n79*n8/n88 + n3*n70)*(pow(alpha, NP0*n2 - n8*n92)*n30*n79*n8/n88 + n30*n70)/n120 - n42*n63*(pow(alpha, NP0*n2 - n7*n92)*n3*n7*n79/n88 + n3*n64)*(pow(alpha, NP0*n2 - n7*n92)*n30*n7*n79/n88 + n30*n64)/n119 - n42*n66*(pow(alpha, NP0*n2 - n6*n92)*n3*n6*n79/n88 + n3*n71)*(pow(alpha, NP0*n2 - n6*n92)*n30*n6*n79/n88 + n30*n71)/n118) - n0*n196 + 1.0*n133*n154*n42*n77))*(-n1*n143 - n1*n19*(-pow(n111, n14)*n42*n63*(pow(alpha, NP0*n2 - n7*n92)*n61*n7*n79/n88 - pow(alpha, n18*n2 - n7*n92)*n21*n23*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n7*n92)*pow(n32, n14)*n46*n61*n7*pow(n88, n14) + n80) - pow(n113, n14)*n42*n67*(pow(alpha, NP0*n2 - n9*n92)*n61*n79*n9/n88 - pow(alpha, n18*n2 - n9*n92)*n21*n25*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n9*n92)*pow(n32, n14)*n46*n61*pow(n88, n14)*n9 + n81) + pow(n114, n14)*n42*n76*(pow(alpha, NP0*n2 - n10*n92)*n10*n61*n79/n88 + pow(alpha, -n10*n92 + n18*n2)*n10*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n10*n92 + n18*n2)*n21*n26*pow(n32, n14)*n46*pow(n88, n14) + n82) - pow(n115, n14)*n42*n68*(pow(alpha, NP0*n2 - n11*n92)*n11*n61*n79/n88 + pow(alpha, -n11*n92 + n18*n2)*n11*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n11*n92 + n18*n2)*n21*n27*pow(n32, n14)*n46*pow(n88, n14) + n86) - n133*n42*n43*(pow(alpha, NP0*n2 - n2*n92)*n74*n79/n88 + n83) + n135*n42*n66*(pow(alpha, NP0*n2 - n6*n92)*n6*n61*n79/n88 - pow(alpha, n18*n2 - n6*n92)*n21*n22*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n6*n92)*pow(n32, n14)*n46*n6*n61*pow(n88, n14) + n87) - n137*n42*(pow(alpha, NP0*n2 - n2*n92)*n2*n3*n79/n88 + n77)*(pow(alpha, NP0*n2 - n2*n92)*n2*n30*n79/n88 + n2*n30*n31) - n138*n42*(pow(alpha, NP0*n2 - n12*n92)*n12*n3*n79/n88 + n78)*(pow(alpha, NP0*n2 - n12*n92)*n12*n30*n79/n88 + n30*n73) - n139*n42*(pow(alpha, NP0*n2 - n12*n92)*n12*n61*n79/n88 + pow(alpha, -n12*n92 + n18*n2)*n12*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n12*n92 + n18*n2)*n21*n28*pow(n32, n14)*n46*pow(n88, n14) + n84) + n140*n42*(pow(alpha, NP0*n2 - n8*n92)*n61*n79*n8/n88 - pow(alpha, n18*n2 - n8*n92)*n21*n24*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n8*n92)*pow(n32, n14)*n46*n61*n8*pow(n88, n14) + n85) + n143 + n144 + n145 + n146 + n147 + n148 + n149 + n150 + n187 + n188 + n189 + n190 + n191 + n192 + n193 + n194 - n42*n68*(pow(alpha, NP0*n2 - n11*n92)*n11*n3*n79/n88 + n3*n69)*(pow(alpha, NP0*n2 - n11*n92)*n11*n30*n79/n88 + n30*n69)/n123 + n42*n76*(pow(alpha, NP0*n2 - n10*n92)*n10*n3*n79/n88 + n3*n65)*(pow(alpha, NP0*n2 - n10*n92)*n10*n30*n79/n88 + n30*n65)/n122 - n42*n67*(pow(alpha, NP0*n2 - n9*n92)*n3*n79*n9/n88 + n3*n72)*(pow(alpha, NP0*n2 - n9*n92)*n30*n79*n9/n88 + n30*n72)/n121 - n42*n48*xF[3]*(pow(alpha, NP0*n2 - n8*n92)*n3*n79*n8/n88 + n3*n70)*(pow(alpha, NP0*n2 - n8*n92)*n30*n79*n8/n88 + n30*n70)/n120 - n42*n63*(pow(alpha, NP0*n2 - n7*n92)*n3*n7*n79/n88 + n3*n64)*(pow(alpha, NP0*n2 - n7*n92)*n30*n7*n79/n88 + n30*n64)/n119 - n42*n66*(pow(alpha, NP0*n2 - n6*n92)*n3*n6*n79/n88 + n3*n71)*(pow(alpha, NP0*n2 - n6*n92)*n30*n6*n79/n88 + n30*n71)/n118) - n1*n196 + 4.0*n133*n154*n42*n77 - 4.0*n137*n162*n42) + pow(-n18*(n0*n133*n42*n43*(pow(alpha, NP0*n2 - n2*n92)*n74*n79/n88 + n83) + n0*n137*n42*(pow(alpha, NP0*n2 - n2*n92)*n2*n3*n79/n88 + n77)*(pow(alpha, NP0*n2 - n2*n92)*n2*n30*n79/n88 + n2*n30*n31) + n0*xTj*(-pow(n111, n14)*n42*n63*(pow(alpha, NP0*n2 - n7*n92)*n61*n7*n79/n88 - pow(alpha, n18*n2 - n7*n92)*n21*n23*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n7*n92)*pow(n32, n14)*n46*n61*n7*pow(n88, n14) + n80) - pow(n113, n14)*n42*n67*(pow(alpha, NP0*n2 - n9*n92)*n61*n79*n9/n88 - pow(alpha, n18*n2 - n9*n92)*n21*n25*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n9*n92)*pow(n32, n14)*n46*n61*pow(n88, n14)*n9 + n81) + pow(n114, n14)*n42*n76*(pow(alpha, NP0*n2 - n10*n92)*n10*n61*n79/n88 + pow(alpha, -n10*n92 + n18*n2)*n10*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n10*n92 + n18*n2)*n21*n26*pow(n32, n14)*n46*pow(n88, n14) + n82) - pow(n115, n14)*n42*n68*(pow(alpha, NP0*n2 - n11*n92)*n11*n61*n79/n88 + pow(alpha, -n11*n92 + n18*n2)*n11*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n11*n92 + n18*n2)*n21*n27*pow(n32, n14)*n46*pow(n88, n14) + n86) - n133*n42*n43*(pow(alpha, NP0*n2 - n2*n92)*n74*n79/n88 + n83) + n135*n42*n66*(pow(alpha, NP0*n2 - n6*n92)*n6*n61*n79/n88 - pow(alpha, n18*n2 - n6*n92)*n21*n22*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n6*n92)*pow(n32, n14)*n46*n6*n61*pow(n88, n14) + n87) - n137*n42*(pow(alpha, NP0*n2 - n2*n92)*n2*n3*n79/n88 + n77)*(pow(alpha, NP0*n2 - n2*n92)*n2*n30*n79/n88 + n2*n30*n31) - n138*n42*(pow(alpha, NP0*n2 - n12*n92)*n12*n3*n79/n88 + n78)*(pow(alpha, NP0*n2 - n12*n92)*n12*n30*n79/n88 + n30*n73) - n139*n42*(pow(alpha, NP0*n2 - n12*n92)*n12*n61*n79/n88 + pow(alpha, -n12*n92 + n18*n2)*n12*pow(n32, n14)*n46*n61*pow(n88, n14) - pow(alpha, -n12*n92 + n18*n2)*n21*n28*pow(n32, n14)*n46*pow(n88, n14) + n84) + n140*n42*(pow(alpha, NP0*n2 - n8*n92)*n61*n79*n8/n88 - pow(alpha, n18*n2 - n8*n92)*n21*n24*pow(n32, n14)*n46*pow(n88, n14) + pow(alpha, n18*n2 - n8*n92)*pow(n32, n14)*n46*n61*n8*pow(n88, n14) + n85) + n143 + n144 + n145 + n146 + n147 + n148 + n149 + n150 + n187 + n188 + n189 + n190 + n191 + n192 + n193 + n194 - n42*n68*(pow(alpha, NP0*n2 - n11*n92)*n11*n3*n79/n88 + n3*n69)*(pow(alpha, NP0*n2 - n11*n92)*n11*n30*n79/n88 + n30*n69)/n123 + n42*n76*(pow(alpha, NP0*n2 - n10*n92)*n10*n3*n79/n88 + n3*n65)*(pow(alpha, NP0*n2 - n10*n92)*n10*n30*n79/n88 + n30*n65)/n122 - n42*n67*(pow(alpha, NP0*n2 - n9*n92)*n3*n79*n9/n88 + n3*n72)*(pow(alpha, NP0*n2 - n9*n92)*n30*n79*n9/n88 + n30*n72)/n121 - n42*n48*xF[3]*(pow(alpha, NP0*n2 - n8*n92)*n3*n79*n8/n88 + n3*n70)*(pow(alpha, NP0*n2 - n8*n92)*n30*n79*n8/n88 + n30*n70)/n120 - n42*n63*(pow(alpha, NP0*n2 - n7*n92)*n3*n7*n79/n88 + n3*n64)*(pow(alpha, NP0*n2 - n7*n92)*n30*n7*n79/n88 + n30*n64)/n119 - n42*n66*(pow(alpha, NP0*n2 - n6*n92)*n3*n6*n79/n88 + n3*n71)*(pow(alpha, NP0*n2 - n6*n92)*n30*n6*n79/n88 + n30*n71)/n118) + 1.0*n133*n42*n77*(pow(alpha, NP0*n2 - n2*n92)*n2*n3*n79/n88 + n77) + n151) - n212, -n1);
      NP_sqrt_base = fabs(NP_sqrt_base);
      NP1 = (-NP_b - pow(NP_sqrt_base, -n0))/NP_2a;
      NT1 = n62*(n89 - log(-pow(alpha, NP1*n2)*n79 + 1));
      g0 = MW[1] - Mstar;
      g1 = MW[0] - Mstar;
      g2 = NT1 + 1;
      g3 = xPj - xTj;
      g4 = MW[2] - Mstar;
      g5 = MW[3] - Mstar;
      g6 = MW[4] - Mstar;
      g7 = MW[5] - Mstar;
      g8 = MW[6] - Mstar;
      g9 = MW[7] - Mstar;
      g10 = xF[0] - xTj;
      g11 = xF[0] - xPj;
      g12 = -xTj;
      g13 = xPj/xF[1];
      g14 = pow(alpha, -g1);
      g15 = pow(alpha, -g0);
      g16 = pow(alpha, -g4);
      g17 = pow(alpha, -g5);
      g18 = pow(alpha, -g6);
      g19 = pow(alpha, -g7);
      g20 = pow(alpha, -g8);
      g21 = pow(alpha, -g9);
      g22 = log(xF[0]/xF[1]);
      g23 = -g2;
      g24 = pow(alpha, NP1*g0);
      g25 = pow(alpha, NP1*g1);
      g26 = log(g14);
      g27 = pow(alpha, NP1*g4);
      g28 = pow(alpha, NP1*g5);
      g29 = pow(alpha, NP1*g6);
      g30 = pow(alpha, NP1*g7);
      g31 = pow(alpha, NP1*g8);
      g32 = pow(alpha, NP1*g9);
      g33 = -g22;
      g34 = g10/g3;
      g35 = g3/g10;
      g36 = -g24 + 1;
      g37 = -g24 + 1;
      g38 = -g25 + 1;
      g39 = -g27 + 1;
      g40 = -g28 + 1;
      g41 = -g29 + 1;
      g42 = -g30 + 1;
      g43 = -g31 + 1;
      g44 = -g32 + 1;
      g45 = -g25;
      g46 = -g27;
      g47 = -g28;
      g48 = -g29;
      g49 = -g30;
      g50 = -g31;
      g51 = -g32;
      g52 = -1.0*g22;
      g53 = -g3/g11;
      g54 = g11/(g3*xF[1]);
      g55 = pow(alpha, g0*g23) - 1;
      g56 = pow(alpha, g0*g23) - 1;
      g57 = pow(alpha, g1*g23) - 1;
      g58 = pow(alpha, g23*g4) - 1;
      g59 = pow(alpha, g23*g5) - 1;
      g60 = pow(alpha, g23*g6) - 1;
      g61 = pow(alpha, g23*g7) - 1;
      g62 = pow(alpha, g23*g8) - 1;
      g63 = pow(alpha, g23*g9) - 1;
      g64 = -pow(alpha, g1*g23);
      g65 = -pow(alpha, g23*g4);
      g66 = -pow(alpha, g23*g5);
      g67 = -pow(alpha, g23*g6);
      g68 = -pow(alpha, g23*g7);
      g69 = -pow(alpha, g23*g8);
      g70 = -pow(alpha, g23*g9);
      g71 = g37 + g56;
      g72 = -g25 - g64;
      g73 = -g27 - g65;
      g74 = -g28 - g66;
      g75 = -g29 - g67;
      g76 = -g30 - g68;
      g77 = -g31 - g69;
      g78 = -g32 - g70;
      g79 = pow(alpha, g1*g23) + g45;
      g80 = g37 + g56;
      g81 = pow(alpha, g23*g4) + g46;
      g82 = pow(alpha, g23*g5) + g47;
      g83 = pow(alpha, g23*g6) + g48;
      g84 = pow(alpha, g23*g7) + g49;
      g85 = pow(alpha, g23*g8) + g50;
      g86 = pow(alpha, g23*g9) + g51;
      g87 = xF[0]/g79;
      g88 = xF[1]/g80;
      g89 = xF[2]/g81;
      g90 = xF[3]/g82;
      g91 = xF[6]/g85;
      g92 = xF[7]/g86;
      g93 = xF[4]/g83;
      g94 = xF[5]/g84;
      g95 = xF[1]/g71;
      g96 = xF[0]/g72;
      g97 = xF[4]/g75;
      g98 = xF[5]/g76;
      g99 = xF[7]/g78;
      g100 = xF[2]/g73;
      g101 = xF[6]/g77;
      g102 = xF[3]/g74;
      g103 = g43/g77;
      g104 = g41/g75;
      g105 = g44/g78;
      g106 = g38/g72;
      g107 = g42/g76;
      g108 = g40/g74;
      g109 = g36/g71;
      g110 = g39/g73;
      g111 = g55/g71;
      g112 = g57/g72;
      g113 = g61/g76;
      g114 = g58/g73;
      g115 = g59/g74;
      g116 = g60/g75;
      g117 = g62/g77;
      g118 = g63/g78;
      g119 = log(g12*g54*g80/g37);
      g120 = log(g12*g54*g71/g36);
      g121 = log(g13*g34*g80/g56);
      g122 = 1.0*g119;
      g123 = log(g13*g34*g71/g55);
      g124 = 1.0*g121;
      g125 = -g122*g37*g88 - g122*g87*(g45 + 1) - g122*g89*(g46 + 1) - g122*g90*(g47 + 1) - g122*g91*(g50 + 1) - g122*g92*(g51 + 1) - g122*g93*(g48 + 1) - g122*g94*(g49 + 1) - g124*g56*g88 - g124*g87*(pow(alpha, g1*g23) - 1) - g124*g89*(pow(alpha, g23*g4) - 1) - g124*g90*(pow(alpha, g23*g5) - 1) - g124*g91*(pow(alpha, g23*g8) - 1) - g124*g92*(pow(alpha, g23*g9) - 1) - g124*g93*(pow(alpha, g23*g6) - 1) - g124*g94*(pow(alpha, g23*g7) - 1) - g52*xF[0] - g52*xF[1] - g52*xF[2] - g52*xF[3] - g52*xF[4] - g52*xF[5] - g52*xF[6] - g52*xF[7];
      LpF = xF[0]*(g14 + 1.0)*(g106*g120 + g112*g123 + g33)/(g26*(g14 - 1.0)) + xF[1]*(g15 + 1.0)*(g109*g120 + g111*g123 + g33)/(g26*(g15 - 1.0)) + xF[2]*(g16 + 1.0)*(g110*g120 + g114*g123 + g33)/(g26*(g16 - 1.0)) + xF[3]*(g17 + 1.0)*(g108*g120 + g115*g123 + g33)/(g26*(g17 - 1.0)) + xF[4]*(g18 + 1.0)*(g104*g120 + g116*g123 + g33)/(g26*(g18 - 1.0)) + xF[5]*(g19 + 1.0)*(g107*g120 + g113*g123 + g33)/(g26*(g19 - 1.0)) + xF[6]*(g20 + 1.0)*(g103*g120 + g117*g123 + g33)/(g26*(g20 - 1.0)) + xF[7]*(g21 + 1.0)*(g105*g120 + g118*g123 + g33)/(g26*(g21 - 1.0));
      PpF = g34;
      TpF = -g11/g3;
      SWUpF = g125;
      SWUpP = g125*g35;
      xP[0] = g35*g57*g96;
      xP[1] = g35*g55*g95;
      xP[2] = g100*g35*g58;
      xP[3] = g102*g35*g59;
      xP[4] = g35*g60*g97;
      xP[5] = g35*g61*g98;
      xP[6] = g101*g35*g62;
      xP[7] = g35*g63*g99;
      xT[0] = g38*g53*g96;
      xT[1] = g36*g53*g95;
      xT[2] = g100*g39*g53;
      xT[3] = g102*g40*g53;
      xT[4] = g41*g53*g97;
      xT[5] = g42*g53*g98;
      xT[6] = g101*g43*g53;
      xT[7] = g44*g53*g99;
      break;
    case 9:
      n0 = MW[0] - Mstar;
      n1 = log(alpha);
      n2 = xPj - xTj;
      n3 = xF[0] - xPj;
      n4 = MW[1] - Mstar;
      n5 = MW[2] - Mstar;
      n6 = MW[3] - Mstar;
      n7 = MW[4] - Mstar;
      n8 = MW[5] - Mstar;
      n9 = MW[6] - Mstar;
      n10 = MW[7] - Mstar;
      n11 = MW[8] - Mstar;
      n12 = log(xTj);
      n13 = -2;
      n14 = xF[0]*xPj;
      n15 = -Mstar;
      n16 = -xPj;
      n17 = -NP0*n13;
      n18 = -xF[0];
      n19 = -xTj;
      n20 = pow(n0, -n13);
      n21 = pow(n1, -n13);
      n22 = pow(n4, -n13);
      n23 = pow(n5, -n13);
      n24 = pow(n6, -n13);
      n25 = pow(n7, -n13);
      n26 = pow(n8, -n13);
      n27 = pow(n9, -n13);
      n28 = pow(n10, -n13);
      n29 = pow(n11, -n13);
      n30 = Mstar*n1;
      n31 = -n1*n13;
      n32 = pow(alpha, NP0*n0);
      n33 = n14 + n18*xTj;
      n34 = n14 + n16*xTj;
      n35 = pow(alpha, NP0*n4);
      n36 = pow(alpha, NP0*n5);
      n37 = pow(alpha, NP0*n6);
      n38 = pow(alpha, NP0*n7);
      n39 = pow(alpha, NP0*n8);
      n40 = pow(alpha, NP0*n9);
      n41 = pow(alpha, NP0*n10);
      n42 = pow(alpha, NP0*n11);
      n43 = -MW[0]*n1;
      n44 = n2/n3;
      n45 = n0*n1;
      n46 = -n32 + 1;
      n47 = -n35 + 1;
      n48 = pow(alpha, n0*n17);
      n49 = pow(n33, -n13);
      n50 = pow(n34, -n13);
      n51 = -n36 + 1;
      n52 = -n37 + 1;
      n53 = -n38 + 1;
      n54 = -n39 + 1;
      n55 = -n40 + 1;
      n56 = -n41 + 1;
      n57 = -n42 + 1;
      n58 = -n55;
      n59 = -n51;
      n60 = -n53;
      n61 = -n52;
      n62 = -n32;
      n63 = -n41;
      n64 = 1.0/n45;
      n65 = n0*n21;
      n66 = n20*n21;
      n67 = n36*n5;
      n68 = n39*n8;
      n69 = n57*xF[8];
      n70 = n40*n9;
      n71 = n37*n6;
      n72 = n35*n4;
      n73 = n38*n7;
      n74 = n11*n42;
      n75 = n10*n41;
      n76 = log((-1.0 + xPj/xF[0])/n2);
      n77 = -n54*xF[5];
      n78 = -n47*xF[1];
      n79 = n1*n74;
      n80 = n1*n75;
      n81 = n34/n33;
      n82 = n21*n23*n36;
      n83 = n21*n25*n38;
      n84 = n21*n29*n42;
      n85 = n21*n28*n41;
      n86 = n21*n24*n37;
      n87 = n21*n27*n40;
      n88 = n21*n22*n35;
      n89 = n44*n77;
      n90 = n62*n81 + 1;
      n91 = pow(n90, -n13);
      n92 = n12 + n30 + n43 + n76;
      n93 = n32*n81/n90;
      n94 = n21*n48*n50/(n49*n91);
      n95 = n64*(n92 - log(n90)) + 1;
      n96 = pow(alpha, n0*n95);
      n97 = pow(alpha, n4*n95);
      n98 = pow(alpha, n5*n95);
      n99 = pow(alpha, n6*n95);
      n100 = pow(alpha, n7*n95);
      n101 = pow(alpha, n8*n95);
      n102 = pow(alpha, n9*n95);
      n103 = pow(alpha, n10*n95);
      n104 = pow(alpha, n11*n95);
      n105 = n4/n97;
      n106 = n11/n104;
      n107 = n7/n100;
      n108 = n6/n99;
      n109 = n10/n103;
      n110 = n9/n102;
      n111 = n8/n101;
      n112 = n5/n98;
      n113 = n46 - 1 + 1.0/n96;
      n114 = n47 - 1 + 1.0/n97;
      n115 = n51 - 1 + 1.0/n98;
      n116 = n52 - 1 + 1.0/n99;
      n117 = n53 - 1 + 1.0/n100;
      n118 = n54 - 1 + 1.0/n101;
      n119 = n55 - 1 + 1.0/n102;
      n120 = n56 - 1 + 1.0/n103;
      n121 = n57 - 1 + 1.0/n104;
      n122 = pow(n113, -n13);
      n123 = pow(n114, -n13);
      n124 = pow(n115, -n13);
      n125 = pow(n116, -n13);
      n126 = pow(n117, -n13);
      n127 = pow(n118, -n13);
      n128 = pow(n119, -n13);
      n129 = pow(n120, -n13);
      n130 = pow(n121, -n13);
      n131 = pow(n113, 3);
      n132 = pow(n114, 3);
      n133 = pow(n115, 3);
      n134 = pow(n116, 3);
      n135 = pow(n117, 3);
      n136 = pow(n118, 3);
      n137 = pow(n119, 3);
      n138 = pow(n120, 3);
      n139 = pow(n121, 3);
      n140 = xF[8]/n121;
      n141 = xF[6]/n119;
      n142 = xF[7]/n120;
      n143 = xF[1]/n114;
      n144 = xF[2]/n115;
      n145 = xF[4]/n117;
      n146 = xF[3]/n116;
      n147 = xF[6]/n137;
      n148 = n1*xF[5]/n118;
      n149 = -1/n130;
      n150 = n1*n146;
      n151 = n32*xF[0]/n113;
      n152 = n46/n113;
      n153 = n32*xF[0]/n122;
      n154 = n56*xF[7]/n138;
      n155 = n56*xF[7]/n129;
      n156 = n61*xF[3]/n125;
      n157 = n21*n26*n39*xF[5]/n118;
      n158 = n151*n44/n64;
      n159 = n18*n32*n44/(n113*n64);
      n160 = n151*n44*n66;
      n161 = n143*n44*n88;
      n162 = n144*n44*n82;
      n163 = n146*n44*n86;
      n164 = n145*n44*n83;
      n165 = n157*n44;
      n166 = n141*n44*n87;
      n167 = n142*n44*n85;
      n168 = n140*n44*n84;
      n169 = 0.5*n160;
      n170 = n81/(n90*n96) + 1;
      n171 = n170*n46;
      n172 = n32/n64 + n93/(n64*n96);
      n173 = n1*n105*n93 + n1*n72;
      n174 = n1*n112*n93 + n1*n67;
      n175 = n1*n108*n93 + n1*n71;
      n176 = n1*n107*n93 + n1*n73;
      n177 = n1*n111*n93 + n1*n68;
      n178 = n1*n110*n93 + n1*n70;
      n179 = n1*n109*n93 + n80;
      n180 = n1*n106*n93 + n79;
      n181 = pow(n172, -n13);
      n182 = pow(n173, -n13);
      n183 = pow(n174, -n13);
      n184 = pow(n175, -n13);
      n185 = pow(n176, -n13);
      n186 = pow(n177, -n13);
      n187 = pow(n178, -n13);
      n188 = pow(n179, -n13);
      n189 = pow(n180, -n13);
      n190 = n174*xF[2];
      n191 = n175*xF[3];
      n192 = n0*n31*n32 + n0*n31*n93/n96;
      n193 = n32*n66 + n66*n93/n96;
      n194 = n172*n46;
      n195 = n187*n55;
      n196 = n176*n60*xF[4];
      n197 = n177/n127;
      n198 = n173/n123;
      n199 = n178*xF[6]/n128;
      n200 = n189/n139;
      n201 = n192/n131;
      n202 = n181*n46*xF[0]/n131;
      n203 = n184*n52*xF[3]/n134;
      n204 = n185*n53*xF[4]/n135;
      n205 = n183*n51*xF[2]/n133;
      n206 = n182*n47*xF[1]/n132;
      n207 = n193*n46/n122;
      n208 = n18*n44*n46*(pow(alpha, NP0*n0 - n0*n95)*n81/(n64*n90) + n32/n64)/n122;
      n209 = n13*n18*n32*n44*(pow(alpha, NP0*n0 - n0*n95)*n81/(n64*n90) + n32/n64)/(n122*n64);
      n210 = n31*n44*n72*xF[1]*(pow(alpha, NP0*n0 - n4*n95)*n1*n4*n81/n90 + n1*n72)/n123;
      n211 = n31*n44*n67*xF[2]*(pow(alpha, NP0*n0 - n5*n95)*n1*n5*n81/n90 + n1*n67)/n124;
      n212 = n31*n44*n71*xF[3]*(pow(alpha, NP0*n0 - n6*n95)*n1*n6*n81/n90 + n1*n71)/n125;
      n213 = n31*n44*n73*xF[4]*(pow(alpha, NP0*n0 - n7*n95)*n1*n7*n81/n90 + n1*n73)/n126;
      n214 = n31*n44*n68*xF[5]*(pow(alpha, NP0*n0 - n8*n95)*n1*n8*n81/n90 + n1*n68)/n127;
      n215 = n31*n44*n70*xF[6]*(pow(alpha, NP0*n0 - n9*n95)*n1*n81*n9/n90 + n1*n70)/n128;
      n216 = n31*n44*n75*xF[7]*(pow(alpha, NP0*n0 - n10*n95)*n1*n10*n81/n90 + n80)/n129;
      n217 = n31*n44*n74*xF[8]*(pow(alpha, NP0*n0 - n11*n95)*n1*n11*n81/n90 + n79)/n130;
      n218 = 1.0*n153*n172*n44/n64;
      n219 = n18*n44*n46*(pow(alpha, NP0*n0 - n0*n95)*n66*n81/n90 + n32*n66)/n122;
      n220 = -0.5*n207*n44*xF[0];
      n221 = n158 + n208;
      n222 = n105*n48*n50*n65/(n49*n91) + n105*n65*n93 - n22*n94/n97 + n88;
      n223 = n112*n48*n50*n65/(n49*n91) + n112*n65*n93 - n23*n94/n98 + n82;
      n224 = n107*n48*n50*n65/(n49*n91) + n107*n65*n93 + n83 - n25*n94/n100;
      n225 = n111*n48*n50*n65/(n49*n91) + n111*n65*n93 + n21*n26*n39 - n26*n94/n101;
      n226 = n110*n48*n50*n65/(n49*n91) + n110*n65*n93 + n87 - n27*n94/n102;
      n227 = n44*n78*(-pow(alpha, n0*n17 - n4*n95)*n21*n22*n50/(n49*n91) + pow(alpha, n0*n17 - n4*n95)*n4*n50*n65/(n49*n91) + n105*n65*n93 + n88)/n123;
      n228 = n44*n59*xF[2]*(-pow(alpha, n0*n17 - n5*n95)*n21*n23*n50/(n49*n91) + pow(alpha, n0*n17 - n5*n95)*n5*n50*n65/(n49*n91) + n112*n65*n93 + n82)/n124;
      n229 = n156*n44*(-pow(alpha, n0*n17 - n6*n95)*n21*n24*n50/(n49*n91) + pow(alpha, n0*n17 - n6*n95)*n50*n6*n65/(n49*n91) + n108*n65*n93 + n86);
      n230 = n44*n60*xF[4]*(-pow(alpha, n0*n17 - n7*n95)*n21*n25*n50/(n49*n91) + pow(alpha, n0*n17 - n7*n95)*n50*n65*n7/(n49*n91) + n107*n65*n93 + n83)/n126;
      n231 = n89*(-pow(alpha, n0*n17 - n8*n95)*n21*n26*n50/(n49*n91) + pow(alpha, n0*n17 - n8*n95)*n50*n65*n8/(n49*n91) + n111*n65*n93 + n21*n26*n39)/n127;
      n232 = n44*n58*xF[6]*(-pow(alpha, n0*n17 - n9*n95)*n21*n27*n50/(n49*n91) + pow(alpha, n0*n17 - n9*n95)*n50*n65*n9/(n49*n91) + n110*n65*n93 + n87)/n128;
      n233 = -n155*n44*(pow(alpha, n0*n17 - n10*n95)*n10*n50*n65/(n49*n91) - pow(alpha, n0*n17 - n10*n95)*n21*n28*n50/(n49*n91) + n109*n65*n93 + n85);
      n234 = n149*n44*n69*(pow(alpha, n0*n17 - n11*n95)*n11*n50*n65/(n49*n91) - pow(alpha, n0*n17 - n11*n95)*n21*n29*n50/(n49*n91) + n106*n65*n93 + n84);
      n235 = n169 + n218 + n220;
      n236 = n1*n141*n44*n70 + n1*n143*n44*n72 + n1*n144*n44*n67 + n1*n145*n44*n73 + n140*n44*n79 + n142*n44*n80 + n148*n44*n68 + n149*n180*n44*n69 + n150*n44*n71 - n155*n179*n44 + n156*n175*n44 + n197*n89 + n198*n44*n78 + n199*n44*n58 + n221 + n196*n44/n126 + n190*n44*n59/n124;
      n237 = n236*xTj;
      n238 = n160 + n161 + n162 + n163 + n164 + n165 + n166 + n167 + n168 + n209 + n210 + n211 + n212 + n213 + n214 + n215 + n216 + n217 + n219 + n227 + n228 + n229 + n230 + n231 + n232 + n233 + n234;
      n239 = n147*n178*n44*n58*(n110*n31*n93 + n31*n70) - n154*n179*n44*(n109*n31*n93 + n31*n75) + n238 - n180*n44*n69*(n106*n31*n93 + n31*n74)/n139 + n177*n89*(n111*n31*n93 + n31*n68)/n136 + n196*n44*(n107*n31*n93 + n31*n73)/n135 + n191*n44*n61*(n108*n31*n93 + n31*n71)/n134 + n190*n44*n59*(n112*n31*n93 + n31*n67)/n133 + n173*n44*n78*(n105*n31*n93 + n31*n72)/n132 + n18*n44*n46*(pow(alpha, NP0*n0 - n0*n95)*n81/(n64*n90) + n32/n64)*(pow(alpha, NP0*n0 - n0*n95)*n0*n31*n81/n90 + n0*n31*n32)/n131;
      NP_b = -n153*n171*n44/n64 - n159 - n17*(1.0*n153*n44*(pow(alpha, NP0*n0 - n0*n95)*n81/(n64*n90) + n32/n64)/n64 + n169 - 1.0*n202*n44 - 0.5*xTj*(n13*n147*n195*n44 + n13*n154*n188*n44 + n13*n200*n44*n69 + n13*n202*n44 + n13*n203*n44 + n13*n204*n44 + n13*n205*n44 + n13*n206*n44 + n13*n186*n44*n54*xF[5]/n136 + n149*n44*n69*(pow(alpha, NP0*n0 - n11*n95)*n11*n65*n81/n90 + pow(alpha, n0*n17 - n11*n95)*n11*n50*n65/(n49*n91) - pow(alpha, n0*n17 - n11*n95)*n21*n29*n50/(n49*n91) + n84) - n155*n44*(pow(alpha, NP0*n0 - n10*n95)*n10*n65*n81/n90 + pow(alpha, n0*n17 - n10*n95)*n10*n50*n65/(n49*n91) - pow(alpha, n0*n17 - n10*n95)*n21*n28*n50/(n49*n91) + n85) + n156*n44*(pow(alpha, NP0*n0 - n6*n95)*n6*n65*n81/n90 - pow(alpha, n0*n17 - n6*n95)*n21*n24*n50/(n49*n91) + pow(alpha, n0*n17 - n6*n95)*n50*n6*n65/(n49*n91) + n86) + n160 + n161 + n162 + n163 + n164 + n165 + n166 + n167 + n168 + n209 + n210 + n211 + n212 + n213 + n214 + n215 + n216 + n217 + n219 + n44*n58*xF[6]*(pow(alpha, NP0*n0 - n9*n95)*n65*n81*n9/n90 - pow(alpha, n0*n17 - n9*n95)*n21*n27*n50/(n49*n91) + pow(alpha, n0*n17 - n9*n95)*n50*n65*n9/(n49*n91) + n87)/n128 + n89*(pow(alpha, NP0*n0 - n8*n95)*n65*n8*n81/n90 - pow(alpha, n0*n17 - n8*n95)*n21*n26*n50/(n49*n91) + pow(alpha, n0*n17 - n8*n95)*n50*n65*n8/(n49*n91) + n21*n26*n39)/n127 + n44*n60*xF[4]*(pow(alpha, NP0*n0 - n7*n95)*n65*n7*n81/n90 - pow(alpha, n0*n17 - n7*n95)*n21*n25*n50/(n49*n91) + pow(alpha, n0*n17 - n7*n95)*n50*n65*n7/(n49*n91) + n83)/n126 + n44*n59*xF[2]*(pow(alpha, NP0*n0 - n5*n95)*n5*n65*n81/n90 - pow(alpha, n0*n17 - n5*n95)*n21*n23*n50/(n49*n91) + pow(alpha, n0*n17 - n5*n95)*n5*n50*n65/(n49*n91) + n82)/n124 + n44*n78*(pow(alpha, NP0*n0 - n4*n95)*n4*n65*n81/n90 - pow(alpha, n0*n17 - n4*n95)*n21*n22*n50/(n49*n91) + pow(alpha, n0*n17 - n4*n95)*n4*n50*n65/(n49*n91) + n88)/n123) - 0.5*n44*n46*xF[0]*(pow(alpha, NP0*n0 - n0*n95)*n66*n81/n90 + n32*n66)/n122) - n44*xTj*(n1*n141*n70 + n1*n143*n72 + n1*n144*n67 + n1*n145*n73 + n140*n79 + n142*n80 + n148*n68 + n149*n180*n69 + n150*n71 + n151/n64 - n155*n179 + n156*n175 + n197*n77 + n198*n78 + n199*n58 + n196/n126 + n190*n59/n124 + n18*n46*(pow(alpha, NP0*n0 - n0*n95)*n81/(n64*n90) + n32/n64)/n122);
      NP_2a = -n44*(n13*pow(n170, -n13)*n18*n46*n48*n66/n131 - 1.0*n151*n66 + n153*n171*n66 + 1.0*xTj*(n13*n147*n195 + n13*n154*n188 + n13*n200*n69 + n13*n202 + n13*n203 + n13*n204 + n13*n205 + n13*n206 + n13*n186*n54*xF[5]/n136 + n140*n84 + n141*n87 + n142*n85 + n143*n88 + n144*n82 + n145*n83 + n146*n86 + n149*n69*(pow(alpha, n0*n17 - n11*n95)*n11*n50*n65/(n49*n91) - pow(alpha, n0*n17 - n11*n95)*n21*n29*n50/(n49*n91) + n106*n65*n93 + n84) + n151*n66 - n155*(pow(alpha, n0*n17 - n10*n95)*n10*n50*n65/(n49*n91) - pow(alpha, n0*n17 - n10*n95)*n21*n28*n50/(n49*n91) + n109*n65*n93 + n85) + n156*(-pow(alpha, n0*n17 - n6*n95)*n21*n24*n50/(n49*n91) + pow(alpha, n0*n17 - n6*n95)*n50*n6*n65/(n49*n91) + n108*n65*n93 + n86) + n157 + n31*n74*xF[8]*(pow(alpha, NP0*n0 - n11*n95)*n1*n11*n81/n90 + n79)/n130 + n31*n75*xF[7]*(pow(alpha, NP0*n0 - n10*n95)*n1*n10*n81/n90 + n80)/n129 + n31*n70*xF[6]*(pow(alpha, NP0*n0 - n9*n95)*n1*n81*n9/n90 + n1*n70)/n128 + n58*xF[6]*(-pow(alpha, n0*n17 - n9*n95)*n21*n27*n50/(n49*n91) + pow(alpha, n0*n17 - n9*n95)*n50*n65*n9/(n49*n91) + n110*n65*n93 + n87)/n128 + n31*n68*xF[5]*(pow(alpha, NP0*n0 - n8*n95)*n1*n8*n81/n90 + n1*n68)/n127 + n77*(-pow(alpha, n0*n17 - n8*n95)*n21*n26*n50/(n49*n91) + pow(alpha, n0*n17 - n8*n95)*n50*n65*n8/(n49*n91) + n111*n65*n93 + n21*n26*n39)/n127 + n31*n73*xF[4]*(pow(alpha, NP0*n0 - n7*n95)*n1*n7*n81/n90 + n1*n73)/n126 + n60*xF[4]*(-pow(alpha, n0*n17 - n7*n95)*n21*n25*n50/(n49*n91) + pow(alpha, n0*n17 - n7*n95)*n50*n65*n7/(n49*n91) + n107*n65*n93 + n83)/n126 + n31*n71*xF[3]*(pow(alpha, NP0*n0 - n6*n95)*n1*n6*n81/n90 + n1*n71)/n125 + n31*n67*xF[2]*(pow(alpha, NP0*n0 - n5*n95)*n1*n5*n81/n90 + n1*n67)/n124 + n59*xF[2]*(-pow(alpha, n0*n17 - n5*n95)*n21*n23*n50/(n49*n91) + pow(alpha, n0*n17 - n5*n95)*n5*n50*n65/(n49*n91) + n112*n65*n93 + n82)/n124 + n31*n72*xF[1]*(pow(alpha, NP0*n0 - n4*n95)*n1*n4*n81/n90 + n1*n72)/n123 + n78*(-pow(alpha, n0*n17 - n4*n95)*n21*n22*n50/(n49*n91) + pow(alpha, n0*n17 - n4*n95)*n4*n50*n65/(n49*n91) + n105*n65*n93 + n88)/n123 + n13*n18*n32*(pow(alpha, NP0*n0 - n0*n95)*n81/(n64*n90) + n32/n64)/(n122*n64) + n18*n46*(pow(alpha, NP0*n0 - n0*n95)*n66*n81/n90 + n32*n66)/n122) - 2.0*n170*n48*n66*xF[0]/n122);
      NP_sqrt_base = (NP0*(n19*(n1*n141*n44*n70 + n1*n143*n44*n72 + n1*n144*n44*n67 + n1*n145*n44*n73 + n140*n44*n79 + n142*n44*n80 + n148*n44*n68 + n149*n44*n69*(pow(alpha, NP0*n0 - n11*n95)*n1*n11*n81/n90 + n79) + n150*n44*n71 - n155*n44*(pow(alpha, NP0*n0 - n10*n95)*n1*n10*n81/n90 + n80) + n156*n44*(pow(alpha, NP0*n0 - n6*n95)*n1*n6*n81/n90 + n1*n71) + n221 + n44*n58*xF[6]*(pow(alpha, NP0*n0 - n9*n95)*n1*n81*n9/n90 + n1*n70)/n128 + n89*(pow(alpha, NP0*n0 - n8*n95)*n1*n8*n81/n90 + n1*n68)/n127 + n44*n60*xF[4]*(pow(alpha, NP0*n0 - n7*n95)*n1*n7*n81/n90 + n1*n73)/n126 + n44*n59*xF[2]*(pow(alpha, NP0*n0 - n5*n95)*n1*n5*n81/n90 + n1*n67)/n124 + n44*n78*(pow(alpha, NP0*n0 - n4*n95)*n1*n4*n81/n90 + n1*n72)/n123) + n221) + n152*n44*xF[0] + xTj*(n141*n44*n58 - n142*n44*n56 + n144*n44*n59 + n145*n44*n60 + n146*n44*n61 + n152*n18*n44 - n44*n69/n121 + n89/n118 + n44*n78/n114) + pow(NP0, -n13)*(-1.0*n153*n172*n44/n64 - 0.5*n160 + 0.5*n194*n201*n44*xF[0] + 0.5*n207*n44*xF[0] + 0.5*n239*xTj))*(-n13*n19*(n147*n44*n58*(pow(alpha, NP0*n0 - n9*n95)*n1*n81*n9/n90 + n1*n70)*(pow(alpha, NP0*n0 - n9*n95)*n31*n81*n9/n90 + n31*n70) + n149*n44*n69*(pow(alpha, NP0*n0 - n11*n95)*n11*n65*n81/n90 + pow(alpha, n0*n17 - n11*n95)*n11*n50*n65/(n49*n91) - pow(alpha, n0*n17 - n11*n95)*n21*n29*n50/(n49*n91) + n84) - n154*n44*(pow(alpha, NP0*n0 - n10*n95)*n1*n10*n81/n90 + n80)*(pow(alpha, NP0*n0 - n10*n95)*n10*n31*n81/n90 + n31*n75) - n155*n44*(pow(alpha, NP0*n0 - n10*n95)*n10*n65*n81/n90 + pow(alpha, n0*n17 - n10*n95)*n10*n50*n65/(n49*n91) - pow(alpha, n0*n17 - n10*n95)*n21*n28*n50/(n49*n91) + n85) + n156*n44*(pow(alpha, NP0*n0 - n6*n95)*n6*n65*n81/n90 - pow(alpha, n0*n17 - n6*n95)*n21*n24*n50/(n49*n91) + pow(alpha, n0*n17 - n6*n95)*n50*n6*n65/(n49*n91) + n86) + n160 + n161 + n162 + n163 + n164 + n165 + n166 + n167 + n168 + n209 + n210 + n211 + n212 + n213 + n214 + n215 + n216 + n217 + n219 - n44*n69*(pow(alpha, NP0*n0 - n11*n95)*n1*n11*n81/n90 + n79)*(pow(alpha, NP0*n0 - n11*n95)*n11*n31*n81/n90 + n31*n74)/n139 + n89*(pow(alpha, NP0*n0 - n8*n95)*n1*n8*n81/n90 + n1*n68)*(pow(alpha, NP0*n0 - n8*n95)*n31*n8*n81/n90 + n31*n68)/n136 + n44*n60*xF[4]*(pow(alpha, NP0*n0 - n7*n95)*n1*n7*n81/n90 + n1*n73)*(pow(alpha, NP0*n0 - n7*n95)*n31*n7*n81/n90 + n31*n73)/n135 + n44*n61*xF[3]*(pow(alpha, NP0*n0 - n6*n95)*n1*n6*n81/n90 + n1*n71)*(pow(alpha, NP0*n0 - n6*n95)*n31*n6*n81/n90 + n31*n71)/n134 + n44*n59*xF[2]*(pow(alpha, NP0*n0 - n5*n95)*n1*n5*n81/n90 + n1*n67)*(pow(alpha, NP0*n0 - n5*n95)*n31*n5*n81/n90 + n31*n67)/n133 + n44*n78*(pow(alpha, NP0*n0 - n4*n95)*n1*n4*n81/n90 + n1*n72)*(pow(alpha, NP0*n0 - n4*n95)*n31*n4*n81/n90 + n31*n72)/n132 + n18*n44*n46*(pow(alpha, NP0*n0 - n0*n95)*n81/(n64*n90) + n32/n64)*(pow(alpha, NP0*n0 - n0*n95)*n0*n31*n81/n90 + n0*n31*n32)/n131 + n44*n58*xF[6]*(pow(alpha, NP0*n0 - n9*n95)*n65*n81*n9/n90 - pow(alpha, n0*n17 - n9*n95)*n21*n27*n50/(n49*n91) + pow(alpha, n0*n17 - n9*n95)*n50*n65*n9/(n49*n91) + n87)/n128 + n89*(pow(alpha, NP0*n0 - n8*n95)*n65*n8*n81/n90 - pow(alpha, n0*n17 - n8*n95)*n21*n26*n50/(n49*n91) + pow(alpha, n0*n17 - n8*n95)*n50*n65*n8/(n49*n91) + n21*n26*n39)/n127 + n44*n60*xF[4]*(pow(alpha, NP0*n0 - n7*n95)*n65*n7*n81/n90 - pow(alpha, n0*n17 - n7*n95)*n21*n25*n50/(n49*n91) + pow(alpha, n0*n17 - n7*n95)*n50*n65*n7/(n49*n91) + n83)/n126 + n44*n59*xF[2]*(pow(alpha, NP0*n0 - n5*n95)*n5*n65*n81/n90 - pow(alpha, n0*n17 - n5*n95)*n21*n23*n50/(n49*n91) + pow(alpha, n0*n17 - n5*n95)*n5*n50*n65/(n49*n91) + n82)/n124 + n44*n78*(pow(alpha, NP0*n0 - n4*n95)*n4*n65*n81/n90 - pow(alpha, n0*n17 - n4*n95)*n21*n22*n50/(n49*n91) + pow(alpha, n0*n17 - n4*n95)*n4*n50*n65/(n49*n91) + n88)/n123) - n13*n219 + 4.0*n153*n172*n44/n64 + 2.0*n160 - 4.0*n202*n44) + pow(-n159 - n17*(1.0*n153*n44*(pow(alpha, NP0*n0 - n0*n95)*n81/(n64*n90) + n32/n64)/n64 + n169 - 0.5*xTj*(n147*n44*n58*(pow(alpha, NP0*n0 - n9*n95)*n1*n81*n9/n90 + n1*n70)*(pow(alpha, NP0*n0 - n9*n95)*n31*n81*n9/n90 + n31*n70) + n149*n44*n69*(pow(alpha, NP0*n0 - n11*n95)*n11*n65*n81/n90 + pow(alpha, n0*n17 - n11*n95)*n11*n50*n65/(n49*n91) - pow(alpha, n0*n17 - n11*n95)*n21*n29*n50/(n49*n91) + n84) - n154*n44*(pow(alpha, NP0*n0 - n10*n95)*n1*n10*n81/n90 + n80)*(pow(alpha, NP0*n0 - n10*n95)*n10*n31*n81/n90 + n31*n75) - n155*n44*(pow(alpha, NP0*n0 - n10*n95)*n10*n65*n81/n90 + pow(alpha, n0*n17 - n10*n95)*n10*n50*n65/(n49*n91) - pow(alpha, n0*n17 - n10*n95)*n21*n28*n50/(n49*n91) + n85) + n156*n44*(pow(alpha, NP0*n0 - n6*n95)*n6*n65*n81/n90 - pow(alpha, n0*n17 - n6*n95)*n21*n24*n50/(n49*n91) + pow(alpha, n0*n17 - n6*n95)*n50*n6*n65/(n49*n91) + n86) + n160 + n161 + n162 + n163 + n164 + n165 + n166 + n167 + n168 + n209 + n210 + n211 + n212 + n213 + n214 + n215 + n216 + n217 + n219 - n44*n69*(pow(alpha, NP0*n0 - n11*n95)*n1*n11*n81/n90 + n79)*(pow(alpha, NP0*n0 - n11*n95)*n11*n31*n81/n90 + n31*n74)/n139 + n89*(pow(alpha, NP0*n0 - n8*n95)*n1*n8*n81/n90 + n1*n68)*(pow(alpha, NP0*n0 - n8*n95)*n31*n8*n81/n90 + n31*n68)/n136 + n44*n60*xF[4]*(pow(alpha, NP0*n0 - n7*n95)*n1*n7*n81/n90 + n1*n73)*(pow(alpha, NP0*n0 - n7*n95)*n31*n7*n81/n90 + n31*n73)/n135 + n44*n61*xF[3]*(pow(alpha, NP0*n0 - n6*n95)*n1*n6*n81/n90 + n1*n71)*(pow(alpha, NP0*n0 - n6*n95)*n31*n6*n81/n90 + n31*n71)/n134 + n44*n59*xF[2]*(pow(alpha, NP0*n0 - n5*n95)*n1*n5*n81/n90 + n1*n67)*(pow(alpha, NP0*n0 - n5*n95)*n31*n5*n81/n90 + n31*n67)/n133 + n44*n78*(pow(alpha, NP0*n0 - n4*n95)*n1*n4*n81/n90 + n1*n72)*(pow(alpha, NP0*n0 - n4*n95)*n31*n4*n81/n90 + n31*n72)/n132 + n18*n44*n46*(pow(alpha, NP0*n0 - n0*n95)*n81/(n64*n90) + n32/n64)*(pow(alpha, NP0*n0 - n0*n95)*n0*n31*n81/n90 + n0*n31*n32)/n131 + n44*n58*xF[6]*(pow(alpha, NP0*n0 - n9*n95)*n65*n81*n9/n90 - pow(alpha, n0*n17 - n9*n95)*n21*n27*n50/(n49*n91) + pow(alpha, n0*n17 - n9*n95)*n50*n65*n9/(n49*n91) + n87)/n128 + n89*(pow(alpha, NP0*n0 - n8*n95)*n65*n8*n81/n90 - pow(alpha, n0*n17 - n8*n95)*n21*n26*n50/(n49*n91) + pow(alpha, n0*n17 - n8*n95)*n50*n65*n8/(n49*n91) + n21*n26*n39)/n127 + n44*n60*xF[4]*(pow(alpha, NP0*n0 - n7*n95)*n65*n7*n81/n90 - pow(alpha, n0*n17 - n7*n95)*n21*n25*n50/(n49*n91) + pow(alpha, n0*n17 - n7*n95)*n50*n65*n7/(n49*n91) + n83)/n126 + n44*n59*xF[2]*(pow(alpha, NP0*n0 - n5*n95)*n5*n65*n81/n90 - pow(alpha, n0*n17 - n5*n95)*n21*n23*n50/(n49*n91) + pow(alpha, n0*n17 - n5*n95)*n5*n50*n65/(n49*n91) + n82)/n124 + n44*n78*(pow(alpha, NP0*n0 - n4*n95)*n4*n65*n81/n90 - pow(alpha, n0*n17 - n4*n95)*n21*n22*n50/(n49*n91) + pow(alpha, n0*n17 - n4*n95)*n4*n50*n65/(n49*n91) + n88)/n123) - 0.5*n44*n46*xF[0]*(pow(alpha, NP0*n0 - n0*n95)*n81/(n64*n90) + n32/n64)*(pow(alpha, NP0*n0 - n0*n95)*n0*n31*n81/n90 + n0*n31*n32)/n131 - 0.5*n44*n46*xF[0]*(pow(alpha, NP0*n0 - n0*n95)*n66*n81/n90 + n32*n66)/n122) - n237 - n194*n44*xF[0]/n122, -n13);
      NP_sqrt_base = fabs(NP_sqrt_base);
      NP1 = (-NP_b - sqrt(NP_sqrt_base))/NP_2a;
      NT1 = n64*(n92 - log(-pow(alpha, NP1*n0)*n81 + 1));
      g0 = MW[1] - Mstar;
      g1 = MW[0] - Mstar;
      g2 = NT1 + 1;
      g3 = xPj - xTj;
      g4 = MW[2] - Mstar;
      g5 = MW[3] - Mstar;
      g6 = MW[4] - Mstar;
      g7 = MW[5] - Mstar;
      g8 = MW[6] - Mstar;
      g9 = MW[7] - Mstar;
      g10 = MW[8] - Mstar;
      g11 = xF[0] - xTj;
      g12 = xF[0] - xPj;
      g13 = -xTj;
      g14 = xPj/xF[1];
      g15 = pow(alpha, -g1);
      g16 = pow(alpha, -g0);
      g17 = pow(alpha, -g4);
      g18 = pow(alpha, -g5);
      g19 = pow(alpha, -g6);
      g20 = pow(alpha, -g7);
      g21 = pow(alpha, -g8);
      g22 = pow(alpha, -g9);
      g23 = pow(alpha, -g10);
      g24 = log(xF[0]/xF[1]);
      g25 = -g2;
      g26 = pow(alpha, NP1*g0);
      g27 = pow(alpha, NP1*g1);
      g28 = log(g15);
      g29 = pow(alpha, NP1*g4);
      g30 = pow(alpha, NP1*g5);
      g31 = pow(alpha, NP1*g6);
      g32 = pow(alpha, NP1*g7);
      g33 = pow(alpha, NP1*g8);
      g34 = pow(alpha, NP1*g9);
      g35 = pow(alpha, NP1*g10);
      g36 = -g24;
      g37 = g11/g3;
      g38 = g3/g11;
      g39 = -g26 + 1;
      g40 = -g26 + 1;
      g41 = -g27 + 1;
      g42 = -g29 + 1;
      g43 = -g30 + 1;
      g44 = -g31 + 1;
      g45 = -g32 + 1;
      g46 = -g33 + 1;
      g47 = -g34 + 1;
      g48 = -g35 + 1;
      g49 = -g27;
      g50 = -g29;
      g51 = -g30;
      g52 = -g31;
      g53 = -g32;
      g54 = -g33;
      g55 = -g34;
      g56 = -g35;
      g57 = -1.0*g24;
      g58 = -g3/g12;
      g59 = g12/(g3*xF[1]);
      g60 = pow(alpha, g0*g25) - 1;
      g61 = pow(alpha, g0*g25) - 1;
      g62 = pow(alpha, g1*g25) - 1;
      g63 = pow(alpha, g25*g4) - 1;
      g64 = pow(alpha, g25*g5) - 1;
      g65 = pow(alpha, g25*g6) - 1;
      g66 = pow(alpha, g25*g7) - 1;
      g67 = pow(alpha, g25*g8) - 1;
      g68 = pow(alpha, g25*g9) - 1;
      g69 = pow(alpha, g10*g25) - 1;
      g70 = -pow(alpha, g1*g25);
      g71 = -pow(alpha, g25*g4);
      g72 = -pow(alpha, g25*g5);
      g73 = -pow(alpha, g25*g6);
      g74 = -pow(alpha, g25*g7);
      g75 = -pow(alpha, g25*g8);
      g76 = -pow(alpha, g25*g9);
      g77 = -pow(alpha, g10*g25);
      g78 = g40 + g61;
      g79 = -g27 - g70;
      g80 = -g29 - g71;
      g81 = -g30 - g72;
      g82 = -g31 - g73;
      g83 = -g32 - g74;
      g84 = -g33 - g75;
      g85 = -g34 - g76;
      g86 = -g35 - g77;
      g87 = pow(alpha, g1*g25) + g49;
      g88 = g40 + g61;
      g89 = pow(alpha, g25*g4) + g50;
      g90 = pow(alpha, g25*g5) + g51;
      g91 = pow(alpha, g25*g6) + g52;
      g92 = pow(alpha, g25*g7) + g53;
      g93 = pow(alpha, g25*g8) + g54;
      g94 = pow(alpha, g25*g9) + g55;
      g95 = pow(alpha, g10*g25) + g56;
      g96 = xF[8]/g95;
      g97 = xF[0]/g87;
      g98 = xF[1]/g88;
      g99 = xF[2]/g89;
      g100 = xF[3]/g90;
      g101 = xF[6]/g93;
      g102 = xF[7]/g94;
      g103 = xF[4]/g91;
      g104 = xF[5]/g92;
      g105 = xF[1]/g78;
      g106 = xF[0]/g79;
      g107 = xF[4]/g82;
      g108 = xF[5]/g83;
      g109 = xF[7]/g85;
      g110 = xF[2]/g80;
      g111 = xF[3]/g81;
      g112 = xF[6]/g84;
      g113 = xF[8]/g86;
      g114 = g46/g84;
      g115 = g44/g82;
      g116 = g47/g85;
      g117 = g41/g79;
      g118 = g45/g83;
      g119 = g43/g81;
      g120 = g39/g78;
      g121 = g42/g80;
      g122 = g48/g86;
      g123 = g60/g78;
      g124 = g62/g79;
      g125 = g66/g83;
      g126 = g63/g80;
      g127 = g64/g81;
      g128 = g65/g82;
      g129 = g69/g86;
      g130 = g67/g84;
      g131 = g68/g85;
      g132 = log(g13*g59*g88/g40);
      g133 = log(g13*g59*g78/g39);
      g134 = log(g14*g37*g88/g61);
      g135 = 1.0*g132;
      g136 = log(g14*g37*g78/g60);
      g137 = 1.0*g134;
      g138 = -g100*g135*(g51 + 1) - g100*g137*(pow(alpha, g25*g5) - 1) - g101*g135*(g54 + 1) - g101*g137*(pow(alpha, g25*g8) - 1) - g102*g135*(g55 + 1) - g102*g137*(pow(alpha, g25*g9) - 1) - g103*g135*(g52 + 1) - g103*g137*(pow(alpha, g25*g6) - 1) - g104*g135*(g53 + 1) - g104*g137*(pow(alpha, g25*g7) - 1) - g135*g40*g98 - g135*g96*(g56 + 1) - g135*g97*(g49 + 1) - g135*g99*(g50 + 1) - g137*g61*g98 - g137*g96*(pow(alpha, g10*g25) - 1) - g137*g97*(pow(alpha, g1*g25) - 1) - g137*g99*(pow(alpha, g25*g4) - 1) - g57*xF[0] - g57*xF[1] - g57*xF[2] - g57*xF[3] - g57*xF[4] - g57*xF[5] - g57*xF[6] - g57*xF[7] - g57*xF[8];
      LpF = xF[0]*(g15 + 1.0)*(g117*g133 + g124*g136 + g36)/(g28*(g15 - 1.0)) + xF[1]*(g16 + 1.0)*(g120*g133 + g123*g136 + g36)/(g28*(g16 - 1.0)) + xF[2]*(g17 + 1.0)*(g121*g133 + g126*g136 + g36)/(g28*(g17 - 1.0)) + xF[3]*(g18 + 1.0)*(g119*g133 + g127*g136 + g36)/(g28*(g18 - 1.0)) + xF[4]*(g19 + 1.0)*(g115*g133 + g128*g136 + g36)/(g28*(g19 - 1.0)) + xF[5]*(g20 + 1.0)*(g118*g133 + g125*g136 + g36)/(g28*(g20 - 1.0)) + xF[6]*(g21 + 1.0)*(g114*g133 + g130*g136 + g36)/(g28*(g21 - 1.0)) + xF[7]*(g22 + 1.0)*(g116*g133 + g131*g136 + g36)/(g28*(g22 - 1.0)) + xF[8]*(g23 + 1.0)*(g122*g133 + g129*g136 + g36)/(g28*(g23 - 1.0));
      PpF = g37;
      TpF = -g12/g3;
      SWUpF = g138;
      SWUpP = g138*g38;
      xP[0] = g106*g38*g62;
      xP[1] = g105*g38*g60;
      xP[2] = g110*g38*g63;
      xP[3] = g111*g38*g64;
      xP[4] = g107*g38*g65;
      xP[5] = g108*g38*g66;
      xP[6] = g112*g38*g67;
      xP[7] = g109*g38*g68;
      xP[8] = g113*g38*g69;
      xT[0] = g106*g41*g58;
      xT[1] = g105*g39*g58;
      xT[2] = g110*g42*g58;
      xT[3] = g111*g43*g58;
      xT[4] = g107*g44*g58;
      xT[5] = g108*g45*g58;
      xT[6] = g112*g46*g58;
      xT[7] = g109*g47*g58;
      xT[8] = g113*g48*g58;
      break;
    case 10:
      n0 = MW[0] - Mstar;
      n1 = log(alpha);
      n2 = xPj - xTj;
      n3 = xF[0] - xPj;
      n4 = MW[1] - Mstar;
      n5 = MW[2] - Mstar;
      n6 = MW[3] - Mstar;
      n7 = MW[4] - Mstar;
      n8 = MW[5] - Mstar;
      n9 = MW[6] - Mstar;
      n10 = MW[7] - Mstar;
      n11 = MW[8] - Mstar;
      n12 = MW[9] - Mstar;
      n13 = log(xTj);
      n14 = -2;
      n15 = xF[0]*xPj;
      n16 = -Mstar;
      n17 = -xPj;
      n18 = -NP0*n14;
      n19 = -xTj;
      n20 = -n14*xF[9];
      n21 = pow(n0, -n14);
      n22 = pow(n1, -n14);
      n23 = pow(n4, -n14);
      n24 = pow(n5, -n14);
      n25 = pow(n6, -n14);
      n26 = pow(n7, -n14);
      n27 = pow(n8, -n14);
      n28 = pow(n9, -n14);
      n29 = pow(n10, -n14);
      n30 = pow(n11, -n14);
      n31 = pow(n12, -n14);
      n32 = Mstar*n1;
      n33 = -n1*n14;
      n34 = pow(alpha, NP0*n0);
      n35 = n15 + n19*xF[0];
      n36 = n15 + n17*xTj;
      n37 = pow(alpha, NP0*n4);
      n38 = pow(alpha, NP0*n5);
      n39 = pow(alpha, NP0*n6);
      n40 = pow(alpha, NP0*n7);
      n41 = pow(alpha, NP0*n8);
      n42 = pow(alpha, NP0*n9);
      n43 = pow(alpha, NP0*n10);
      n44 = pow(alpha, NP0*n11);
      n45 = pow(alpha, NP0*n12);
      n46 = -MW[0]*n1;
      n47 = n2/n3;
      n48 = -n22;
      n49 = -n34 + 1;
      n50 = -n37 + 1;
      n51 = pow(alpha, n0*n18);
      n52 = pow(n35, -n14);
      n53 = pow(n36, -n14);
      n54 = -n38 + 1;
      n55 = -n39 + 1;
      n56 = -n40 + 1;
      n57 = -n41 + 1;
      n58 = -n42 + 1;
      n59 = -n43 + 1;
      n60 = -n44 + 1;
      n61 = -n45 + 1;
      n62 = -n34;
      n63 = -n47;
      n64 = 1/(n0*n1);
      n65 = n0*n22;
      n66 = n57*xF[5];
      n67 = n61*xF[9];
      n68 = n55*xF[3];
      n69 = n38*n5;
      n70 = n41*n8;
      n71 = n59*xF[7];
      n72 = n50*xF[1];
      n73 = n60*xF[8];
      n74 = n42*n9;
      n75 = n39*n6;
      n76 = n37*n4;
      n77 = n40*n7;
      n78 = n58*xF[6];
      n79 = n10*n43;
      n80 = n11*n44;
      n81 = log((-1.0 + xPj/xF[0])/n2);
      n82 = n1*n12*n45;
      n83 = n1*n80;
      n84 = n0*n1*n34;
      n85 = n1*n79;
      n86 = n36/n35;
      n87 = n21*n51;
      n88 = n22*n24*n38;
      n89 = n22*n26*n40;
      n90 = n21*n22*n34;
      n91 = n22*n30*n44;
      n92 = n22*n31*n45;
      n93 = n22*n29*n43;
      n94 = n22*n25*n39;
      n95 = n22*n28*n42;
      n96 = n22*n23*n37;
      n97 = n62*n86 + 1;
      n98 = pow(n97, -n14);
      n99 = n13 + n32 + n46 + n81;
      n100 = n34*n86/n97;
      n101 = n64*(n99 - log(n97)) + 1;
      n102 = pow(alpha, n0*n101);
      n103 = pow(alpha, n101*n4);
      n104 = pow(alpha, n101*n5);
      n105 = pow(alpha, n101*n6);
      n106 = pow(alpha, n101*n7);
      n107 = pow(alpha, n101*n8);
      n108 = pow(alpha, n101*n9);
      n109 = pow(alpha, n10*n101);
      n110 = pow(alpha, n101*n11);
      n111 = pow(alpha, n101*n12);
      n112 = n4/n103;
      n113 = n12/n111;
      n114 = n11/n110;
      n115 = n7/n106;
      n116 = n6/n105;
      n117 = n10/n109;
      n118 = n9/n108;
      n119 = n8/n107;
      n120 = n0/n102;
      n121 = n5/n104;
      n122 = n28/n108;
      n123 = n21/n102;
      n124 = n24/n104;
      n125 = n0*n121;
      n126 = n49 - 1 + 1.0/n102;
      n127 = n50 - 1 + 1.0/n103;
      n128 = n54 - 1 + 1.0/n104;
      n129 = n55 - 1 + 1.0/n105;
      n130 = n56 - 1 + 1.0/n106;
      n131 = n57 - 1 + 1.0/n107;
      n132 = n58 - 1 + 1.0/n108;
      n133 = n59 - 1 + 1.0/n109;
      n134 = n60 - 1 + 1.0/n110;
      n135 = n61 - 1 + 1.0/n111;
      n136 = pow(n126, -n14);
      n137 = pow(n127, -n14);
      n138 = pow(n128, -n14);
      n139 = pow(n129, -n14);
      n140 = pow(n130, -n14);
      n141 = pow(n131, -n14);
      n142 = pow(n132, -n14);
      n143 = pow(n133, -n14);
      n144 = pow(n134, -n14);
      n145 = pow(n135, -n14);
      n146 = pow(n126, 3);
      n147 = pow(n127, 3);
      n148 = pow(n128, 3);
      n149 = pow(n129, 3);
      n150 = pow(n130, 3);
      n151 = pow(n131, 3);
      n152 = pow(n132, 3);
      n153 = pow(n133, 3);
      n154 = pow(n134, 3);
      n155 = pow(n135, 3);
      n156 = xF[2]/n128;
      n157 = xF[9]/n135;
      n158 = xF[0]/n126;
      n159 = xF[8]/n134;
      n160 = xF[6]/n132;
      n161 = xF[7]/n133;
      n162 = xF[1]/n127;
      n163 = xF[4]/n130;
      n164 = xF[3]/n129;
      n165 = xF[0]/n136;
      n166 = -1/n140;
      n167 = n1*xF[5]/n131;
      n168 = n1*n164;
      n169 = n54/n148;
      n170 = n54/n138;
      n171 = n49*xF[0]/n146;
      n172 = n22*n27*n41*xF[5]/n131;
      n173 = n0*n1*n158*n47*n62;
      n174 = n158*n47*n90;
      n175 = n162*n47*n96;
      n176 = n156*n47*n88;
      n177 = n164*n47*n94;
      n178 = n163*n47*n89;
      n179 = n172*n47;
      n180 = n160*n47*n95;
      n181 = n161*n47*n93;
      n182 = n159*n47*n91;
      n183 = n157*n47*n92;
      n184 = 0.5*n174;
      n185 = 1 + n86/(n102*n97);
      n186 = n185*n49;
      n187 = n84 + n84*n86/(n102*n97);
      n188 = n1*n100*n112 + n1*n76;
      n189 = n1*n100*n121 + n1*n69;
      n190 = n1*n100*n116 + n1*n75;
      n191 = n1*n100*n115 + n1*n77;
      n192 = n1*n100*n119 + n1*n70;
      n193 = n1*n100*n118 + n1*n74;
      n194 = n1*n100*n117 + n85;
      n195 = n1*n100*n114 + n83;
      n196 = n1*n100*n113 + n82;
      n197 = pow(n187, -n14);
      n198 = pow(n188, -n14);
      n199 = pow(n189, -n14);
      n200 = pow(n190, -n14);
      n201 = pow(n191, -n14);
      n202 = pow(n192, -n14);
      n203 = pow(n193, -n14);
      n204 = pow(n194, -n14);
      n205 = pow(n195, -n14);
      n206 = pow(n196, -n14);
      n207 = n189*xF[2];
      n208 = n0*n33*n34 + n100*n120*n33;
      n209 = n199*xF[2];
      n210 = n90 + n86*n90/(n102*n97);
      n211 = n100*n123*n48 + n21*n34*n48;
      n212 = n187*n49;
      n213 = n191*n56*xF[4];
      n214 = n210*n49;
      n215 = n211*n49;
      n216 = n192/n141;
      n217 = n188/n137;
      n218 = n190/n139;
      n219 = n194/n143;
      n220 = n195/n144;
      n221 = n196/n145;
      n222 = n204/n153;
      n223 = n200/n149;
      n224 = n205/n154;
      n225 = n193*xF[6]/n142;
      n226 = n206/n155;
      n227 = n191*xF[4]/n140;
      n228 = n198/n147;
      n229 = n203/n152;
      n230 = n201*n56*xF[4]/n150;
      n231 = n165*n212*n47;
      n232 = n0*n165*n33*n34*n47*(pow(alpha, NP0*n0 - n0*n101)*n0*n1*n86/n97 + n84);
      n233 = n33*n47*n76*xF[1]*(pow(alpha, NP0*n0 - n101*n4)*n1*n4*n86/n97 + n1*n76)/n137;
      n234 = n33*n47*n69*xF[2]*(pow(alpha, NP0*n0 - n101*n5)*n1*n5*n86/n97 + n1*n69)/n138;
      n235 = n33*n47*n75*xF[3]*(pow(alpha, NP0*n0 - n101*n6)*n1*n6*n86/n97 + n1*n75)/n139;
      n236 = n33*n47*n77*xF[4]*(pow(alpha, NP0*n0 - n101*n7)*n1*n7*n86/n97 + n1*n77)/n140;
      n237 = n33*n47*n70*xF[5]*(pow(alpha, NP0*n0 - n101*n8)*n1*n8*n86/n97 + n1*n70)/n141;
      n238 = n33*n47*n74*xF[6]*(pow(alpha, NP0*n0 - n101*n9)*n1*n86*n9/n97 + n1*n74)/n142;
      n239 = n33*n47*n79*xF[7]*(pow(alpha, NP0*n0 - n10*n101)*n1*n10*n86/n97 + n85)/n143;
      n240 = n33*n47*n80*xF[8]*(pow(alpha, NP0*n0 - n101*n11)*n1*n11*n86/n97 + n83)/n144;
      n241 = n20*n47*n82*(pow(alpha, NP0*n0 - n101*n12)*n1*n12*n86/n97 + n82)/n145;
      n242 = 1.0*n165*n187*n47*n84;
      n243 = 0.5*n187*n208;
      n244 = n184 + n242;
      n245 = n100*n112*n65 + n112*n51*n53*n65/(n52*n98) + n96 + n23*n48*n51*n53/(n103*n52*n98);
      n246 = n100*n121*n65 + n121*n51*n53*n65/(n52*n98) + n124*n48*n51*n53/(n52*n98) + n88;
      n247 = n100*n116*n65 + n116*n51*n53*n65/(n52*n98) + n94 + n25*n48*n51*n53/(n105*n52*n98);
      n248 = n100*n115*n65 + n115*n51*n53*n65/(n52*n98) + n89 + n26*n48*n51*n53/(n106*n52*n98);
      n249 = n100*n119*n65 + n119*n51*n53*n65/(n52*n98) + n22*n27*n41 + n27*n48*n51*n53/(n107*n52*n98);
      n250 = n100*n118*n65 + n118*n51*n53*n65/(n52*n98) + n122*n48*n51*n53/(n52*n98) + n95;
      n251 = n100*n117*n65 + n117*n51*n53*n65/(n52*n98) + n93 + n29*n48*n51*n53/(n109*n52*n98);
      n252 = n100*n114*n65 + n114*n51*n53*n65/(n52*n98) + n91 + n30*n48*n51*n53/(n110*n52*n98);
      n253 = n100*n113*n65 + n113*n51*n53*n65/(n52*n98) + n92 + n31*n48*n51*n53/(n111*n52*n98);
      n254 = n63*n72*(pow(alpha, n0*n18 - n101*n4)*n23*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n4)*n4*n53*n65/(n52*n98) + n100*n112*n65 + n96)/n137;
      n255 = n63*n68*(pow(alpha, n0*n18 - n101*n6)*n25*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n6)*n53*n6*n65/(n52*n98) + n100*n116*n65 + n94)/n139;
      n256 = n56*n63*xF[4]*(pow(alpha, n0*n18 - n101*n7)*n26*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n7)*n53*n65*n7/(n52*n98) + n100*n115*n65 + n89)/n140;
      n257 = n63*n66*(pow(alpha, n0*n18 - n101*n8)*n27*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n8)*n53*n65*n8/(n52*n98) + n100*n119*n65 + n22*n27*n41)/n141;
      n258 = n63*n71*(pow(alpha, n0*n18 - n10*n101)*n10*n53*n65/(n52*n98) + pow(alpha, n0*n18 - n10*n101)*n29*n48*n53/(n52*n98) + n100*n117*n65 + n93)/n143;
      n259 = n63*n73*(pow(alpha, n0*n18 - n101*n11)*n11*n53*n65/(n52*n98) + pow(alpha, n0*n18 - n101*n11)*n30*n48*n53/(n52*n98) + n100*n114*n65 + n91)/n144;
      n260 = n63*n67*(pow(alpha, n0*n18 - n101*n12)*n12*n53*n65/(n52*n98) + pow(alpha, n0*n18 - n101*n12)*n31*n48*n53/(n52*n98) + n100*n113*n65 + n92)/n145;
      n261 = xTj*(n1*n156*n47*n69 + n1*n160*n47*n74 + n1*n162*n47*n76 + n1*n163*n47*n77 + n157*n47*n82 + n158*n47*n84 + n159*n47*n83 + n161*n47*n85 + n165*n212*n63 + n167*n47*n70 + n168*n47*n75 + n170*n207*n63 + n216*n63*n66 + n217*n63*n72 + n218*n63*n68 + n219*n63*n71 + n220*n63*n73 + n221*n63*n67 + n193*n63*n78/n142 + n213*n63/n140);
      n262 = n173 + n231 + n261;
      n263 = n174 + n175 + n176 + n177 + n178 + n179 + n180 + n181 + n182 + n183 + n232 + n233 + n234 + n235 + n236 + n237 + n238 + n239 + n240 + n241 + n254 + n255 + n256 + n257 + n258 + n259 + n260;
      n264 = n165*n215*n47 + n169*n207*n63*(n100*n121*n33 + n33*n69) + n170*n47*xF[2]*(pow(alpha, n0*n18 - n101*n5)*n0*n48*n5*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n5)*n22*n24*n53/(n52*n98) + n100*n125*n48 + n24*n38*n48) + n171*n187*n208*n63 + n263 + n196*n63*n67*(n100*n113*n33 + n12*n33*n45)/n155 + n195*n63*n73*(n100*n114*n33 + n33*n80)/n154 + n194*n63*n71*(n100*n117*n33 + n33*n79)/n153 + n193*n63*n78*(n100*n118*n33 + n33*n74)/n152 + n192*n63*n66*(n100*n119*n33 + n33*n70)/n151 + n213*n63*(n100*n115*n33 + n33*n77)/n150 + n190*n63*n68*(n100*n116*n33 + n33*n75)/n149 + n188*n63*n72*(n100*n112*n33 + n33*n76)/n147 + n47*n78*(pow(alpha, n0*n18 - n101*n9)*n0*n48*n53*n9/(n52*n98) + pow(alpha, n0*n18 - n101*n9)*n22*n28*n53/(n52*n98) + n0*n100*n118*n48 + n28*n42*n48)/n142;
      NP_b = -n165*n186*n47*n84 - n173 - n18*(-0.5*n165*n47*n49*(pow(alpha, NP0*n0 - n0*n101)*n21*n22*n86/n97 + n90) + 1.0*n165*n47*n84*(pow(alpha, NP0*n0 - n0*n101)*n0*n1*n86/n97 + n84) - 1.0*n171*n197*n47 + n184 - 0.5*xTj*(n14*n169*n209*n47 + n14*n171*n197*n47 + n14*n222*n47*n71 + n14*n223*n47*n68 + n14*n224*n47*n73 + n14*n226*n47*n67 + n14*n228*n47*n72 + n14*n229*n47*n78 + n14*n230*n47 + n14*n202*n47*n66/n151 + n165*n49*n63*(pow(alpha, NP0*n0 - n0*n101)*n21*n22*n86/n97 + n90) + n170*n63*xF[2]*(pow(alpha, NP0*n0 - n101*n5)*n5*n65*n86/n97 + pow(alpha, n0*n18 - n101*n5)*n24*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n5)*n5*n53*n65/(n52*n98) + n88) + n174 + n175 + n176 + n177 + n178 + n179 + n180 + n181 + n182 + n183 + n232 + n233 + n234 + n235 + n236 + n237 + n238 + n239 + n240 + n241 + n63*n67*(pow(alpha, NP0*n0 - n101*n12)*n12*n65*n86/n97 + pow(alpha, n0*n18 - n101*n12)*n12*n53*n65/(n52*n98) + pow(alpha, n0*n18 - n101*n12)*n31*n48*n53/(n52*n98) + n92)/n145 + n63*n73*(pow(alpha, NP0*n0 - n101*n11)*n11*n65*n86/n97 + pow(alpha, n0*n18 - n101*n11)*n11*n53*n65/(n52*n98) + pow(alpha, n0*n18 - n101*n11)*n30*n48*n53/(n52*n98) + n91)/n144 + n63*n71*(pow(alpha, NP0*n0 - n10*n101)*n10*n65*n86/n97 + pow(alpha, n0*n18 - n10*n101)*n10*n53*n65/(n52*n98) + pow(alpha, n0*n18 - n10*n101)*n29*n48*n53/(n52*n98) + n93)/n143 + n63*n78*(pow(alpha, NP0*n0 - n101*n9)*n65*n86*n9/n97 + pow(alpha, n0*n18 - n101*n9)*n28*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n9)*n53*n65*n9/(n52*n98) + n95)/n142 + n63*n66*(pow(alpha, NP0*n0 - n101*n8)*n65*n8*n86/n97 + pow(alpha, n0*n18 - n101*n8)*n27*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n8)*n53*n65*n8/(n52*n98) + n22*n27*n41)/n141 + n56*n63*xF[4]*(pow(alpha, NP0*n0 - n101*n7)*n65*n7*n86/n97 + pow(alpha, n0*n18 - n101*n7)*n26*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n7)*n53*n65*n7/(n52*n98) + n89)/n140 + n63*n68*(pow(alpha, NP0*n0 - n101*n6)*n6*n65*n86/n97 + pow(alpha, n0*n18 - n101*n6)*n25*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n6)*n53*n6*n65/(n52*n98) + n94)/n139 + n63*n72*(pow(alpha, NP0*n0 - n101*n4)*n4*n65*n86/n97 + pow(alpha, n0*n18 - n101*n4)*n23*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n4)*n4*n53*n65/(n52*n98) + n96)/n137)) - n47*xTj*(n1*n156*n69 + n1*n160*n74 + n1*n162*n76 + n1*n163*n77 + n157*n82 + n158*n84 + n159*n83 + n161*n85 - n165*n212 + n166*n213 + n167*n70 + n168*n75 - n170*n207 - n216*n66 - n217*n72 - n218*n68 - n219*n71 - n220*n73 - n221*n67 - n193*n78/n142);
      NP_2a = -n47*(n14*n171*pow(n185, -n14)*n48*n87 - 1.0*n158*n90 - 2.0*n165*n185*n22*n87 + n165*n186*n90 + 1.0*xTj*(n0*n165*n33*n34*(pow(alpha, NP0*n0 - n0*n101)*n0*n1*n86/n97 + n84) + n14*n169*n209 + n14*n171*n197 + n14*n222*n71 + n14*n223*n68 + n14*n224*n73 + n14*n226*n67 + n14*n228*n72 + n14*n229*n78 + n14*n230 + n14*n202*n66/n151 + n156*n88 + n157*n92 + n158*n90 + n159*n91 + n160*n95 + n161*n93 + n162*n96 + n163*n89 + n164*n94 - n165*n214 + n166*n56*xF[4]*(pow(alpha, n0*n18 - n101*n7)*n26*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n7)*n53*n65*n7/(n52*n98) + n100*n115*n65 + n89) - n170*xF[2]*(pow(alpha, n0*n18 - n101*n5)*n24*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n5)*n5*n53*n65/(n52*n98) + n100*n121*n65 + n88) + n172 + n20*n82*(pow(alpha, NP0*n0 - n101*n12)*n1*n12*n86/n97 + n82)/n145 - n67*(pow(alpha, n0*n18 - n101*n12)*n12*n53*n65/(n52*n98) + pow(alpha, n0*n18 - n101*n12)*n31*n48*n53/(n52*n98) + n100*n113*n65 + n92)/n145 + n33*n80*xF[8]*(pow(alpha, NP0*n0 - n101*n11)*n1*n11*n86/n97 + n83)/n144 - n73*(pow(alpha, n0*n18 - n101*n11)*n11*n53*n65/(n52*n98) + pow(alpha, n0*n18 - n101*n11)*n30*n48*n53/(n52*n98) + n100*n114*n65 + n91)/n144 + n33*n79*xF[7]*(pow(alpha, NP0*n0 - n10*n101)*n1*n10*n86/n97 + n85)/n143 - n71*(pow(alpha, n0*n18 - n10*n101)*n10*n53*n65/(n52*n98) + pow(alpha, n0*n18 - n10*n101)*n29*n48*n53/(n52*n98) + n100*n117*n65 + n93)/n143 + n33*n74*xF[6]*(pow(alpha, NP0*n0 - n101*n9)*n1*n86*n9/n97 + n1*n74)/n142 - n78*(pow(alpha, n0*n18 - n101*n9)*n28*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n9)*n53*n65*n9/(n52*n98) + n100*n118*n65 + n95)/n142 + n33*n70*xF[5]*(pow(alpha, NP0*n0 - n101*n8)*n1*n8*n86/n97 + n1*n70)/n141 - n66*(pow(alpha, n0*n18 - n101*n8)*n27*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n8)*n53*n65*n8/(n52*n98) + n100*n119*n65 + n22*n27*n41)/n141 + n33*n77*xF[4]*(pow(alpha, NP0*n0 - n101*n7)*n1*n7*n86/n97 + n1*n77)/n140 + n33*n75*xF[3]*(pow(alpha, NP0*n0 - n101*n6)*n1*n6*n86/n97 + n1*n75)/n139 - n68*(pow(alpha, n0*n18 - n101*n6)*n25*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n6)*n53*n6*n65/(n52*n98) + n100*n116*n65 + n94)/n139 + n33*n69*xF[2]*(pow(alpha, NP0*n0 - n101*n5)*n1*n5*n86/n97 + n1*n69)/n138 + n33*n76*xF[1]*(pow(alpha, NP0*n0 - n101*n4)*n1*n4*n86/n97 + n1*n76)/n137 - n72*(pow(alpha, n0*n18 - n101*n4)*n23*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n4)*n4*n53*n65/(n52*n98) + n100*n112*n65 + n96)/n137));
      NP_sqrt_base = (-NP0*n262 - n19*(-n47*n49*xF[0]/(n49 - 1 + pow(alpha, -n0*(n64*(n99 - log(n36*n62/(n15 - xF[0]*xTj) + 1)) + 1))) - n47*n54*xF[2]/(n54 - 1 + pow(alpha, -n5*(n64*(n99 - log(n36*n62/(n15 - xF[0]*xTj) + 1)) + 1))) - n47*n56*xF[4]/(n56 - 1 + pow(alpha, -n7*(n64*(n99 - log(n36*n62/(n15 - xF[0]*xTj) + 1)) + 1))) - n47*n66/(n57 - 1 + pow(alpha, -n8*(n64*(n99 - log(n36*n62/(n15 - xF[0]*xTj) + 1)) + 1))) - n47*n67/(n61 - 1 + pow(alpha, -n12*(n64*(n99 - log(n36*n62/(n15 - xF[0]*xTj) + 1)) + 1))) - n47*n68/(n55 - 1 + pow(alpha, -n6*(n64*(n99 - log(n36*n62/(n15 - xF[0]*xTj) + 1)) + 1))) - n47*n71/(n59 - 1 + pow(alpha, -n10*(n64*(n99 - log(n36*n62/(n15 - xF[0]*xTj) + 1)) + 1))) - n47*n72/(n50 - 1 + pow(alpha, -n4*(n64*(n99 - log(n36*n62/(n15 - xF[0]*xTj) + 1)) + 1))) - n47*n73/(n60 - 1 + pow(alpha, -n11*(n64*(n99 - log(n36*n62/(n15 - xF[0]*xTj) + 1)) + 1))) - n47*n78/(n58 - 1 + pow(alpha, -n9*(n64*(n99 - log(n36*n62/(n15 - xF[0]*xTj) + 1)) + 1)))) - n49*n63*xF[0]/n126 - pow(NP0, -n14)*(1.0*n165*n187*n47*n84 + 0.5*n165*n215*n47 - n171*n243*n47 + 0.5*n174 - 0.5*n264*xTj))*(-n14*n19*(n165*n47*n49*(pow(alpha, NP0*n0 - n0*n101)*n21*n22*(-n15 + n17*n19)/(n35*n97) + n21*n34*n48) + n169*n63*xF[2]*(pow(alpha, NP0*n0 - n101*n5)*n1*n5*n86/n97 + n1*n69)*(pow(alpha, NP0*n0 - n101*n5)*n33*n5*n86/n97 + n33*n69) + n170*n47*xF[2]*(pow(alpha, NP0*n0 - n101*n5)*n0*n48*n5*n86/n97 + pow(alpha, n0*n18 - n101*n5)*n0*n48*n5*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n5)*n22*n24*n53/(n52*n98) + n24*n38*n48) + n171*n63*(pow(alpha, NP0*n0 - n0*n101)*n0*n1*n86/n97 + n84)*(pow(alpha, NP0*n0 - n0*n101)*n0*n33*n86/n97 + n0*n33*n34) + n174 + n175 + n176 + n177 + n178 + n179 + n180 + n181 + n182 + n183 + n232 + n233 + n234 + n235 + n236 + n237 + n238 + n239 + n240 + n241 + n63*n67*(pow(alpha, NP0*n0 - n101*n12)*n1*n12*n86/n97 + n82)*(pow(alpha, NP0*n0 - n101*n12)*n12*n33*n86/n97 + n12*n33*n45)/n155 + n63*n73*(pow(alpha, NP0*n0 - n101*n11)*n1*n11*n86/n97 + n83)*(pow(alpha, NP0*n0 - n101*n11)*n11*n33*n86/n97 + n33*n80)/n154 + n63*n71*(pow(alpha, NP0*n0 - n10*n101)*n1*n10*n86/n97 + n85)*(pow(alpha, NP0*n0 - n10*n101)*n10*n33*n86/n97 + n33*n79)/n153 + n63*n78*(pow(alpha, NP0*n0 - n101*n9)*n1*n86*n9/n97 + n1*n74)*(pow(alpha, NP0*n0 - n101*n9)*n33*n86*n9/n97 + n33*n74)/n152 + n63*n66*(pow(alpha, NP0*n0 - n101*n8)*n1*n8*n86/n97 + n1*n70)*(pow(alpha, NP0*n0 - n101*n8)*n33*n8*n86/n97 + n33*n70)/n151 + n56*n63*xF[4]*(pow(alpha, NP0*n0 - n101*n7)*n1*n7*n86/n97 + n1*n77)*(pow(alpha, NP0*n0 - n101*n7)*n33*n7*n86/n97 + n33*n77)/n150 + n63*n68*(pow(alpha, NP0*n0 - n101*n6)*n1*n6*n86/n97 + n1*n75)*(pow(alpha, NP0*n0 - n101*n6)*n33*n6*n86/n97 + n33*n75)/n149 + n63*n72*(pow(alpha, NP0*n0 - n101*n4)*n1*n4*n86/n97 + n1*n76)*(pow(alpha, NP0*n0 - n101*n4)*n33*n4*n86/n97 + n33*n76)/n147 + n63*n67*(pow(alpha, NP0*n0 - n101*n12)*n12*n65*n86/n97 + pow(alpha, n0*n18 - n101*n12)*n12*n53*n65/(n52*n98) + pow(alpha, n0*n18 - n101*n12)*n31*n48*n53/(n52*n98) + n92)/n145 + n63*n73*(pow(alpha, NP0*n0 - n101*n11)*n11*n65*n86/n97 + pow(alpha, n0*n18 - n101*n11)*n11*n53*n65/(n52*n98) + pow(alpha, n0*n18 - n101*n11)*n30*n48*n53/(n52*n98) + n91)/n144 + n63*n71*(pow(alpha, NP0*n0 - n10*n101)*n10*n65*n86/n97 + pow(alpha, n0*n18 - n10*n101)*n10*n53*n65/(n52*n98) + pow(alpha, n0*n18 - n10*n101)*n29*n48*n53/(n52*n98) + n93)/n143 + n47*n78*(pow(alpha, NP0*n0 - n101*n9)*n0*n48*n86*n9/n97 + pow(alpha, n0*n18 - n101*n9)*n0*n48*n53*n9/(n52*n98) + pow(alpha, n0*n18 - n101*n9)*n22*n28*n53/(n52*n98) + n28*n42*n48)/n142 + n63*n66*(pow(alpha, NP0*n0 - n101*n8)*n65*n8*n86/n97 + pow(alpha, n0*n18 - n101*n8)*n27*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n8)*n53*n65*n8/(n52*n98) + n22*n27*n41)/n141 + n56*n63*xF[4]*(pow(alpha, NP0*n0 - n101*n7)*n65*n7*n86/n97 + pow(alpha, n0*n18 - n101*n7)*n26*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n7)*n53*n65*n7/(n52*n98) + n89)/n140 + n63*n68*(pow(alpha, NP0*n0 - n101*n6)*n6*n65*n86/n97 + pow(alpha, n0*n18 - n101*n6)*n25*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n6)*n53*n6*n65/(n52*n98) + n94)/n139 + n63*n72*(pow(alpha, NP0*n0 - n101*n4)*n4*n65*n86/n97 + pow(alpha, n0*n18 - n101*n4)*n23*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n4)*n4*n53*n65/(n52*n98) + n96)/n137) + 4.0*n165*n187*n47*n84 + 2.0*n165*n215*n47 - 4.0*n171*n197*n47 + 2.0*n174) + pow(-n18*(0.5*n165*n47*n49*(pow(alpha, NP0*n0 - n0*n101)*n21*n22*(-n15 + n17*n19)/(n35*n97) + n21*n34*n48) + 1.0*n165*n47*n84*(pow(alpha, NP0*n0 - n0*n101)*n0*n1*n86/n97 + n84) - 0.5*n171*n47*(pow(alpha, NP0*n0 - n0*n101)*n0*n1*n86/n97 + n84)*(pow(alpha, NP0*n0 - n0*n101)*n0*n33*n86/n97 + n0*n33*n34) + n184 - 0.5*xTj*(n165*n47*n49*(pow(alpha, NP0*n0 - n0*n101)*n21*n22*(-n15 + n17*n19)/(n35*n97) + n21*n34*n48) + n169*n63*xF[2]*(pow(alpha, NP0*n0 - n101*n5)*n1*n5*n86/n97 + n1*n69)*(pow(alpha, NP0*n0 - n101*n5)*n33*n5*n86/n97 + n33*n69) + n170*n47*xF[2]*(pow(alpha, NP0*n0 - n101*n5)*n0*n48*n5*n86/n97 + pow(alpha, n0*n18 - n101*n5)*n0*n48*n5*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n5)*n22*n24*n53/(n52*n98) + n24*n38*n48) + n171*n63*(pow(alpha, NP0*n0 - n0*n101)*n0*n1*n86/n97 + n84)*(pow(alpha, NP0*n0 - n0*n101)*n0*n33*n86/n97 + n0*n33*n34) + n174 + n175 + n176 + n177 + n178 + n179 + n180 + n181 + n182 + n183 + n232 + n233 + n234 + n235 + n236 + n237 + n238 + n239 + n240 + n241 + n63*n67*(pow(alpha, NP0*n0 - n101*n12)*n1*n12*n86/n97 + n82)*(pow(alpha, NP0*n0 - n101*n12)*n12*n33*n86/n97 + n12*n33*n45)/n155 + n63*n73*(pow(alpha, NP0*n0 - n101*n11)*n1*n11*n86/n97 + n83)*(pow(alpha, NP0*n0 - n101*n11)*n11*n33*n86/n97 + n33*n80)/n154 + n63*n71*(pow(alpha, NP0*n0 - n10*n101)*n1*n10*n86/n97 + n85)*(pow(alpha, NP0*n0 - n10*n101)*n10*n33*n86/n97 + n33*n79)/n153 + n63*n78*(pow(alpha, NP0*n0 - n101*n9)*n1*n86*n9/n97 + n1*n74)*(pow(alpha, NP0*n0 - n101*n9)*n33*n86*n9/n97 + n33*n74)/n152 + n63*n66*(pow(alpha, NP0*n0 - n101*n8)*n1*n8*n86/n97 + n1*n70)*(pow(alpha, NP0*n0 - n101*n8)*n33*n8*n86/n97 + n33*n70)/n151 + n56*n63*xF[4]*(pow(alpha, NP0*n0 - n101*n7)*n1*n7*n86/n97 + n1*n77)*(pow(alpha, NP0*n0 - n101*n7)*n33*n7*n86/n97 + n33*n77)/n150 + n63*n68*(pow(alpha, NP0*n0 - n101*n6)*n1*n6*n86/n97 + n1*n75)*(pow(alpha, NP0*n0 - n101*n6)*n33*n6*n86/n97 + n33*n75)/n149 + n63*n72*(pow(alpha, NP0*n0 - n101*n4)*n1*n4*n86/n97 + n1*n76)*(pow(alpha, NP0*n0 - n101*n4)*n33*n4*n86/n97 + n33*n76)/n147 + n63*n67*(pow(alpha, NP0*n0 - n101*n12)*n12*n65*n86/n97 + pow(alpha, n0*n18 - n101*n12)*n12*n53*n65/(n52*n98) + pow(alpha, n0*n18 - n101*n12)*n31*n48*n53/(n52*n98) + n92)/n145 + n63*n73*(pow(alpha, NP0*n0 - n101*n11)*n11*n65*n86/n97 + pow(alpha, n0*n18 - n101*n11)*n11*n53*n65/(n52*n98) + pow(alpha, n0*n18 - n101*n11)*n30*n48*n53/(n52*n98) + n91)/n144 + n63*n71*(pow(alpha, NP0*n0 - n10*n101)*n10*n65*n86/n97 + pow(alpha, n0*n18 - n10*n101)*n10*n53*n65/(n52*n98) + pow(alpha, n0*n18 - n10*n101)*n29*n48*n53/(n52*n98) + n93)/n143 + n47*n78*(pow(alpha, NP0*n0 - n101*n9)*n0*n48*n86*n9/n97 + pow(alpha, n0*n18 - n101*n9)*n0*n48*n53*n9/(n52*n98) + pow(alpha, n0*n18 - n101*n9)*n22*n28*n53/(n52*n98) + n28*n42*n48)/n142 + n63*n66*(pow(alpha, NP0*n0 - n101*n8)*n65*n8*n86/n97 + pow(alpha, n0*n18 - n101*n8)*n27*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n8)*n53*n65*n8/(n52*n98) + n22*n27*n41)/n141 + n56*n63*xF[4]*(pow(alpha, NP0*n0 - n101*n7)*n65*n7*n86/n97 + pow(alpha, n0*n18 - n101*n7)*n26*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n7)*n53*n65*n7/(n52*n98) + n89)/n140 + n63*n68*(pow(alpha, NP0*n0 - n101*n6)*n6*n65*n86/n97 + pow(alpha, n0*n18 - n101*n6)*n25*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n6)*n53*n6*n65/(n52*n98) + n94)/n139 + n63*n72*(pow(alpha, NP0*n0 - n101*n4)*n4*n65*n86/n97 + pow(alpha, n0*n18 - n101*n4)*n23*n48*n53/(n52*n98) + pow(alpha, n0*n18 - n101*n4)*n4*n53*n65/(n52*n98) + n96)/n137)) - n262, -n14);
      NP_sqrt_base = fabs(NP_sqrt_base);
      NP1 = (-NP_b - sqrt(NP_sqrt_base))/NP_2a;
      NT1 = n64*(n99 - log(-pow(alpha, NP1*n0)*n86 + 1));
      g0 = MW[1] - Mstar;
      g1 = MW[0] - Mstar;
      g2 = NT1 + 1;
      g3 = xPj - xTj;
      g4 = MW[2] - Mstar;
      g5 = MW[3] - Mstar;
      g6 = MW[4] - Mstar;
      g7 = MW[5] - Mstar;
      g8 = MW[6] - Mstar;
      g9 = MW[7] - Mstar;
      g10 = MW[8] - Mstar;
      g11 = MW[9] - Mstar;
      g12 = xF[0] - xTj;
      g13 = xF[0] - xPj;
      g14 = -xTj;
      g15 = xPj/xF[1];
      g16 = pow(alpha, -g1);
      g17 = pow(alpha, -g0);
      g18 = pow(alpha, -g4);
      g19 = pow(alpha, -g5);
      g20 = pow(alpha, -g6);
      g21 = pow(alpha, -g7);
      g22 = pow(alpha, -g8);
      g23 = pow(alpha, -g9);
      g24 = pow(alpha, -g10);
      g25 = pow(alpha, -g11);
      g26 = log(xF[0]/xF[1]);
      g27 = -g2;
      g28 = pow(alpha, NP1*g0);
      g29 = pow(alpha, NP1*g1);
      g30 = log(g16);
      g31 = pow(alpha, NP1*g4);
      g32 = pow(alpha, NP1*g5);
      g33 = pow(alpha, NP1*g6);
      g34 = pow(alpha, NP1*g7);
      g35 = pow(alpha, NP1*g8);
      g36 = pow(alpha, NP1*g9);
      g37 = pow(alpha, NP1*g10);
      g38 = pow(alpha, NP1*g11);
      g39 = -g26;
      g40 = g12/g3;
      g41 = g3/g12;
      g42 = -g28 + 1;
      g43 = -g28 + 1;
      g44 = -g29 + 1;
      g45 = -g31 + 1;
      g46 = -g32 + 1;
      g47 = -g33 + 1;
      g48 = -g34 + 1;
      g49 = -g35 + 1;
      g50 = -g36 + 1;
      g51 = -g37 + 1;
      g52 = -g38 + 1;
      g53 = -g29;
      g54 = -g31;
      g55 = -g32;
      g56 = -g33;
      g57 = -g34;
      g58 = -g35;
      g59 = -g36;
      g60 = -g37;
      g61 = -g38;
      g62 = -1.0*g26;
      g63 = -g3/g13;
      g64 = g13/(g3*xF[1]);
      g65 = pow(alpha, g0*g27) - 1;
      g66 = pow(alpha, g0*g27) - 1;
      g67 = pow(alpha, g1*g27) - 1;
      g68 = pow(alpha, g27*g4) - 1;
      g69 = pow(alpha, g27*g5) - 1;
      g70 = pow(alpha, g27*g6) - 1;
      g71 = pow(alpha, g27*g7) - 1;
      g72 = pow(alpha, g27*g8) - 1;
      g73 = pow(alpha, g27*g9) - 1;
      g74 = pow(alpha, g10*g27) - 1;
      g75 = pow(alpha, g11*g27) - 1;
      g76 = -pow(alpha, g1*g27);
      g77 = -pow(alpha, g27*g4);
      g78 = -pow(alpha, g27*g5);
      g79 = -pow(alpha, g27*g6);
      g80 = -pow(alpha, g27*g7);
      g81 = -pow(alpha, g27*g8);
      g82 = -pow(alpha, g27*g9);
      g83 = -pow(alpha, g10*g27);
      g84 = -pow(alpha, g11*g27);
      g85 = g43 + g66;
      g86 = -g29 - g76;
      g87 = -g31 - g77;
      g88 = -g32 - g78;
      g89 = -g33 - g79;
      g90 = -g34 - g80;
      g91 = -g35 - g81;
      g92 = -g36 - g82;
      g93 = -g37 - g83;
      g94 = -g38 - g84;
      g95 = pow(alpha, g1*g27) + g53;
      g96 = g43 + g66;
      g97 = pow(alpha, g27*g4) + g54;
      g98 = pow(alpha, g27*g5) + g55;
      g99 = pow(alpha, g27*g6) + g56;
      g100 = pow(alpha, g27*g7) + g57;
      g101 = pow(alpha, g27*g8) + g58;
      g102 = pow(alpha, g27*g9) + g59;
      g103 = pow(alpha, g10*g27) + g60;
      g104 = pow(alpha, g11*g27) + g61;
      g105 = xF[9]/g104;
      g106 = xF[8]/g103;
      g107 = xF[1]/g96;
      g108 = xF[2]/g97;
      g109 = xF[3]/g98;
      g110 = xF[6]/g101;
      g111 = xF[7]/g102;
      g112 = xF[4]/g99;
      g113 = xF[5]/g100;
      g114 = xF[0]/g95;
      g115 = xF[1]/g85;
      g116 = xF[0]/g86;
      g117 = xF[9]/g94;
      g118 = xF[4]/g89;
      g119 = xF[5]/g90;
      g120 = xF[7]/g92;
      g121 = xF[2]/g87;
      g122 = xF[3]/g88;
      g123 = xF[6]/g91;
      g124 = xF[8]/g93;
      g125 = g49/g91;
      g126 = g52/g94;
      g127 = g47/g89;
      g128 = g50/g92;
      g129 = g44/g86;
      g130 = g48/g90;
      g131 = g46/g88;
      g132 = g42/g85;
      g133 = g45/g87;
      g134 = g51/g93;
      g135 = g65/g85;
      g136 = g67/g86;
      g137 = g71/g90;
      g138 = g68/g87;
      g139 = g69/g88;
      g140 = g70/g89;
      g141 = g74/g93;
      g142 = g75/g94;
      g143 = g72/g91;
      g144 = g73/g92;
      g145 = log(g14*g64*g96/g43);
      g146 = log(g14*g64*g85/g42);
      g147 = log(g15*g40*g96/g66);
      g148 = 1.0*g145;
      g149 = log(g15*g40*g85/g65);
      g150 = 1.0*g147;
      g151 = -g105*g148*(g61 + 1) - g105*g150*(pow(alpha, g11*g27) - 1) - g106*g148*(g60 + 1) - g106*g150*(pow(alpha, g10*g27) - 1) - g107*g148*g43 - g107*g150*g66 - g108*g148*(g54 + 1) - g108*g150*(pow(alpha, g27*g4) - 1) - g109*g148*(g55 + 1) - g109*g150*(pow(alpha, g27*g5) - 1) - g110*g148*(g58 + 1) - g110*g150*(pow(alpha, g27*g8) - 1) - g111*g148*(g59 + 1) - g111*g150*(pow(alpha, g27*g9) - 1) - g112*g148*(g56 + 1) - g112*g150*(pow(alpha, g27*g6) - 1) - g113*g148*(g57 + 1) - g113*g150*(pow(alpha, g27*g7) - 1) - g114*g148*(g53 + 1) - g114*g150*(pow(alpha, g1*g27) - 1) - g62*xF[0] - g62*xF[1] - g62*xF[2] - g62*xF[3] - g62*xF[4] - g62*xF[5] - g62*xF[6] - g62*xF[7] - g62*xF[8] - g62*xF[9];
      LpF = xF[0]*(g16 + 1.0)*(g129*g146 + g136*g149 + g39)/(g30*(g16 - 1.0)) + xF[1]*(g17 + 1.0)*(g132*g146 + g135*g149 + g39)/(g30*(g17 - 1.0)) + xF[2]*(g18 + 1.0)*(g133*g146 + g138*g149 + g39)/(g30*(g18 - 1.0)) + xF[3]*(g19 + 1.0)*(g131*g146 + g139*g149 + g39)/(g30*(g19 - 1.0)) + xF[4]*(g20 + 1.0)*(g127*g146 + g140*g149 + g39)/(g30*(g20 - 1.0)) + xF[5]*(g21 + 1.0)*(g130*g146 + g137*g149 + g39)/(g30*(g21 - 1.0)) + xF[6]*(g22 + 1.0)*(g125*g146 + g143*g149 + g39)/(g30*(g22 - 1.0)) + xF[7]*(g23 + 1.0)*(g128*g146 + g144*g149 + g39)/(g30*(g23 - 1.0)) + xF[8]*(g24 + 1.0)*(g134*g146 + g141*g149 + g39)/(g30*(g24 - 1.0)) + xF[9]*(g25 + 1.0)*(g126*g146 + g142*g149 + g39)/(g30*(g25 - 1.0));
      PpF = g40;
      TpF = -g13/g3;
      SWUpF = g151;
      SWUpP = g151*g41;
      xP[0] = g116*g41*g67;
      xP[1] = g115*g41*g65;
      xP[2] = g121*g41*g68;
      xP[3] = g122*g41*g69;
      xP[4] = g118*g41*g70;
      xP[5] = g119*g41*g71;
      xP[6] = g123*g41*g72;
      xP[7] = g120*g41*g73;
      xP[8] = g124*g41*g74;
      xP[9] = g117*g41*g75;
      xT[0] = g116*g44*g63;
      xT[1] = g115*g42*g63;
      xT[2] = g121*g45*g63;
      xT[3] = g122*g46*g63;
      xT[4] = g118*g47*g63;
      xT[5] = g119*g48*g63;
      xT[6] = g123*g49*g63;
      xT[7] = g120*g50*g63;
      xT[8] = g124*g51*g63;
      xT[9] = g117*g52*g63;
      break;
 
  };

  i = 2;
  casc.mat_prod.comp[j] = xP[0];
  casc.mat_prod.comp[k] = xP[1];
  casc.mat_tail.comp[j] = xT[0];
  casc.mat_tail.comp[k] = xT[1];
  for(pyne::comp_iter ci = casc.mat_feed.comp.begin(); ci != casc.mat_feed.comp.end(); ci++)
  {
    nuc = (*ci).first;
    if (nuc == j || nuc == k)
        continue;
    casc.mat_prod.comp[nuc] = xP[i];
    casc.mat_tail.comp[nuc] = xT[i];
    i++;
  };
  // must renormalize to eliminate numerical error
  casc.mat_prod.norm_comp();
  casc.mat_tail.norm_comp();
  casc.mat_prod.mass = PpF;
  casc.mat_tail.mass = TpF;

  casc.N = NP1;
  casc.M = NT1;
  casc.l_t_per_feed = LpF;
  casc.swu_per_feed = SWUpF;
  casc.swu_per_prod = SWUpP;

  delete [] MW;
  delete [] xP;
  delete [] xF;
  delete [] xT;

  return casc;
};
