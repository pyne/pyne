 
/*********************************************************/
/***            Symbolic Enrichment Functions          ***/
/*** WARNING: This file is auto-generated.             ***/
/***                  DO NOT MODIFY!!!                 ***/
/*********************************************************/
#include "enrichment_symbolic.h"

pyne::enrichment::Cascade pyne::enrichment::solve_symbolic(pyne::enrichment::Cascade & orig_casc)
{
  pyne::enrichment::Cascade casc = orig_casc;
  int j = casc.j;
  int k = casc.k;
  double alpha = casc.alpha;
  double NP0 = casc.N;
  //double NT0 = casc.M;
  double Mstar = casc.Mstar;
  double xPj = casc.x_prod_j;
  //double xFj = casc.x_feed_j;
  double xTj = casc.x_tail_j;
  int ncomp = casc.mat_feed.comp.size();
  double LpF = -1.0, PpF = -1.0, TpF = -1.0, 
         SWUpF = -1.0, SWUpP = -1.0, 
         NP1 = -1.0, NT1 = -1.0;
  double * MW = new double [ncomp];
  double * xP = new double [ncomp];
  double * xF = new double [ncomp];
  double * xT = new double [ncomp];
  double n38 = 0.0,
         n39 = 0.0,
         n30 = 0.0,
         n31 = 0.0,
         n32 = 0.0,
         n33 = 0.0,
         n34 = 0.0,
         n35 = 0.0,
         n36 = 0.0,
         n37 = 0.0,
         g7 = 0.0,
         g6 = 0.0,
         g5 = 0.0,
         g4 = 0.0,
         g3 = 0.0,
         g2 = 0.0,
         g1 = 0.0,
         g0 = 0.0,
         g9 = 0.0,
         g8 = 0.0,
         n85 = 0.0,
         n84 = 0.0,
         n87 = 0.0,
         n86 = 0.0,
         n81 = 0.0,
         n80 = 0.0,
         n83 = 0.0,
         n82 = 0.0,
         n89 = 0.0,
         n88 = 0.0,
         n129 = 0.0,
         n128 = 0.0,
         n125 = 0.0,
         n124 = 0.0,
         n127 = 0.0,
         n126 = 0.0,
         n121 = 0.0,
         n120 = 0.0,
         n123 = 0.0,
         n122 = 0.0,
         n12 = 0.0,
         n13 = 0.0,
         n10 = 0.0,
         n11 = 0.0,
         n16 = 0.0,
         n17 = 0.0,
         n14 = 0.0,
         n15 = 0.0,
         n18 = 0.0,
         n19 = 0.0,
         g26 = 0.0,
         g27 = 0.0,
         g24 = 0.0,
         g25 = 0.0,
         g22 = 0.0,
         g23 = 0.0,
         g20 = 0.0,
         g21 = 0.0,
         g28 = 0.0,
         g29 = 0.0,
         g100 = 0.0,
         g101 = 0.0,
         g102 = 0.0,
         g103 = 0.0,
         g104 = 0.0,
         g105 = 0.0,
         g106 = 0.0,
         g107 = 0.0,
         g108 = 0.0,
         g109 = 0.0,
         g53 = 0.0,
         g52 = 0.0,
         g51 = 0.0,
         g50 = 0.0,
         g57 = 0.0,
         g56 = 0.0,
         g55 = 0.0,
         g54 = 0.0,
         n143 = 0.0,
         n142 = 0.0,
         g59 = 0.0,
         g58 = 0.0,
         n147 = 0.0,
         n146 = 0.0,
         n145 = 0.0,
         n144 = 0.0,
         n74 = 0.0,
         n75 = 0.0,
         n76 = 0.0,
         n77 = 0.0,
         n70 = 0.0,
         n71 = 0.0,
         n72 = 0.0,
         n73 = 0.0,
         n109 = 0.0,
         n78 = 0.0,
         n79 = 0.0,
         g75 = 0.0,
         g74 = 0.0,
         g77 = 0.0,
         g76 = 0.0,
         g71 = 0.0,
         g70 = 0.0,
         g73 = 0.0,
         g72 = 0.0,
         g79 = 0.0,
         g78 = 0.0,
         n58 = 0.0,
         n59 = 0.0,
         n56 = 0.0,
         n57 = 0.0,
         n54 = 0.0,
         n55 = 0.0,
         n52 = 0.0,
         n53 = 0.0,
         n50 = 0.0,
         n51 = 0.0,
         n149 = 0.0,
         n114 = 0.0,
         n115 = 0.0,
         n116 = 0.0,
         n117 = 0.0,
         n110 = 0.0,
         n111 = 0.0,
         n112 = 0.0,
         n113 = 0.0,
         n118 = 0.0,
         n119 = 0.0,
         n29 = 0.0,
         n28 = 0.0,
         n23 = 0.0,
         n22 = 0.0,
         n21 = 0.0,
         n20 = 0.0,
         n27 = 0.0,
         n26 = 0.0,
         n25 = 0.0,
         n24 = 0.0,
         n140 = 0.0,
         g19 = 0.0,
         g18 = 0.0,
         g17 = 0.0,
         g16 = 0.0,
         g15 = 0.0,
         g14 = 0.0,
         g13 = 0.0,
         g12 = 0.0,
         g11 = 0.0,
         g10 = 0.0,
         n148 = 0.0,
         g84 = 0.0,
         g85 = 0.0,
         g86 = 0.0,
         g87 = 0.0,
         g80 = 0.0,
         g81 = 0.0,
         g82 = 0.0,
         g83 = 0.0,
         g88 = 0.0,
         g89 = 0.0,
         n132 = 0.0,
         n133 = 0.0,
         n130 = 0.0,
         n131 = 0.0,
         n136 = 0.0,
         n137 = 0.0,
         n134 = 0.0,
         n135 = 0.0,
         n138 = 0.0,
         n139 = 0.0,
         g31 = 0.0,
         g30 = 0.0,
         g33 = 0.0,
         g32 = 0.0,
         g35 = 0.0,
         g34 = 0.0,
         g37 = 0.0,
         g36 = 0.0,
         g39 = 0.0,
         g38 = 0.0,
         n98 = 0.0,
         n99 = 0.0,
         n92 = 0.0,
         n93 = 0.0,
         n90 = 0.0,
         n91 = 0.0,
         n96 = 0.0,
         n97 = 0.0,
         n94 = 0.0,
         n95 = 0.0,
         n150 = 0.0,
         n151 = 0.0,
         n152 = 0.0,
         n153 = 0.0,
         n67 = 0.0,
         n66 = 0.0,
         n65 = 0.0,
         n64 = 0.0,
         n63 = 0.0,
         n62 = 0.0,
         n61 = 0.0,
         n60 = 0.0,
         n69 = 0.0,
         n68 = 0.0,
         n141 = 0.0,
         g110 = 0.0,
         n7 = 0.0,
         g40 = 0.0,
         g41 = 0.0,
         g42 = 0.0,
         g43 = 0.0,
         g44 = 0.0,
         g45 = 0.0,
         g46 = 0.0,
         g47 = 0.0,
         g48 = 0.0,
         g49 = 0.0,
         n49 = 0.0,
         n48 = 0.0,
         n41 = 0.0,
         n40 = 0.0,
         n43 = 0.0,
         n42 = 0.0,
         n45 = 0.0,
         n44 = 0.0,
         n47 = 0.0,
         n46 = 0.0,
         n8 = 0.0,
         n9 = 0.0,
         g68 = 0.0,
         g69 = 0.0,
         g62 = 0.0,
         g63 = 0.0,
         g60 = 0.0,
         g61 = 0.0,
         g66 = 0.0,
         g67 = 0.0,
         g64 = 0.0,
         g65 = 0.0,
         g97 = 0.0,
         g96 = 0.0,
         g95 = 0.0,
         g94 = 0.0,
         g93 = 0.0,
         g92 = 0.0,
         g91 = 0.0,
         g90 = 0.0,
         g99 = 0.0,
         g98 = 0.0,
         n107 = 0.0,
         n106 = 0.0,
         n105 = 0.0,
         n104 = 0.0,
         n103 = 0.0,
         n102 = 0.0,
         n101 = 0.0,
         n100 = 0.0,
         n0 = 0.0,
         n1 = 0.0,
         n2 = 0.0,
         n3 = 0.0,
         n4 = 0.0,
         n5 = 0.0,
         n6 = 0.0,
         n108 = 0.0;
 
  int nuc;
  int i = 2;
  MW[0] = pyne::atomic_mass(j);
  MW[1] = pyne::atomic_mass(k);
  xF[0] = casc.mat_feed.comp[j];
  xF[1] = casc.mat_feed.comp[k];
  for(pyne::comp_iter ci = casc.mat_feed.comp.begin(); ci != casc.mat_feed.comp.end(); ci++)
  {
    nuc = (*ci).first;
    if (nuc == j || nuc == k)
        continue;
    MW[i] = pyne::atomic_mass(nuc);
    xF[i] = (*ci).second;
    i++;
  };

  switch (ncomp)
  {
    case 3:
      n0 = -0.500000000000000;
      n1 = -2.00000000000000;
      n2 = MW[0] - Mstar;
      n3 = log(alpha);
      n4 = xPj - xTj;
      n5 = MW[1] - Mstar;
      n6 = xF[0] - xPj;
      n7 = MW[2] - Mstar;
      n8 = log(xTj);
      n9 = xF[0]*xPj;
      n10 = -Mstar;
      n11 = -MW[0];
      n12 = -xTj;
      n13 = -NP0*n1;
      n14 = pow(n2, -n1);
      n15 = pow(n3, -n1);
      n16 = pow(n5, -n1);
      n17 = pow(n7, -n1);
      n18 = Mstar*n3;
      n19 = -n1*n3;
      n20 = -n3;
      n21 = pow(alpha, NP0*n2);
      n22 = n12*xF[0] + n9;
      n23 = n12*xPj + n9;
      n24 = pow(alpha, NP0*n5);
      n25 = pow(alpha, NP0*n7);
      n26 = n11*n3;
      n27 = n4/n6;
      n28 = pow(alpha, n13*n2);
      n29 = pow(n23, -n1);
      n30 = -n21 + 1;
      n31 = -n24 + 1;
      n32 = -n25 + 1;
      n33 = n30;
      n34 = -n31;
      n35 = -n21;
      n36 = -n24;
      n37 = -n25;
      n38 = 1/(n2*n3);
      n39 = n21*n5;
      n40 = n24*n5;
      n41 = n30*xF[0];
      n42 = n2*n21;
      n43 = n25*n7;
      n44 = log((-1.0 + xPj/xF[0])/n4);
      n45 = n43*xF[2];
      n46 = n42*xF[0];
      n47 = -n32*xF[2];
      n48 = n3*n42;
      n49 = n3*n40;
      n50 = n3*n43;
      n51 = n23/n22;
      n52 = n15*n17*n25;
      n53 = n14*n15*n21;
      n54 = n15*n16*n24;
      n55 = n14*n15*n28;
      n56 = n35*n51 + 1;
      n57 = -n21*n51 + 1;
      n58 = n18 + n26 + n44 + n8;
      n59 = n3/n57;
      n60 = n21/n56;
      n61 = n15*n28*n29/(pow(n22, 2)*pow(n56, 2));
      n62 = n38*(n58 - log(n56)) + 1;
      n63 = n38*(n58 - log(n57)) + 1;
      n64 = pow(alpha, n2*n62);
      n65 = pow(alpha, n5*n62);
      n66 = pow(alpha, n62*n7);
      n67 = pow(alpha, -n2*n63);
      n68 = -1/n66;
      n69 = -1/n65;
      n70 = n7/n66;
      n71 = n2*n70;
      n72 = n30 - 1 + 1.0/n64;
      n73 = n31 - 1 + 1.0/n65;
      n74 = n32 - 1 + 1.0/n66;
      n75 = n72;
      n76 = -n34 - n69 - 1;
      n77 = n32 - n68 - 1;
      n78 = pow(n72, 3);
      n79 = pow(n73, 3);
      n80 = pow(n74, 3);
      n81 = xF[1]/n73;
      n82 = xF[2]/n74;
      n83 = n81/n73;
      n84 = xF[1]/n79;
      n85 = n33/pow(n75, 2);
      n86 = 1/(n56*n65);
      n87 = 1/(n56*n64);
      n88 = n67/n57;
      n89 = n53*xF[0]/n72;
      n90 = n27*n3*n46/n72;
      n91 = n51*n87 + 1;
      n92 = n48*n51*n87 + n48;
      n93 = n3*n39*n51*n86 + n49;
      n94 = n3*n51*n60*n70 + n50;
      n95 = pow(n92, -n1);
      n96 = n19*n42*n51*n87 + n19*n42;
      n97 = n51*n53*n87 + n53;
      n98 = n91/pow(n72, 2);
      n99 = n94/pow(n74, 2);
      n100 = n92/pow(n72, 2);
      n101 = n95/n78;
      n102 = n41*n97/pow(n72, 2);
      n103 = -n100*n27*n41;
      n104 = n103 + n90;
      n105 = n41*n92*n96/n78;
      n106 = n15*n42*n51*n70/n56 + n17*n61*n68 + n52 + n61*n71;
      n107 = n104 + n27*n3*n45/n74 + n27*n34*n83*n93 + n27*n47*n99 + n27*n49*n81;
      n108 = -n102*n27 - n105*n27 + n19*n27*n40*n83*(pow(alpha, NP0*n2 - n5*n62)*n3*n5*n51/n56 + n49) + n19*n27*n45*(pow(alpha, NP0*n2 - n62*n7)*n3*n51*n7/n56 + n50)/pow(n74, 2) + n19*n27*n46*(pow(alpha, NP0*n2 - n2*n62)*n2*n3*n51/n56 + n48)/pow(n72, 2) + n27*n34*n83*(-pow(alpha, n13*n2 - n5*n62)*n15*n16*n29/(pow(n22, 2)*pow(n56, 2)) + pow(alpha, n13*n2 - n5*n62)*n15*n2*n29*n5/(pow(n22, 2)*pow(n56, 2)) + n15*n2*n39*n51*n86 + n54) + n27*n34*n84*n93*(n19*n39*n51*n86 + n19*n40) + n27*n47*n94*(n19*n43 + n19*n51*n60*n70)/n80 + n27*n47*(-pow(alpha, n13*n2 - n62*n7)*n15*n17*n29/(pow(n22, 2)*pow(n56, 2)) + pow(alpha, n13*n2 - n62*n7)*n15*n2*n29*n7/(pow(n22, 2)*pow(n56, 2)) + n15*n42*n51*n70/n56 + n52)/pow(n74, 2) + n27*n52*n82 + n27*n54*n81 + n27*n89;
      NP1 = -(n13*(n0*n102*n27 - n0*n12*(n19*n27*n40*n83*(pow(alpha, NP0*n2 - n5*n62)*n3*n5*n51/n56 + n49) + n19*n27*n45*(pow(alpha, NP0*n2 - n62*n7)*n3*n51*n7/n56 + n50)/pow(n74, 2) + n19*n27*n46*(pow(alpha, NP0*n2 - n2*n62)*n2*n3*n51/n56 + n48)/pow(n72, 2) + n27*n34*n83*(pow(alpha, NP0*n2 - n5*n62)*n15*n2*n5*n51/n56 - pow(alpha, -NP0*n1*n2 - n5*n62)*n15*n16*n29/(pow(n22, 2)*pow(n56, 2)) + pow(alpha, -NP0*n1*n2 - n5*n62)*n15*n2*n29*n5/(pow(n22, 2)*pow(n56, 2)) + n54) + n27*n34*n84*(pow(alpha, NP0*n2 - n5*n62)*n19*n5*n51/n56 + n19*n40)*(pow(alpha, NP0*n2 - n5*n62)*n3*n5*n51/n56 + n49) - n27*n41*(pow(alpha, NP0*n2 - n2*n62)*n19*n2*n51/n56 + n19*n42)*(pow(alpha, NP0*n2 - n2*n62)*n2*n3*n51/n56 + n48)/n78 - n27*n41*(pow(alpha, NP0*n2 - n2*n62)*n14*n15*n51/n56 + n53)/pow(n72, 2) + n27*n47*(pow(alpha, NP0*n2 - n62*n7)*n19*n51*n7/n56 + n19*n43)*(pow(alpha, NP0*n2 - n62*n7)*n3*n51*n7/n56 + n50)/n80 + n27*n47*(pow(alpha, NP0*n2 - n62*n7)*n15*n2*n51*n7/n56 - pow(alpha, -NP0*n1*n2 - n62*n7)*n15*n17*n29/(pow(n22, 2)*pow(n56, 2)) + pow(alpha, -NP0*n1*n2 - n62*n7)*n15*n2*n29*n7/(pow(n22, 2)*pow(n56, 2)) + n52)/pow(n74, 2) + n27*n52*n82 + n27*n54*n81 + n27*n89) - n0*n27*n89 - 1.0*n101*n27*n41 + 1.0*n90*n92/n72) + n20*n27*n46/n75 + n27*n3*n46*n85*(n51*n88 + 1) + n27*xTj*(n3*n45/n77 + n3*n46/n75 - n32*xF[2]*(n50 + pow(alpha, -n63*n7)*n21*n51*n59*n7)/pow(n77, 2) + n34*xF[1]*(n49 + pow(alpha, -n5*n63)*n39*n51*n59)/pow(n76, 2) + n49*xF[1]/n76 - n85*xF[0]*(n48*n51*n88 + n48)) - pow((NP0*(n104 + n12*(n27*n3*n45/n74 + n27*n34*n83*(pow(alpha, NP0*n2 - n5*n62)*n3*n5*n51/n56 + n49) - n27*n41*(pow(alpha, NP0*n2 - n2*n62)*n2*n3*n51/n56 + n48)/pow(n72, 2) + n27*n47*(pow(alpha, NP0*n2 - n62*n7)*n3*n51*n7/n56 + n50)/pow(n74, 2) + n27*n49*n81 + n90)) + n27*n41/n72 + xTj*(n27*n34*n81 - n27*n41/n72 + n27*n47/n74) + pow(NP0, -n1)*(-n0*n102*n27 - n0*n105*n27 + n0*n12*(n19*n27*n40*n83*(pow(alpha, NP0*n2 - n5*n62)*n3*n5*n51/n56 + n49) + n19*n27*n45*(pow(alpha, NP0*n2 - n62*n7)*n3*n51*n7/n56 + n50)/pow(n74, 2) + n19*n27*n46*(pow(alpha, NP0*n2 - n2*n62)*n2*n3*n51/n56 + n48)/pow(n72, 2) + n27*n34*n83*(pow(alpha, NP0*n2 - n5*n62)*n15*n2*n5*n51/n56 - pow(alpha, n13*n2 - n5*n62)*n15*n16*n29/(pow(n22, 2)*pow(n56, 2)) + pow(alpha, n13*n2 - n5*n62)*n15*n2*n29*n5/(pow(n22, 2)*pow(n56, 2)) + n54) + n27*n34*n84*(pow(alpha, NP0*n2 - n5*n62)*n19*n5*n51/n56 + n19*n40)*(pow(alpha, NP0*n2 - n5*n62)*n3*n5*n51/n56 + n49) - n27*n41*(pow(alpha, NP0*n2 - n2*n62)*n19*n2*n51/n56 + n19*n42)*(pow(alpha, NP0*n2 - n2*n62)*n2*n3*n51/n56 + n48)/n78 - n27*n41*(pow(alpha, NP0*n2 - n2*n62)*n14*n15*n51/n56 + n53)/pow(n72, 2) + n27*n47*(pow(alpha, NP0*n2 - n62*n7)*n19*n51*n7/n56 + n19*n43)*(pow(alpha, NP0*n2 - n62*n7)*n3*n51*n7/n56 + n50)/n80 + n27*n47*(pow(alpha, NP0*n2 - n62*n7)*n15*n2*n51*n7/n56 - pow(alpha, n13*n2 - n62*n7)*n15*n17*n29/(pow(n22, 2)*pow(n56, 2)) + pow(alpha, n13*n2 - n62*n7)*n15*n2*n29*n7/(pow(n22, 2)*pow(n56, 2)) + n52)/pow(n74, 2) + n27*n52*n82 + n27*n54*n81 + n27*n89) + n0*n27*n89 - 1.0*n90*n92/n72))*(n1*n102*n27 + n1*n105*n27 - n1*n12*(n19*n27*n40*n83*(pow(alpha, NP0*n2 - n5*n62)*n3*n5*n51/n56 + n49) + n19*n27*n45*(pow(alpha, NP0*n2 - n62*n7)*n3*n51*n7/n56 + n50)/pow(n74, 2) + n19*n27*n46*(pow(alpha, NP0*n2 - n2*n62)*n2*n3*n51/n56 + n48)/pow(n72, 2) + n27*n34*n83*(pow(alpha, NP0*n2 - n5*n62)*n15*n2*n5*n51/n56 - pow(alpha, n13*n2 - n5*n62)*n15*n16*n29/(pow(n22, 2)*pow(n56, 2)) + pow(alpha, n13*n2 - n5*n62)*n15*n2*n29*n5/(pow(n22, 2)*pow(n56, 2)) + n54) + n27*n34*n84*(pow(alpha, NP0*n2 - n5*n62)*n19*n5*n51/n56 + n19*n40)*(pow(alpha, NP0*n2 - n5*n62)*n3*n5*n51/n56 + n49) - n27*n41*(pow(alpha, NP0*n2 - n2*n62)*n19*n2*n51/n56 + n19*n42)*(pow(alpha, NP0*n2 - n2*n62)*n2*n3*n51/n56 + n48)/n78 - n27*n41*(pow(alpha, NP0*n2 - n2*n62)*n14*n15*n51/n56 + n53)/pow(n72, 2) + n27*n47*(pow(alpha, NP0*n2 - n62*n7)*n19*n51*n7/n56 + n19*n43)*(pow(alpha, NP0*n2 - n62*n7)*n3*n51*n7/n56 + n50)/n80 + n27*n47*(pow(alpha, NP0*n2 - n62*n7)*n15*n2*n51*n7/n56 - pow(alpha, n13*n2 - n62*n7)*n15*n17*n29/(pow(n22, 2)*pow(n56, 2)) + pow(alpha, n13*n2 - n62*n7)*n15*n2*n29*n7/(pow(n22, 2)*pow(n56, 2)) + n52)/pow(n74, 2) + n27*n52*n82 + n27*n54*n81 + n27*n89) - n1*n27*n89 + 4.0*n90*n92/n72) + pow(-n100*n27*n41 - n107*xTj - n13*(n0*n14*n15*n27*n35*xF[0]/n72 + n0*n27*n41*(pow(alpha, NP0*n2 - n2*n62)*n19*n2*n51/n56 + n19*n42)*(pow(alpha, NP0*n2 - n2*n62)*n2*n3*n51/n56 + n48)/n78 + n0*n27*n41*(pow(alpha, NP0*n2 - n2*n62)*n14*n15*n51/n56 + n53)/pow(n72, 2) + n0*xTj*(n19*n27*n40*n83*(pow(alpha, NP0*n2 - n5*n62)*n3*n5*n51/n56 + n49) + n19*n27*n45*(pow(alpha, NP0*n2 - n62*n7)*n3*n51*n7/n56 + n50)/pow(n74, 2) + n19*n27*n46*(pow(alpha, NP0*n2 - n2*n62)*n2*n3*n51/n56 + n48)/pow(n72, 2) + n27*n34*n83*(pow(alpha, NP0*n2 - n5*n62)*n15*n2*n5*n51/n56 - pow(alpha, n13*n2 - n5*n62)*n15*n16*n29/(pow(n22, 2)*pow(n56, 2)) + pow(alpha, n13*n2 - n5*n62)*n15*n2*n29*n5/(pow(n22, 2)*pow(n56, 2)) + n54) + n27*n34*n84*(pow(alpha, NP0*n2 - n5*n62)*n19*n5*n51/n56 + n19*n40)*(pow(alpha, NP0*n2 - n5*n62)*n3*n5*n51/n56 + n49) - n27*n41*(pow(alpha, NP0*n2 - n2*n62)*n19*n2*n51/n56 + n19*n42)*(pow(alpha, NP0*n2 - n2*n62)*n2*n3*n51/n56 + n48)/n78 - n27*n41*(pow(alpha, NP0*n2 - n2*n62)*n14*n15*n51/n56 + n53)/pow(n72, 2) + n27*n47*(pow(alpha, NP0*n2 - n62*n7)*n19*n51*n7/n56 + n19*n43)*(pow(alpha, NP0*n2 - n62*n7)*n3*n51*n7/n56 + n50)/n80 + n27*n47*(pow(alpha, NP0*n2 - n62*n7)*n15*n2*n51*n7/n56 - pow(alpha, n13*n2 - n62*n7)*n15*n17*n29/(pow(n22, 2)*pow(n56, 2)) + pow(alpha, n13*n2 - n62*n7)*n15*n2*n29*n7/(pow(n22, 2)*pow(n56, 2)) + n52)/pow(n74, 2) + n27*n52*n82 + n27*n54*n81 + n27*n89) + 1.0*n90*(pow(alpha, NP0*n2 - n2*n62)*n2*n3*n51/n56 + n48)/n72) - n20*n27*n46/n72, -n1), -n0))/(n27*(-n1*n41*n55*pow(n91, -n1)/n78 + n1*n55*n98*xF[0] + n41*n53*n98 - 1.0*n89 + 1.0*xTj*(-2*n101*n41 - n102 + n19*n40*n83*(pow(alpha, NP0*n2 - n5*n62)*n3*n5*n51/n56 + n49) + n19*n45*(pow(alpha, NP0*n2 - n62*n7)*n3*n51*n7/n56 + n50)/pow(n74, 2) + n19*n46*(pow(alpha, NP0*n2 - n2*n62)*n2*n3*n51/n56 + n48)/pow(n72, 2) - 2*n31*n84*pow(n93, -n1) - 2*n32*pow(n94, -n1)*xF[2]/n80 + n34*n83*(-pow(alpha, n13*n2 - n5*n62)*n15*n16*n29/(pow(n22, 2)*pow(n56, 2)) + pow(alpha, n13*n2 - n5*n62)*n15*n2*n29*n5/(pow(n22, 2)*pow(n56, 2)) + n15*n2*n39*n51*n86 + n54) + n47*(-pow(alpha, n13*n2 - n62*n7)*n15*n17*n29/(pow(n22, 2)*pow(n56, 2)) + pow(alpha, n13*n2 - n62*n7)*n15*n2*n29*n7/(pow(n22, 2)*pow(n56, 2)) + n15*n42*n51*n70/n56 + n52)/pow(n74, 2) + n52*n82 + n54*n81 + n89)));
      NT1 = n38*(n58 - log(-pow(alpha, NP1*n2)*n51 + 1));
      g0 = MW[1] - Mstar;
      g1 = MW[0] - Mstar;
      g2 = NT1 + 1;
      g3 = xPj - xTj;
      g4 = MW[2] - Mstar;
      g5 = xF[0] - xTj;
      g6 = xF[0] - xPj;
      g7 = -xTj;
      g8 = xPj/xF[1];
      g9 = pow(alpha, -g1);
      g10 = pow(alpha, -g0);
      g11 = pow(alpha, -g4);
      g12 = log(xF[0]/xF[1]);
      g13 = -g2;
      g14 = pow(alpha, NP1*g0);
      g15 = pow(alpha, NP1*g1);
      g16 = log(g9);
      g17 = pow(alpha, NP1*g4);
      g18 = -g12;
      g19 = g3/g5;
      g20 = g5/g3;
      g21 = -g14 + 1;
      g22 = -g14 + 1;
      g23 = -g15 + 1;
      g24 = -g17 + 1;
      g25 = -g15;
      g26 = -g17;
      g27 = -1.0*g12;
      g28 = -g3/g6;
      g29 = pow(alpha, g0*g13) - 1;
      g30 = pow(alpha, g0*g13) - 1;
      g31 = pow(alpha, g1*g13) - 1;
      g32 = pow(alpha, g13*g4) - 1;
      g33 = -pow(alpha, g1*g13);
      g34 = -pow(alpha, g13*g4);
      g35 = g6*g7/(g3*xF[1]);
      g36 = g22 + g30;
      g37 = -g15 - g33;
      g38 = -g17 - g34;
      g39 = pow(alpha, g1*g13) + g25;
      g40 = g22 + g30;
      g41 = pow(alpha, g13*g4) + g26;
      g42 = xF[1]/g40;
      g43 = xF[2]/g41;
      g44 = xF[0]/g39;
      g45 = xF[2]/g38;
      g46 = xF[1]/g36;
      g47 = xF[0]/g37;
      g48 = g23/g37;
      g49 = g21/g36;
      g50 = g24/g38;
      g51 = g32/g38;
      g52 = g29/g36;
      g53 = g31/g37;
      g54 = log(g35*g40/g22);
      g55 = log(g35*g36/g21);
      g56 = log(g20*g40*g8/g30);
      g57 = 1.0*g54;
      g58 = log(g20*g36*g8/g29);
      g59 = 1.0*g56;
      g60 = -g22*g42*g57 - g27*xF[0] - g27*xF[1] - g27*xF[2] - g30*g42*g59 - g43*g57*(g26 + 1) - g43*g59*(pow(alpha, g13*g4) - 1) - g44*g57*(g25 + 1) - g44*g59*(pow(alpha, g1*g13) - 1);
      LpF = xF[0]*(g9 + 1.0)*(g18 + g48*g55 + g53*g58)/(g16*(g9 - 1.0)) + xF[1]*(g10 + 1.0)*(g18 + g49*g55 + g52*g58)/(g16*(g10 - 1.0)) + xF[2]*(g11 + 1.0)*(g18 + g50*g55 + g51*g58)/(g16*(g11 - 1.0));
      PpF = g20;
      TpF = -g6/g3;
      SWUpF = g60;
      SWUpP = g19*g60;
      xP[0] = g19*g31*g47;
      xP[1] = g19*g29*g46;
      xP[2] = g19*g32*g45;
      xT[0] = g23*g28*g47;
      xT[1] = g21*g28*g46;
      xT[2] = g24*g28*g45;
      break;
    case 4:
      n0 = -0.500000000000000;
      n1 = MW[0] - Mstar;
      n2 = log(alpha);
      n3 = xPj - xTj;
      n4 = MW[1] - Mstar;
      n5 = xF[0] - xPj;
      n6 = MW[2] - Mstar;
      n7 = MW[3] - Mstar;
      n8 = log(xTj);
      n9 = xF[0]*xPj;
      n10 = -Mstar;
      n11 = -MW[0];
      n12 = -xF[0];
      n13 = -xPj;
      n14 = 2*NP0;
      n15 = n0*n12;
      n16 = 2.0*xF[0];
      n17 = -xTj;
      n18 = pow(n1, 2);
      n19 = pow(n2, 2);
      n20 = pow(n4, 2);
      n21 = pow(n6, 2);
      n22 = pow(n7, 2);
      n23 = Mstar*n2;
      n24 = 2*n2;
      n25 = n2*xF[0];
      n26 = pow(alpha, NP0*n1);
      n27 = n12*xTj + n9;
      n28 = n13*xTj + n9;
      n29 = pow(alpha, NP0*n4);
      n30 = pow(alpha, NP0*n6);
      n31 = pow(alpha, NP0*n7);
      n32 = n11*n2;
      n33 = n3/n5;
      n34 = n2*n4;
      n35 = n1*n2;
      n36 = pow(alpha, n1*n14);
      n37 = pow(n27, 2);
      n38 = pow(n28, 2);
      n39 = -n26 + 1;
      n40 = -n29 + 1;
      n41 = -n30 + 1;
      n42 = -n31 + 1;
      n43 = n39;
      n44 = -n26;
      n45 = -n30;
      n46 = 1.0/n35;
      n47 = n1*n19;
      n48 = n31*n7;
      n49 = n41*xF[2];
      n50 = n1*n26;
      n51 = n29*n4;
      n52 = n30*n6;
      n53 = n18*n19;
      n54 = log((-1.0 + xPj/xF[0])/n3);
      n55 = -n42*xF[3];
      n56 = n52*xF[2];
      n57 = -n40*xF[1];
      n58 = n26/n46;
      n59 = n29*n34;
      n60 = n2*n52;
      n61 = n2*n48;
      n62 = n28/n27;
      n63 = n19*n21*n30;
      n64 = n26*n53;
      n65 = n19*n20*n29;
      n66 = n19*n22*n31;
      n67 = n26*n62;
      n68 = n44*n62 + 1;
      n69 = -n67 + 1;
      n70 = pow(n68, 2);
      n71 = n23 + n32 + n54 + n8;
      n72 = n67/n68;
      n73 = n19*n36*n38/(n37*n70);
      n74 = n46*(n71 - log(n68)) + 1;
      n75 = n46*(n71 - log(n69)) + 1;
      n76 = pow(alpha, n1*n74);
      n77 = pow(alpha, n4*n74);
      n78 = pow(alpha, n6*n74);
      n79 = pow(alpha, n7*n74);
      n80 = pow(alpha, -n1*n75);
      n81 = n4/n77;
      n82 = n7/n79;
      n83 = -1/n79;
      n84 = -1/n77;
      n85 = -1/n78;
      n86 = n6/n78;
      n87 = n39 - 1 + 1.0/n76;
      n88 = n40 - 1 + 1.0/n77;
      n89 = n41 - 1 + 1.0/n78;
      n90 = n42 - 1 + 1.0/n79;
      n91 = n87;
      n92 = n40 - n84 - 1;
      n93 = n41 - n85 - 1;
      n94 = n42 - n83 - 1;
      n95 = pow(n87, 2);
      n96 = pow(n88, 2);
      n97 = pow(n89, 2);
      n98 = pow(n90, 2);
      n99 = pow(n87, 3);
      n100 = pow(n91, 2);
      n101 = pow(n88, 3);
      n102 = pow(n89, 3);
      n103 = pow(n90, 3);
      n104 = xF[1]/n88;
      n105 = xF[3]/n90;
      n106 = xF[2]/n89;
      n107 = xF[0]/n95;
      n108 = -1/n102;
      n109 = n39/n99;
      n110 = n43/n100;
      n111 = n80/n69;
      n112 = n64*xF[0]/n87;
      n113 = n12*n33*n58/n87;
      n114 = n62/(n68*n76) + 1;
      n115 = n0*n112*n33;
      n116 = n58*n62/(n68*n76) + n58;
      n117 = n34*n72/n77 + n59;
      n118 = n2*n72*n86 + n60;
      n119 = n2*n72*n82 + n61;
      n120 = pow(n116, 2);
      n121 = n24*n50*n62/(n68*n76) + n24*n50;
      n122 = n62*n64/(n68*n76) + n64;
      n123 = n116*n39;
      n124 = n118/n97;
      n125 = n119/n98;
      n126 = n117/n96;
      n127 = n107*n123*n33;
      n128 = n15*n33*n39*(pow(alpha, NP0*n1 - n1*n74)*n53*n62/n68 + n64)/n95;
      n129 = -1.0*n25*n33*n50*(pow(alpha, NP0*n1 - n1*n74)*n62/(n46*n68) + n58)/n95;
      n130 = n20*n73*n84 + n36*n38*n47*n81/(n37*n70) + n47*n72*n81 + n65;
      n131 = n22*n73*n83 + n36*n38*n47*n82/(n37*n70) + n47*n72*n82 + n66;
      n132 = xTj*(n104*n33*n59 + n105*n33*n61 + n12*n33*n39*(pow(alpha, NP0*n1 - n1*n74)*n62/(n46*n68) + n58)/n95 - n124*n33*n49 + n125*n33*n55 + n126*n33*n57 + n2*n33*n56/n89 + n25*n33*n50/n87);
      n133 = n113 + n127 + n132;
      n134 = n104*n33*n65 + n105*n33*n66 + n106*n33*n63 + n107*n24*n33*n50*(pow(alpha, NP0*n1 - n1*n74)*n62/(n46*n68) + n58) + n108*n118*n33*n49*(n24*n52 + n24*n72*n86) + n109*n12*n33*(pow(alpha, NP0*n1 - n1*n74)*n62/(n46*n68) + n58)*(pow(alpha, NP0*n1 - n1*n74)*n1*n24*n62/n68 + n24*n50) + n112*n33 + n12*n33*n39*(pow(alpha, NP0*n1 - n1*n74)*n53*n62/n68 + n64)/n95 + n24*n33*n48*xF[3]*(pow(alpha, NP0*n1 - n7*n74)*n2*n62*n7/n68 + n61)/n98 + n24*n33*n51*xF[1]*(pow(alpha, NP0*n1 - n4*n74)*n34*n62/n68 + n59)/n96 + n24*n33*n56*(pow(alpha, NP0*n1 - n6*n74)*n2*n6*n62/n68 + n60)/n97 - n33*n49*(-pow(alpha, n1*n14 - n6*n74)*n19*n21*n38/(n37*n70) + pow(alpha, n1*n14 - n6*n74)*n38*n47*n6/(n37*n70) + n47*n72*n86 + n63)/n97 + n33*n55*(-pow(alpha, n1*n14 - n7*n74)*n19*n22*n38/(n37*n70) + pow(alpha, n1*n14 - n7*n74)*n38*n47*n7/(n37*n70) + n47*n72*n82 + n66)/n98 + n33*n57*(-pow(alpha, n1*n14 - n4*n74)*n19*n20*n38/(n37*n70) + pow(alpha, n1*n14 - n4*n74)*n38*n4*n47/(n37*n70) + n47*n72*n81 + n65)/n96 + n119*n33*n55*(n24*n48 + n24*n72*n82)/n103 + n117*n33*n57*(n24*n51 + n24*n72*n81)/n101;
      n135 = n134*xTj;
      n136 = n0*n17*(n104*n33*n65 + n105*n33*n66 + n106*n33*n63 + n107*n24*n33*n50*(pow(alpha, NP0*n1 - n1*n74)*n62/(n46*n68) + n58) + n108*n33*n49*(pow(alpha, NP0*n1 - n6*n74)*n2*n6*n62/n68 + n60)*(pow(alpha, NP0*n1 - n6*n74)*n24*n6*n62/n68 + n24*n52) + n109*n12*n33*(pow(alpha, NP0*n1 - n1*n74)*n62/(n46*n68) + n58)*(pow(alpha, NP0*n1 - n1*n74)*n1*n24*n62/n68 + n24*n50) + n112*n33 + n12*n33*n39*(pow(alpha, NP0*n1 - n1*n74)*n53*n62/n68 + n64)/n95 + n24*n33*n48*xF[3]*(pow(alpha, NP0*n1 - n7*n74)*n2*n62*n7/n68 + n61)/n98 + n24*n33*n51*xF[1]*(pow(alpha, NP0*n1 - n4*n74)*n34*n62/n68 + n59)/n96 + n24*n33*n56*(pow(alpha, NP0*n1 - n6*n74)*n2*n6*n62/n68 + n60)/n97 - n33*n49*(pow(alpha, NP0*n1 - n6*n74)*n47*n6*n62/n68 - pow(alpha, n1*n14 - n6*n74)*n19*n21*n38/(n37*n70) + pow(alpha, n1*n14 - n6*n74)*n38*n47*n6/(n37*n70) + n63)/n97 + n33*n55*(pow(alpha, NP0*n1 - n7*n74)*n47*n62*n7/n68 - pow(alpha, n1*n14 - n7*n74)*n19*n22*n38/(n37*n70) + pow(alpha, n1*n14 - n7*n74)*n38*n47*n7/(n37*n70) + n66)/n98 + n33*n57*(pow(alpha, NP0*n1 - n4*n74)*n4*n47*n62/n68 - pow(alpha, n1*n14 - n4*n74)*n19*n20*n38/(n37*n70) + pow(alpha, n1*n14 - n4*n74)*n38*n4*n47/(n37*n70) + n65)/n96 + n33*n55*(pow(alpha, NP0*n1 - n7*n74)*n2*n62*n7/n68 + n61)*(pow(alpha, NP0*n1 - n7*n74)*n24*n62*n7/n68 + n24*n48)/n103 + n33*n57*(pow(alpha, NP0*n1 - n4*n74)*n34*n62/n68 + n59)*(pow(alpha, NP0*n1 - n4*n74)*n24*n4*n62/n68 + n24*n51)/n101);
      n137 = n115 + n128 + n129 + n136;
      NP1 = -(n110*n25*n33*n50*(n111*n62 + 1) + n12*n33*n58/(n39 - 1 + pow(alpha, -n1*(1 + (n71 - log(n28*n44/(n17*xF[0] + n9) + 1))/(n1*n2)))) + n14*(-n0*n17*(n104*n33*n65 + n105*n33*n66 + n106*n33*n63 + n107*n24*n33*n50*(pow(alpha, NP0*n1 - n1*n74)*n62/(n46*n68) + n58) + n108*n33*n49*(pow(alpha, NP0*n1 - n6*n74)*n2*n6*n62/n68 + n60)*(pow(alpha, NP0*n1 - n6*n74)*n24*n6*n62/n68 + n24*n52) + n109*n12*n33*(pow(alpha, NP0*n1 - n1*n74)*n62/(n46*n68) + n58)*(pow(alpha, NP0*n1 - n1*n74)*n1*n24*n62/n68 + n24*n50) + n112*n33 + n12*n33*n39*(pow(alpha, NP0*n1 - n1*n74)*n53*n62/n68 + n64)/n95 + n24*n33*n48*xF[3]*(pow(alpha, NP0*n1 - n7*n74)*n2*n62*n7/n68 + n61)/n98 + n24*n33*n51*xF[1]*(pow(alpha, NP0*n1 - n4*n74)*n34*n62/n68 + n59)/n96 + n24*n33*n56*(pow(alpha, NP0*n1 - n6*n74)*n2*n6*n62/n68 + n60)/n97 - n33*n49*(pow(alpha, NP0*n1 - n6*n74)*n47*n6*n62/n68 - pow(alpha, 2*NP0*n1 - n6*n74)*n19*n21*n38/(n37*n70) + pow(alpha, 2*NP0*n1 - n6*n74)*n38*n47*n6/(n37*n70) + n63)/n97 + n33*n55*(pow(alpha, NP0*n1 - n7*n74)*n47*n62*n7/n68 - pow(alpha, 2*NP0*n1 - n7*n74)*n19*n22*n38/(n37*n70) + pow(alpha, 2*NP0*n1 - n7*n74)*n38*n47*n7/(n37*n70) + n66)/n98 + n33*n57*(pow(alpha, NP0*n1 - n4*n74)*n4*n47*n62/n68 - pow(alpha, 2*NP0*n1 - n4*n74)*n19*n20*n38/(n37*n70) + pow(alpha, 2*NP0*n1 - n4*n74)*n38*n4*n47/(n37*n70) + n65)/n96 + n33*n55*(pow(alpha, NP0*n1 - n7*n74)*n2*n62*n7/n68 + n61)*(pow(alpha, NP0*n1 - n7*n74)*n24*n62*n7/n68 + n24*n48)/n103 + n33*n57*(pow(alpha, NP0*n1 - n4*n74)*n34*n62/n68 + n59)*(pow(alpha, NP0*n1 - n4*n74)*n24*n4*n62/n68 + n24*n51)/n101) - 1.0*n109*n120*n33*xF[0] - n115 - n128 - n129) + n33*xTj*(n12*n43*(n58 + pow(alpha, -n1*(1 + (n71 - log(-n26*n28/(n17*xF[0] + n9) + 1))/(n1*n2)))*n28*n58/((n17*xF[0] + n9)*(-n26*n28/(n17*xF[0] + n9) + 1)))/pow(n39 - 1 + pow(alpha, -n1*(n46*(n71 - log(n28*n44/(n17*xF[0] + n9) + 1)) + 1)), 2) + n2*n56/n93 + n25*n50/n91 - n40*xF[1]*(n59 + pow(alpha, -n4*(n46*(n71 - log(-n26*n62 + 1)) + 1))*n34*n67/(-n26*n62 + 1))/pow(n92, 2) - n41*xF[2]*(n60 + pow(alpha, -n6*(n46*(n71 - log(-n26*n62 + 1)) + 1))*n2*n6*n67/(-n26*n62 + 1))/pow(n93, 2) - n42*xF[3]*(n61 + pow(alpha, -n7*(n46*(n71 - log(-n26*n62 + 1)) + 1))*n2*n67*n7/(-n26*n62 + 1))/pow(n94, 2) + n59*xF[1]/n92 + n61*xF[3]/n94) - pow(pow(-n133 - n14*(n0*n107*n33*n39*(pow(alpha, NP0*n1 - n1*n74)*n53*n62/n68 + n64) + n0*n109*n33*xF[0]*(pow(alpha, NP0*n1 - n1*n74)*n62/(n46*n68) + n58)*(pow(alpha, NP0*n1 - n1*n74)*n1*n24*n62/n68 + n24*n50) + n0*xTj*(n104*n33*n65 + n105*n33*n66 + n106*n33*n63 + n107*n24*n33*n50*(pow(alpha, NP0*n1 - n1*n74)*n62/(n46*n68) + n58) + n108*n33*n49*(pow(alpha, NP0*n1 - n6*n74)*n2*n6*n62/n68 + n60)*(pow(alpha, NP0*n1 - n6*n74)*n24*n6*n62/n68 + n24*n52) + n109*n12*n33*(pow(alpha, NP0*n1 - n1*n74)*n62/(n46*n68) + n58)*(pow(alpha, NP0*n1 - n1*n74)*n1*n24*n62/n68 + n24*n50) + n112*n33 + n12*n33*n39*(pow(alpha, NP0*n1 - n1*n74)*n53*n62/n68 + n64)/n95 + n24*n33*n48*xF[3]*(pow(alpha, NP0*n1 - n7*n74)*n2*n62*n7/n68 + n61)/n98 + n24*n33*n51*xF[1]*(pow(alpha, NP0*n1 - n4*n74)*n34*n62/n68 + n59)/n96 + n24*n33*n56*(pow(alpha, NP0*n1 - n6*n74)*n2*n6*n62/n68 + n60)/n97 - n33*n49*(pow(alpha, NP0*n1 - n6*n74)*n47*n6*n62/n68 - pow(alpha, n1*n14 - n6*n74)*n19*n21*n38/(n37*n70) + pow(alpha, n1*n14 - n6*n74)*n38*n47*n6/(n37*n70) + n63)/n97 + n33*n55*(pow(alpha, NP0*n1 - n7*n74)*n47*n62*n7/n68 - pow(alpha, n1*n14 - n7*n74)*n19*n22*n38/(n37*n70) + pow(alpha, n1*n14 - n7*n74)*n38*n47*n7/(n37*n70) + n66)/n98 + n33*n57*(pow(alpha, NP0*n1 - n4*n74)*n4*n47*n62/n68 - pow(alpha, n1*n14 - n4*n74)*n19*n20*n38/(n37*n70) + pow(alpha, n1*n14 - n4*n74)*n38*n4*n47/(n37*n70) + n65)/n96 + n33*n55*(pow(alpha, NP0*n1 - n7*n74)*n2*n62*n7/n68 + n61)*(pow(alpha, NP0*n1 - n7*n74)*n24*n62*n7/n68 + n24*n48)/n103 + n33*n57*(pow(alpha, NP0*n1 - n4*n74)*n34*n62/n68 + n59)*(pow(alpha, NP0*n1 - n4*n74)*n24*n4*n62/n68 + n24*n51)/n101) + n15*n33*n64/n87 + 1.0*n25*n33*n50*(pow(alpha, NP0*n1 - n1*n74)*n62/(n46*n68) + n58)/n95), 2) + (-pow(NP0, 2)*(-n109*n15*n33*(pow(alpha, NP0*n1 - n1*n74)*n62/(n46*n68) + n58)*(pow(alpha, NP0*n1 - n1*n74)*n1*n24*n62/n68 + n24*n50) - n137) - NP0*n133 - n12*n33*n43/(n39 - 1 + pow(alpha, -n1*(n46*(n71 - log(n28*n44/(n17*xF[0] + n9) + 1)) + 1))) - n17*(-n104*n33*n40 - n105*n33*n42 - n33*n39*xF[0]/n87 - n33*n49/n89))*(-n109*n16*n33*(pow(alpha, NP0*n1 - n1*n74)*n62/(n46*n68) + n58)*(pow(alpha, NP0*n1 - n1*n74)*n1*n24*n62/n68 + n24*n50) + 2.0*n112*n33 - 2.0*n135 - n16*n33*n39*(pow(alpha, NP0*n1 - n1*n74)*n53*n62/n68 + n64)/n95 + 4.0*n25*n33*n50*(pow(alpha, NP0*n1 - n1*n74)*n62/(n46*n68) + n58)/n95), -n0))/(n33*(-2.0*n107*n114*n36*n53 + n107*n114*n39*n64 + 2*n109*pow(n114, 2)*n36*n53*xF[0] - 1.0*n112 + 1.0*xTj*(n104*n65 + n105*n66 + n106*n63 + n107*n24*n50*(pow(alpha, NP0*n1 - n1*n74)*n62/(n46*n68) + n58) - 2*n109*n120*xF[0] + n112 + n12*n39*(pow(alpha, NP0*n1 - n1*n74)*n53*n62/n68 + n64)/n95 + n24*n48*xF[3]*(pow(alpha, NP0*n1 - n7*n74)*n2*n62*n7/n68 + n61)/n98 + n24*n51*xF[1]*(pow(alpha, NP0*n1 - n4*n74)*n34*n62/n68 + n59)/n96 + n24*n56*(pow(alpha, NP0*n1 - n6*n74)*n2*n6*n62/n68 + n60)/n97 - n49*(-pow(alpha, n1*n14 - n6*n74)*n19*n21*n38/(n37*n70) + pow(alpha, n1*n14 - n6*n74)*n38*n47*n6/(n37*n70) + n47*n72*n86 + n63)/n97 + n55*(-pow(alpha, n1*n14 - n7*n74)*n19*n22*n38/(n37*n70) + pow(alpha, n1*n14 - n7*n74)*n38*n47*n7/(n37*n70) + n47*n72*n82 + n66)/n98 + n57*(-pow(alpha, n1*n14 - n4*n74)*n19*n20*n38/(n37*n70) + pow(alpha, n1*n14 - n4*n74)*n38*n4*n47/(n37*n70) + n47*n72*n81 + n65)/n96 - 2*pow(n119, 2)*n42*xF[3]/n103 - 2*pow(n118, 2)*n49/n102 - 2*pow(n117, 2)*n40*xF[1]/n101)));
      NT1 = n46*(n71 - log(-pow(alpha, NP1*n1)*n62 + 1));
      g0 = MW[1] - Mstar;
      g1 = MW[0] - Mstar;
      g2 = NT1 + 1;
      g3 = xPj - xTj;
      g4 = MW[2] - Mstar;
      g5 = MW[3] - Mstar;
      g6 = xF[0] - xTj;
      g7 = xF[0] - xPj;
      g8 = -xTj;
      g9 = xPj/xF[1];
      g10 = pow(alpha, -g1);
      g11 = pow(alpha, -g0);
      g12 = pow(alpha, -g4);
      g13 = pow(alpha, -g5);
      g14 = log(xF[0]/xF[1]);
      g15 = -g2;
      g16 = pow(alpha, NP1*g0);
      g17 = pow(alpha, NP1*g1);
      g18 = log(g10);
      g19 = pow(alpha, NP1*g4);
      g20 = pow(alpha, NP1*g5);
      g21 = -g14;
      g22 = g3/g6;
      g23 = g6/g3;
      g24 = -g16 + 1;
      g25 = -g16 + 1;
      g26 = -g17 + 1;
      g27 = -g19 + 1;
      g28 = -g20 + 1;
      g29 = -g17;
      g30 = -g19;
      g31 = -g20;
      g32 = -1.0*g14;
      g33 = -g3/g7;
      g34 = pow(alpha, g0*g15) - 1;
      g35 = pow(alpha, g0*g15) - 1;
      g36 = pow(alpha, g1*g15) - 1;
      g37 = pow(alpha, g15*g4) - 1;
      g38 = pow(alpha, g15*g5) - 1;
      g39 = -pow(alpha, g1*g15);
      g40 = -pow(alpha, g15*g4);
      g41 = -pow(alpha, g15*g5);
      g42 = g7*g8/(g3*xF[1]);
      g43 = g25 + g35;
      g44 = -g17 - g39;
      g45 = -g19 - g40;
      g46 = -g20 - g41;
      g47 = pow(alpha, g1*g15) + g29;
      g48 = g25 + g35;
      g49 = pow(alpha, g15*g4) + g30;
      g50 = pow(alpha, g15*g5) + g31;
      g51 = xF[3]/g50;
      g52 = xF[1]/g48;
      g53 = xF[2]/g49;
      g54 = xF[0]/g47;
      g55 = xF[1]/g43;
      g56 = xF[0]/g44;
      g57 = xF[3]/g46;
      g58 = xF[2]/g45;
      g59 = g26/g44;
      g60 = g28/g46;
      g61 = g24/g43;
      g62 = g27/g45;
      g63 = g34/g43;
      g64 = g37/g45;
      g65 = g36/g44;
      g66 = g38/g46;
      g67 = log(g42*g48/g25);
      g68 = log(g42*g43/g24);
      g69 = log(g23*g48*g9/g35);
      g70 = 1.0*g67;
      g71 = log(g23*g43*g9/g34);
      g72 = 1.0*g69;
      g73 = -g25*g52*g70 - g32*xF[0] - g32*xF[1] - g32*xF[2] - g32*xF[3] - g35*g52*g72 - g51*g70*(g31 + 1) - g51*g72*(pow(alpha, g15*g5) - 1) - g53*g70*(g30 + 1) - g53*g72*(pow(alpha, g15*g4) - 1) - g54*g70*(g29 + 1) - g54*g72*(pow(alpha, g1*g15) - 1);
      LpF = xF[0]*(g10 + 1.0)*(g21 + g59*g68 + g65*g71)/(g18*(g10 - 1.0)) + xF[1]*(g11 + 1.0)*(g21 + g61*g68 + g63*g71)/(g18*(g11 - 1.0)) + xF[2]*(g12 + 1.0)*(g21 + g62*g68 + g64*g71)/(g18*(g12 - 1.0)) + xF[3]*(g13 + 1.0)*(g21 + g60*g68 + g66*g71)/(g18*(g13 - 1.0));
      PpF = g23;
      TpF = -g7/g3;
      SWUpF = g73;
      SWUpP = g22*g73;
      xP[0] = g22*g36*g56;
      xP[1] = g22*g34*g55;
      xP[2] = g22*g37*g58;
      xP[3] = g22*g38*g57;
      xT[0] = g26*g33*g56;
      xT[1] = g24*g33*g55;
      xT[2] = g27*g33*g58;
      xT[3] = g28*g33*g57;
      break;
    case 5:
      n0 = MW[0] - Mstar;
      n1 = log(alpha);
      n2 = xPj - xTj;
      n3 = MW[1] - Mstar;
      n4 = xF[0] - xPj;
      n5 = MW[2] - Mstar;
      n6 = MW[3] - Mstar;
      n7 = MW[4] - Mstar;
      n8 = log(xTj);
      n9 = -2;
      n10 = xF[0]*xPj;
      n11 = -Mstar;
      n12 = -MW[0];
      n13 = -NP0*n9;
      n14 = -xPj;
      n15 = -xF[0];
      n16 = pow(n0, -n9);
      n17 = pow(n1, -n9);
      n18 = pow(n3, -n9);
      n19 = pow(n5, -n9);
      n20 = pow(n6, -n9);
      n21 = pow(n7, -n9);
      n22 = Mstar*n1;
      n23 = -n1*n9;
      n24 = n0*xF[0];
      n25 = pow(alpha, NP0*n0);
      n26 = n10 + n15*xTj;
      n27 = n10 + n14*xTj;
      n28 = pow(alpha, NP0*n3);
      n29 = pow(alpha, NP0*n5);
      n30 = pow(alpha, NP0*n6);
      n31 = pow(alpha, NP0*n7);
      n32 = n1*n12;
      n33 = n2/n4;
      n34 = pow(alpha, n0*n13);
      n35 = pow(n26, -n9);
      n36 = pow(n27, -n9);
      n37 = -n25 + 1;
      n38 = -n28 + 1;
      n39 = -n29 + 1;
      n40 = -n30 + 1;
      n41 = -n31 + 1;
      n42 = n37;
      n43 = -n25;
      n44 = -n33;
      n45 = 1/(n0*n1);
      n46 = n1*n25;
      n47 = n40*xF[3];
      n48 = n1*n33;
      n49 = n30*n6;
      n50 = n41*xF[4];
      n51 = n37*xF[0];
      n52 = n28*n3;
      n53 = n39*xF[2];
      n54 = n31*n7;
      n55 = n38*xF[1];
      n56 = n29*n5;
      n57 = log((-1.0 + xPj/xF[0])/n2);
      n58 = n56*xF[2];
      n59 = n54*xF[4];
      n60 = n0*n46;
      n61 = n1*n52;
      n62 = n1*n56;
      n63 = n1*n49;
      n64 = n1*n54;
      n65 = n27/n26;
      n66 = n17*n19*n29;
      n67 = n17*n21*n31;
      n68 = n16*n17*n25;
      n69 = n17*n18*n28;
      n70 = n17*n20*n30;
      n71 = n16*n17*n34;
      n72 = n43*n65 + 1;
      n73 = -n25*n65 + 1;
      n74 = pow(n72, -n9);
      n75 = n22 + n32 + n57 + n8;
      n76 = n0*n17*n25/n72;
      n77 = n17*n34*n36/(n35*n74);
      n78 = n45*(n75 - log(n72)) + 1;
      n79 = n45*(n75 - log(n73)) + 1;
      n80 = pow(alpha, n0*n78);
      n81 = pow(alpha, n3*n78);
      n82 = pow(alpha, n5*n78);
      n83 = pow(alpha, n6*n78);
      n84 = pow(alpha, n7*n78);
      n85 = pow(alpha, -n0*n79);
      n86 = n3/n81;
      n87 = n7/n84;
      n88 = n6/n83;
      n89 = -1/n83;
      n90 = -1/n81;
      n91 = -1/n84;
      n92 = -1/n82;
      n93 = n5/n82;
      n94 = n0*n93;
      n95 = n37 - 1 + 1.0/n80;
      n96 = n38 - 1 + 1.0/n81;
      n97 = n39 - 1 + 1.0/n82;
      n98 = n40 - 1 + 1.0/n83;
      n99 = n41 - 1 + 1.0/n84;
      n100 = n95;
      n101 = n38 - n90 - 1;
      n102 = n39 - n92 - 1;
      n103 = n40 - n89 - 1;
      n104 = n41 - n91 - 1;
      n105 = pow(n95, -n9);
      n106 = pow(n96, -n9);
      n107 = pow(n97, -n9);
      n108 = pow(n98, -n9);
      n109 = pow(n99, -n9);
      n110 = pow(n95, 3);
      n111 = pow(n100, -n9);
      n112 = pow(n96, 3);
      n113 = pow(n97, 3);
      n114 = pow(n98, 3);
      n115 = pow(n99, 3);
      n116 = xF[0]/n95;
      n117 = xF[1]/n96;
      n118 = xF[2]/n97;
      n119 = xF[4]/n99;
      n120 = xF[3]/n98;
      n121 = n42/n111;
      n122 = 1/(n72*n80);
      n123 = n85/n73;
      n124 = n24*n33*n46/n95;
      n125 = n122*n65 + 1;
      n126 = n122*n60*n65 + n60;
      n127 = n46*n65*n86/n72 + n61;
      n128 = n46*n65*n93/n72 + n62;
      n129 = n46*n65*n88/n72 + n63;
      n130 = n46*n65*n87/n72 + n64;
      n131 = pow(n126, -n9);
      n132 = n0*n122*n23*n25*n65 + n0*n23*n25;
      n133 = n122*n65*n68 + n68;
      n134 = n130*n50;
      n135 = n125/n105;
      n136 = n128/n107;
      n137 = n126/n105;
      n138 = n129/n108;
      n139 = n127/n106;
      n140 = n131/n110;
      n141 = n133/n105;
      n142 = n15*n33*n37*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n65/n72 + n60)/n105;
      n143 = n124 + n142;
      n144 = n126*n132/n110;
      n145 = n0*n77*n86 + n18*n77*n90 + n65*n76*n86 + n69;
      n146 = n19*n77*n92 + n65*n76*n93 + n66 + n77*n94;
      n147 = n0*n77*n88 + n20*n77*n89 + n65*n76*n88 + n70;
      n148 = n0*n77*n87 + n21*n77*n91 + n65*n76*n87 + n67;
      n149 = n117*n48*n52 + n120*n48*n49 + n136*n44*n53 + n138*n44*n47 + n139*n44*n55 + n143 + n48*n58/n97 + n48*n59/n99 + n134*n44/n109;
      n150 = n149*xTj;
      n151 = n116*n33*n68 + n117*n33*n69 + n118*n33*n66 + n119*n33*n67 + n120*n33*n70 + n134*n44*(n23*n25*n65*n87/n72 + n23*n54)/n115 + n129*n44*n47*(n23*n25*n65*n88/n72 + n23*n49)/n114 + n128*n44*n53*(n23*n25*n65*n93/n72 + n23*n56)/n113 + n127*n44*n55*(n23*n25*n65*n86/n72 + n23*n52)/n112 + n15*n33*n37*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n65/n72 + n60)*(pow(alpha, NP0*n0 - n0*n78)*n0*n23*n65/n72 + n0*n23*n25)/n110 + n23*n33*n59*(pow(alpha, NP0*n0 - n7*n78)*n1*n65*n7/n72 + n64)/n109 + n44*n50*(pow(alpha, n0*n13 - n7*n78)*n0*n17*n36*n7/(n35*n74) - pow(alpha, n0*n13 - n7*n78)*n17*n21*n36/(n35*n74) + n65*n76*n87 + n67)/n109 + n23*n33*n49*xF[3]*(pow(alpha, NP0*n0 - n6*n78)*n1*n6*n65/n72 + n63)/n108 + n44*n47*(pow(alpha, n0*n13 - n6*n78)*n0*n17*n36*n6/(n35*n74) - pow(alpha, n0*n13 - n6*n78)*n17*n20*n36/(n35*n74) + n65*n76*n88 + n70)/n108 + n23*n33*n58*(pow(alpha, NP0*n0 - n5*n78)*n1*n5*n65/n72 + n62)/n107 + n44*n53*(pow(alpha, n0*n13 - n5*n78)*n0*n17*n36*n5/(n35*n74) - pow(alpha, n0*n13 - n5*n78)*n17*n19*n36/(n35*n74) + n65*n76*n93 + n66)/n107 + n23*n33*n52*xF[1]*(pow(alpha, NP0*n0 - n3*n78)*n1*n3*n65/n72 + n61)/n106 + n44*n55*(pow(alpha, n0*n13 - n3*n78)*n0*n17*n3*n36/(n35*n74) - pow(alpha, n0*n13 - n3*n78)*n17*n18*n36/(n35*n74) + n65*n76*n86 + n69)/n106 + n15*n33*n37*(pow(alpha, NP0*n0 - n0*n78)*n16*n17*n65/n72 + n68)/n105 + n15*n33*n60*n9*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n65/n72 + n60)/n105;
      n152 = n151*xTj;
      n153 = 0.5*n116*n33*n68 - 0.5*n141*n33*n51 - 0.5*n144*n33*n51 - 0.5*n152 + 1.0*n24*n33*n46*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n65/n72 + n60)/n105;
      NP1 = -(n121*n24*n33*n46*(n123*n65 + 1) + n13*(0.5*n116*n33*n68 - 1.0*n140*n33*n51 - 0.5*n141*n33*n51 - 0.5*xTj*(n116*n33*n68 + n117*n33*n69 + n118*n33*n66 + n119*n33*n67 + n120*n33*n70 + n134*n44*(n23*n25*n65*n87/n72 + n23*n54)/n115 + n129*n44*n47*(n23*n25*n65*n88/n72 + n23*n49)/n114 + n128*n44*n53*(n23*n25*n65*n93/n72 + n23*n56)/n113 + n127*n44*n55*(n23*n25*n65*n86/n72 + n23*n52)/n112 + n15*n33*n37*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n65/n72 + n60)*(pow(alpha, NP0*n0 - n0*n78)*n0*n23*n65/n72 + n0*n23*n25)/n110 + n23*n33*n59*(pow(alpha, NP0*n0 - n7*n78)*n1*n65*n7/n72 + n64)/n109 + n44*n50*(pow(alpha, -NP0*n0*n9 - n7*n78)*n0*n17*n36*n7/(n35*n74) - pow(alpha, -NP0*n0*n9 - n7*n78)*n17*n21*n36/(n35*n74) + n65*n76*n87 + n67)/n109 + n23*n33*n49*xF[3]*(pow(alpha, NP0*n0 - n6*n78)*n1*n6*n65/n72 + n63)/n108 + n44*n47*(pow(alpha, -NP0*n0*n9 - n6*n78)*n0*n17*n36*n6/(n35*n74) - pow(alpha, -NP0*n0*n9 - n6*n78)*n17*n20*n36/(n35*n74) + n65*n76*n88 + n70)/n108 + n23*n33*n58*(pow(alpha, NP0*n0 - n5*n78)*n1*n5*n65/n72 + n62)/n107 + n44*n53*(pow(alpha, -NP0*n0*n9 - n5*n78)*n0*n17*n36*n5/(n35*n74) - pow(alpha, -NP0*n0*n9 - n5*n78)*n17*n19*n36/(n35*n74) + n65*n76*n93 + n66)/n107 + n23*n33*n52*xF[1]*(pow(alpha, NP0*n0 - n3*n78)*n1*n3*n65/n72 + n61)/n106 + n44*n55*(pow(alpha, -NP0*n0*n9 - n3*n78)*n0*n17*n3*n36/(n35*n74) - pow(alpha, -NP0*n0*n9 - n3*n78)*n17*n18*n36/(n35*n74) + n65*n76*n86 + n69)/n106 + n15*n33*n37*(pow(alpha, NP0*n0 - n0*n78)*n16*n17*n65/n72 + n68)/n105 + n15*n33*n60*n9*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n65/n72 + n60)/n105) + 1.0*n24*n33*n46*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n65/n72 + n60)/n105) + n15*n33*n60/(n37 - 1 + pow(alpha, -n0*(n45*(n75 - log(n27*n43/(n10 - xF[0]*xTj) + 1)) + 1))) + n33*xTj*(n1*n59/n104 + n1*n58/n102 - pow(n101, n9)*n38*xF[1]*(n61 + pow(alpha, -n3*n79)*n3*n46*n65/n73) - pow(n102, n9)*n39*xF[2]*(n62 + pow(alpha, -n5*n79)*n46*n5*n65/n73) - pow(n103, n9)*n40*xF[3]*(n63 + pow(alpha, -n6*n79)*n46*n6*n65/n73) - pow(n104, n9)*n41*xF[4]*(n64 + pow(alpha, -n7*n79)*n46*n65*n7/n73) + n15*n42*(n60 + pow(alpha, -n0*(n45*(n75 - log(-n25*n27/(n10 - xF[0]*xTj) + 1)) + 1))*n27*n60/((n10 - xF[0]*xTj)*(-n25*n27/(n10 - xF[0]*xTj) + 1)))*pow(n37 - 1 + pow(alpha, -n0*(n45*(n75 - log(n27*n43/(n10 - xF[0]*xTj) + 1)) + 1)), n9) + n63*xF[3]/n103 + n61*xF[1]/n101 + n24*n46/n100) - sqrt((NP0*(n143 - n150) + n33*n51/n95 + xTj*(n15*n33*n37/n95 + n44*n47/n98 + n44*n50/n99 + n44*n53/n97 + n44*n55/n96) - pow(NP0, -n9)*n153)*(2.0*n116*n33*n68 + n152*n9 - n15*n33*n37*n9*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n65/n72 + n60)*(pow(alpha, NP0*n0 - n0*n78)*n0*n23*n65/n72 + n0*n23*n25)/n110 - n15*n33*n37*n9*(pow(alpha, NP0*n0 - n0*n78)*n16*n17*n65/n72 + n68)/n105 + 4.0*n24*n33*n46*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n65/n72 + n60)/n105) + pow(-n13*(0.5*n116*n33*n68 - 0.5*xTj*(n116*n33*n68 + n117*n33*n69 + n118*n33*n66 + n119*n33*n67 + n120*n33*n70 + n44*n50*(pow(alpha, NP0*n0 - n7*n78)*n1*n65*n7/n72 + n64)*(pow(alpha, NP0*n0 - n7*n78)*n23*n65*n7/n72 + n23*n54)/n115 + n44*n47*(pow(alpha, NP0*n0 - n6*n78)*n1*n6*n65/n72 + n63)*(pow(alpha, NP0*n0 - n6*n78)*n23*n6*n65/n72 + n23*n49)/n114 + n44*n53*(pow(alpha, NP0*n0 - n5*n78)*n1*n5*n65/n72 + n62)*(pow(alpha, NP0*n0 - n5*n78)*n23*n5*n65/n72 + n23*n56)/n113 + n44*n55*(pow(alpha, NP0*n0 - n3*n78)*n1*n3*n65/n72 + n61)*(pow(alpha, NP0*n0 - n3*n78)*n23*n3*n65/n72 + n23*n52)/n112 + n15*n33*n37*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n65/n72 + n60)*(pow(alpha, NP0*n0 - n0*n78)*n0*n23*n65/n72 + n0*n23*n25)/n110 + n23*n33*n59*(pow(alpha, NP0*n0 - n7*n78)*n1*n65*n7/n72 + n64)/n109 + n44*n50*(pow(alpha, NP0*n0 - n7*n78)*n0*n17*n65*n7/n72 + pow(alpha, n0*n13 - n7*n78)*n0*n17*n36*n7/(n35*n74) - pow(alpha, n0*n13 - n7*n78)*n17*n21*n36/(n35*n74) + n67)/n109 + n23*n33*n49*xF[3]*(pow(alpha, NP0*n0 - n6*n78)*n1*n6*n65/n72 + n63)/n108 + n44*n47*(pow(alpha, NP0*n0 - n6*n78)*n0*n17*n6*n65/n72 + pow(alpha, n0*n13 - n6*n78)*n0*n17*n36*n6/(n35*n74) - pow(alpha, n0*n13 - n6*n78)*n17*n20*n36/(n35*n74) + n70)/n108 + n23*n33*n58*(pow(alpha, NP0*n0 - n5*n78)*n1*n5*n65/n72 + n62)/n107 + n44*n53*(pow(alpha, NP0*n0 - n5*n78)*n0*n17*n5*n65/n72 + pow(alpha, n0*n13 - n5*n78)*n0*n17*n36*n5/(n35*n74) - pow(alpha, n0*n13 - n5*n78)*n17*n19*n36/(n35*n74) + n66)/n107 + n23*n33*n52*xF[1]*(pow(alpha, NP0*n0 - n3*n78)*n1*n3*n65/n72 + n61)/n106 + n44*n55*(pow(alpha, NP0*n0 - n3*n78)*n0*n17*n3*n65/n72 + pow(alpha, n0*n13 - n3*n78)*n0*n17*n3*n36/(n35*n74) - pow(alpha, n0*n13 - n3*n78)*n17*n18*n36/(n35*n74) + n69)/n106 + n15*n33*n37*(pow(alpha, NP0*n0 - n0*n78)*n16*n17*n65/n72 + n68)/n105 + n15*n33*n60*n9*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n65/n72 + n60)/n105) - 0.5*n33*n51*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n65/n72 + n60)*(pow(alpha, NP0*n0 - n0*n78)*n0*n23*n65/n72 + n0*n23*n25)/n110 + 1.0*n24*n33*n46*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n65/n72 + n60)/n105 - 0.5*n33*n51*(pow(alpha, NP0*n0 - n0*n78)*n16*n17*n65/n72 + n68)/n105) - n137*n33*n51 - n15*n33*n60/n95 - n150, -n9)))/(n33*(-1.0*n116*n68 + n135*n51*n68 - 2.0*n135*n71*xF[0] + 1.0*xTj*(n116*n68 + n117*n69 + n118*n66 + n119*n67 + n120*n70 + n140*n51*n9 + pow(n130, -n9)*n50*n9/n115 + pow(n129, -n9)*n47*n9/n114 + pow(n128, -n9)*n53*n9/n113 + pow(n127, -n9)*n55*n9/n112 + n23*n59*(pow(alpha, NP0*n0 - n7*n78)*n1*n65*n7/n72 + n64)/n109 - n50*(pow(alpha, n0*n13 - n7*n78)*n0*n17*n36*n7/(n35*n74) - pow(alpha, n0*n13 - n7*n78)*n17*n21*n36/(n35*n74) + n65*n76*n87 + n67)/n109 + n23*n49*xF[3]*(pow(alpha, NP0*n0 - n6*n78)*n1*n6*n65/n72 + n63)/n108 - n47*(pow(alpha, n0*n13 - n6*n78)*n0*n17*n36*n6/(n35*n74) - pow(alpha, n0*n13 - n6*n78)*n17*n20*n36/(n35*n74) + n65*n76*n88 + n70)/n108 + n23*n58*(pow(alpha, NP0*n0 - n5*n78)*n1*n5*n65/n72 + n62)/n107 - n53*(pow(alpha, n0*n13 - n5*n78)*n0*n17*n36*n5/(n35*n74) - pow(alpha, n0*n13 - n5*n78)*n17*n19*n36/(n35*n74) + n65*n76*n93 + n66)/n107 + n23*n52*xF[1]*(pow(alpha, NP0*n0 - n3*n78)*n1*n3*n65/n72 + n61)/n106 - n55*(pow(alpha, n0*n13 - n3*n78)*n0*n17*n3*n36/(n35*n74) - pow(alpha, n0*n13 - n3*n78)*n17*n18*n36/(n35*n74) + n65*n76*n86 + n69)/n106 + n15*n37*(pow(alpha, NP0*n0 - n0*n78)*n16*n17*n65/n72 + n68)/n105 + n15*n60*n9*(pow(alpha, NP0*n0 - n0*n78)*n0*n1*n65/n72 + n60)/n105) + pow(n125, -n9)*n15*n37*n71*n9/n110));
      NT1 = n45*(n75 - log(-pow(alpha, NP1*n0)*n65 + 1));
      g0 = MW[1] - Mstar;
      g1 = MW[0] - Mstar;
      g2 = NT1 + 1;
      g3 = xPj - xTj;
      g4 = MW[2] - Mstar;
      g5 = MW[3] - Mstar;
      g6 = MW[4] - Mstar;
      g7 = xF[0] - xTj;
      g8 = xF[0] - xPj;
      g9 = -xTj;
      g10 = 1.0*xF[4];
      g11 = 1.0*xF[3];
      g12 = 1.0*xF[0];
      g13 = xPj/xF[1];
      g14 = pow(alpha, -g1);
      g15 = pow(alpha, -g0);
      g16 = pow(alpha, -g4);
      g17 = pow(alpha, -g5);
      g18 = pow(alpha, -g6);
      g19 = log(xF[0]/xF[1]);
      g20 = -g2;
      g21 = pow(alpha, NP1*g0);
      g22 = pow(alpha, NP1*g1);
      g23 = log(g14);
      g24 = pow(alpha, NP1*g4);
      g25 = pow(alpha, NP1*g5);
      g26 = pow(alpha, NP1*g6);
      g27 = -g19;
      g28 = g3/g7;
      g29 = g7/g3;
      g30 = -g21 + 1;
      g31 = -g21 + 1;
      g32 = -g22 + 1;
      g33 = -g24 + 1;
      g34 = -g25 + 1;
      g35 = -g26 + 1;
      g36 = -g22;
      g37 = -g24;
      g38 = -g25;
      g39 = -g26;
      g40 = -1.0*g19;
      g41 = -g3/g8;
      g42 = g40*xF[0];
      g43 = g40*xF[1];
      g44 = g40*xF[2];
      g45 = g40*xF[3];
      g46 = g40*xF[4];
      g47 = pow(alpha, g0*g20) - 1;
      g48 = pow(alpha, g0*g20) - 1;
      g49 = pow(alpha, g1*g20) - 1;
      g50 = pow(alpha, g20*g4) - 1;
      g51 = pow(alpha, g20*g5) - 1;
      g52 = pow(alpha, g20*g6) - 1;
      g53 = -pow(alpha, g1*g20);
      g54 = -pow(alpha, g20*g4);
      g55 = -pow(alpha, g20*g5);
      g56 = -pow(alpha, g20*g6);
      g57 = g8*g9/(g3*xF[1]);
      g58 = g31 + g48;
      g59 = -g22 - g53;
      g60 = -g24 - g54;
      g61 = -g25 - g55;
      g62 = -g26 - g56;
      g63 = pow(alpha, g1*g20) + g36;
      g64 = g31 + g48;
      g65 = pow(alpha, g20*g4) + g37;
      g66 = pow(alpha, g20*g5) + g38;
      g67 = pow(alpha, g20*g6) + g39;
      g68 = xF[1]/g64;
      g69 = xF[2]/g65;
      g70 = xF[1]/g58;
      g71 = xF[3]/g61;
      g72 = xF[0]/g59;
      g73 = xF[2]/g60;
      g74 = xF[4]/g62;
      g75 = g12/g59;
      g76 = 1.0*g73;
      g77 = 1.0*g70;
      g78 = g35/g62;
      g79 = g32/g59;
      g80 = g34/g61;
      g81 = g30/g58;
      g82 = g33/g60;
      g83 = g32*g72;
      g84 = g33*g73;
      g85 = g30*g70;
      g86 = g47/g58;
      g87 = g50/g60;
      g88 = g51/g61;
      g89 = g49/g59;
      g90 = g52/g62;
      g91 = g47*g70;
      g92 = g49*g72;
      g93 = g50*g73;
      g94 = log(g57*g64/g31);
      g95 = log(g57*g58/g30);
      g96 = log(g13*g29*g64/g48);
      g97 = 1.0*g94;
      g98 = log(g13*g29*g58/g47);
      g99 = 1.0*g96;
      g100 = g42 + g43 + g44 + g45 + g46;
      g101 = g78*g95;
      g102 = g79*g95;
      g103 = g82*g95;
      g104 = g81*g95;
      g105 = g80*g95;
      g106 = g87*g98;
      g107 = g88*g98;
      g108 = g90*g98;
      g109 = g86*g98;
      g110 = g89*g98;
      LpF = xF[0]*(g14 + 1.0)*(g102 + g110 + g27)/(g23*(g14 - 1.0)) + xF[1]*(g15 + 1.0)*(g104 + g109 + g27)/(g23*(g15 - 1.0)) + xF[2]*(g16 + 1.0)*(g103 + g106 + g27)/(g23*(g16 - 1.0)) + xF[3]*(g17 + 1.0)*(g105 + g107 + g27)/(g23*(g17 - 1.0)) + xF[4]*(g18 + 1.0)*(g101 + g108 + g27)/(g23*(g18 - 1.0));
      PpF = g29;
      TpF = -g8/g3;
      SWUpF = -g10*g94*(g39 + 1)/g67 - g10*g96*(pow(alpha, g20*g6) - 1)/g67 - g100 - g11*g94*(g38 + 1)/g66 - g11*g96*(pow(alpha, g20*g5) - 1)/g66 - g12*g94*(g36 + 1)/g63 - g12*g96*(pow(alpha, g1*g20) - 1)/g63 - g31*g68*g97 - g48*g68*g99 - g69*g97*(g37 + 1) - g69*g99*(pow(alpha, g20*g4) - 1);
      SWUpP = -g28*(g10*g101 + g10*g108 + g100 + g105*g11 + g107*g11 + g30*g77*g95 + g32*g75*g95 + g33*g76*g95 + g47*g77*g98 + g49*g75*g98 + g50*g76*g98);
      xP[0] = g28*g92;
      xP[1] = g28*g91;
      xP[2] = g28*g93;
      xP[3] = g28*g51*g71;
      xP[4] = g28*g52*g74;
      xT[0] = g41*g83;
      xT[1] = g41*g85;
      xT[2] = g41*g84;
      xT[3] = g34*g41*g71;
      xT[4] = g35*g41*g74;
      break;
 
  };

  i = 2;
  casc.mat_prod.comp[j] = xP[0];
  casc.mat_prod.comp[k] = xP[1];
  casc.mat_tail.comp[j] = xT[0];
  casc.mat_tail.comp[k] = xT[1];
  for(pyne::comp_iter ci = casc.mat_feed.comp.begin(); ci != casc.mat_feed.comp.end(); ci++)
  {
    nuc = (*ci).first;
    if (nuc == j || nuc == k)
        continue;
    casc.mat_prod.comp[nuc] = xP[i];
    casc.mat_tail.comp[nuc] = xT[i];
    i++;
  };
  // must renormalize to eliminate numerical error
  casc.mat_prod.norm_comp();
  casc.mat_tail.norm_comp();
  casc.mat_prod.mass = PpF;
  casc.mat_tail.mass = TpF;

  casc.N = NP1;
  casc.M = NT1;
  casc.l_t_per_feed = LpF;
  casc.swu_per_feed = SWUpF;
  casc.swu_per_prod = SWUpP;

  delete [] MW;
  delete [] xP;
  delete [] xF;
  delete [] xT;

  return casc;
};
