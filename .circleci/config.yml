version: 2
commands:
  checkout_build:
    description: "Checkout PyNE, build with the provided flag"
    paramters:
      python:
        type: string
        default: "python2"
      flags:
        type: string
        default: ""
    steps:
      - checkout
      # Build w/ PyMOAB and w/ DAGMC
      - run:
        name: Building PyNE
        command: |
        << parameters.python >> setup.py install --user --clean << paramters.flags >> 
  save_state:
    description: "Save the state of the Dock er container"
    parameters:
      build:
        type: string
        default: ""
    steps:
      - run:
          command: echo $CIRCLE_SHA1 > .<<parameters.build>>circle-sha
      - save_cache:
        key: v1-repo-{{ checksum ".<<parameters.build>>circle-sha" }}
        paths:
          - /repo

  pull_state:
    description: "Pull back a saved the state of the Dock er container"
    parameters:
      build:
        type: string
        default: ""
    steps:
      - run:
        name: save SHA to a file
        command: echo $CIRCLE_SHA1 > .<<paramters.build>>circle-sha
      - restore_cache:
        keys:
          - v1-repo-{{ checksum ".<<parameters.build>>circle-sha" }}


  run_test:
    description: "Run tests"
    parameters:
      flags:
        type: string
        default: ""
    steps:
      - run:
        no_output_timeout: "20m"
        command: |
          cd ~/repo/tests
          ./travis-run-tests.sh << parameters.flag>>




jobs:
  py3_build:
    docker:
      - image: pyne/pshriwise:ubuntu_17.04_pymoab_pyne
    working_directory: ~/repo
    steps:
      - checkout_build:
          python: "python3"
          flags: ""
      - save_state:
            build: "python3"

  py3_test:
    docker:
      - image: pyne/pshriwise:ubuntu_17.04_pymoab_pyne
    working_directory: ~/repo
    steps:
      - pull_state:
          build: "python3"
      - run_test:
          falgs: "python3"



  py2_build:
    docker:
      - image: pyne/ubuntu_18.04_pyne-deps:latest
    working_directory: ~/repo
    steps:
      - checkout_build:
          python: "python2"
          flags: ""
      - save_state:
            build: "python2"

  py2_test:
    docker:
      - image: pyne/ubuntu_18.04_pyne-deps:latest
    working_directory: ~/repo
    steps:
      - pull_state:
         build: "python2"
      - run_test:
          falg: "python2"



  py2_dagmc_build:
    docker:
      - image: pyne/ubuntu_18.04_dagmc_pyne-deps:latest
    working_directory: ~/repo
    steps:
      - checkout_build:
          python: "python2"
          flags: "--moab $HOME/opt/moab --dagmc $HOME/opt/dagmc"
      - save_state:
            build: "python2_dagmc"

  py2_dagmc_test:
    docker:
      - image: pyne/ubuntu_18.04_dagmc_pyne-deps:latest
    working_directory: ~/repo
    steps:
      - pull_state:
         build: "python2_dagmc"
      - run_test:
          falg: "python2"



  py2_pymoab_build:
    docker:
      - image: pyne/ubuntu_18.04_pymoab_pyne-deps:latest
    working_directory: ~/repo
    steps:
      - checkout_build:
          python: "python2"
          flags: "--moab $HOME/opt/moab"
      - save_state:
            build: "python2_pymoab"

  py2_pymoab_test:
    docker:
      - image: pyne/ubuntu_18.04_pymoab_pyne-deps:latest
    working_directory: ~/repo
    steps:
      - pull_state:
         build: "python2_pymoab"
      - run_test:
          falg: "python2"
  

  py2_dagmc_pymoab_build:
    docker:
      - image: pyne/ubuntu_18.04_dagmc_pymoab_pyne-deps:latest
    working_directory: ~/repo
    steps:
      - checkout_build:
          python: "python2"
          flags: "--moab $HOME/opt/moab --dagmc $HOME/opt/dagmc"
      - save_state:
            build: "python2_dagmc_pymoab"

  py2_dagmc_pymoab_test:
    docker:
      - image: pyne/ubuntu_18.04_dagmc_pymoab_pyne-deps:latest
    working_directory: ~/repo
    steps:
      - pull_state:
         build: "python2_dagmc_pymoab"
      - run_test:
          falg: "python2"

workflows:
  version: 2
  build_and_test:
    jobs:
      - py3_build
      - py3_test:
          requires:
             - py3_build
    
      - py2_build
      - py2_test:
          requires:
             - py2_build

      - py2_dagmc_build
      - py2_dagmc_test:
          requires:
             - py2_dagmc_build
      
      - py2_pymoab_build
      - py2_pymoab_test:
          requires:
             - py2_pymoab_build
      
      - py2_dagmc_pymoab_build
      - py2_dagmc_pymoab_test:
          requires:
             - py2_dagmc_pymoab_build
